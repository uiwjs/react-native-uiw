{"version":3,"file":"static/js/4782.8af4968d.chunk.js","mappings":"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","sources":["react-native/lib/SegmentedControl/README.md","pages/components/segmentedcontrol/index.tsx","react-native/lib/Button/index.js","react-native/lib/ButtonGroup/index.js","react-native/lib/Flex/FlexItem.js","react-native/lib/Flex/index.js","react-native/lib/SegmentedControl/index.js","react-native/lib/Spacing/index.js","react-native/lib/Typography/Div.js","react-native/lib/Typography/Text.js"],"sourcesContent":["\nexport default {\n    components: { 11: (function() { \"use strict\";\n\nvar _reactNative = require(\"react-native\");\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),28: (function() { \"use strict\";\n\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    color: \"#dc3545\",\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),42: (function() { \"use strict\";\n\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),55: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    disabled: true,\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),69: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _Spacing = _interopRequireDefault(require(\"@uiw/react-native/lib/Spacing\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"large\",\n    gutter: 10,\n    selectedIndex: 1,\n    value: ['申请', '审批', '提交']\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Spacing[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"default\",\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Spacing[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"small\",\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  }));\n}\nreturn Demo; })(), },\n    data: {\n  \"11\": {\n    \"name\": 11,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _reactNative = require(\\\"react-native\\\");\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { Text } from 'react-native';\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl value={['申请', '审批', '提交']} />\\n  );\\n}\\n\\nexport default Demo;\"\n  },\n  \"28\": {\n    \"name\": 28,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    color: \\\"#dc3545\\\",\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl color=\\\"#dc3545\\\" value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"42\": {\n    \"name\": 42,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"55\": {\n    \"name\": 55,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    disabled: true,\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { SegmentedControl } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl disabled gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"69\": {\n    \"name\": 69,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _Spacing = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Spacing\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"large\\\",\\n    gutter: 10,\\n    selectedIndex: 1,\\n    value: ['申请', '审批', '提交']\\n  }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Spacing[\\\"default\\\"], null), /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"default\\\",\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Spacing[\\\"default\\\"], null), /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"small\\\",\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  }));\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { SegmentedControl, Spacing } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <SegmentedControl size=\\\"large\\\" gutter={10} selectedIndex={1} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"default\\\" selectedIndex={2} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"small\\\" gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n    </>\\n  );\\n}\\nexport default Demo;\"\n  }\n},\n    source: \"SegmentedControl 分段器\\n---\\n\\n由至少 2 个分段控件组成，用作不同视图的显示；是 iOS 的推荐组件。\\n\\n\\n\\n### 基础示例\\n\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { Text } from 'react-native';\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl value={['申请', '审批', '提交']} />\\n  );\\n}\\n\\nexport default Demo;\\n```\\n\\n### 设置颜色\\n\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl color=\\\"#dc3545\\\" value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 设置间距\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n### 设置禁用\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { SegmentedControl } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl disabled gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 设置尺寸\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { SegmentedControl, Spacing } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <SegmentedControl size=\\\"large\\\" gutter={10} selectedIndex={1} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"default\\\" selectedIndex={2} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"small\\\" gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n    </>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### Props\\n\\n组件继承 `ButtonGroup` 组件。\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `style` | 自定义样式 | Object | {} |\\n| `value` | 初始值 | String[] | [] |\\n| `color` | 组件主色调 | String | `#108ee9` |\\n| `textColor` | 文本颜色 | Object: TextColorType | - |\\n| `size` | 按钮尺寸 | `small`, `default`, `large` | `default` |\\n| `disabled` | 是否启用 | Boolean | `false` |\\n| `selectedIndex` | 选中项在数组中的索引 | Number | 0 |\\n| `renderItem` | 自定义单元格 | (data, index, rowNum): void | - |\\n| `onValueChange` | 回调函数 | (label, selectedIndex): void | - |\\n\\n\\n### TextColorType\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `actived` | 激活 | String | `#fff` |\\n| `unactived` | 未激活 | String | `color` |\\n\",\n    headings:[],\n    headingsList:[],\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/SegmentedControl/README.md';\n\nexport const Component = () => <Preview {...md} path=\"/packages/core/src/SegmentedControl/README.md\" />;\n","import React from 'react';\nimport { StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { color } from '../utils';\nimport Div from '../Typography/Div';\nimport { useTheme } from '@shopify/restyle';\nexport default function ButtonView(props) {\n    const { children, style, textStyle: childStyle, rounded, bordered, color: buttonColor, type, size, disabled, loading, ...restProps } = props;\n    const theme = useTheme();\n    let backgroundColor, textColor, borderColor, borderWidth, borderRadius;\n    switch (type) {\n        case 'warning':\n            backgroundColor = theme.colors.func200 || '#FFD21D';\n            break;\n        case 'primary':\n            backgroundColor = theme.colors.func400 || '#1890FF';\n            break;\n        case 'success':\n            backgroundColor = theme.colors.func300 || '#52C41A';\n            break;\n        case 'danger':\n            backgroundColor = theme.colors.func600 || '#F4333C';\n            break;\n        case 'light':\n            backgroundColor = theme.colors.white || '#FFFFFF';\n            break;\n        case 'dark':\n            backgroundColor = theme.colors.black || '#000000';\n            break;\n        default:\n            break;\n    }\n    if (backgroundColor) {\n        backgroundColor = color(backgroundColor).rgb().string();\n    }\n    // if (!type) {\n    //   borderColor = color(theme.colors.black).alpha(0.32).rgb().string();\n    //   borderWidth = 1;\n    // }\n    if (disabled) {\n        textColor = color(theme.colors.disabled || '#CCCCCC')\n            .alpha(0.1)\n            .rgb()\n            .string();\n        backgroundColor = color(theme.colors.disabled || '#CCCCCC')\n            .rgb()\n            .string();\n    }\n    if (buttonColor) {\n        backgroundColor = color(buttonColor).rgb().string();\n    }\n    if (rounded && (typeof rounded === 'number' || typeof rounded === 'boolean')) {\n        borderRadius = rounded;\n    }\n    if (bordered) {\n        borderColor = color(theme.colors.gray200 || backgroundColor)\n            .alpha(1)\n            .rgb()\n            .string();\n        borderWidth = 1;\n    }\n    // if (!bordered || buttonColor) {\n    //   borderWidth = 0;\n    // }\n    const buttonStyle = {\n        backgroundColor: backgroundColor || '#3578e5',\n        borderColor,\n        borderWidth,\n        borderRadius,\n    };\n    if ((type || backgroundColor || buttonColor || buttonStyle.backgroundColor) && type !== 'light') {\n        textColor = color(theme.colors.white || '#FFFFFF')\n            .rgb()\n            .string();\n    }\n    else {\n        textColor = color(theme.colors.black || '#000000')\n            .rgb()\n            .string();\n    }\n    const textStyle = { color: textColor };\n    let sizeStyle = {};\n    if (size && styles[size]) {\n        sizeStyle = styles[size];\n    }\n    let boxStyle = {};\n    const styleKey = `${size}Box`;\n    if (size && styles[styleKey]) {\n        boxStyle = styles[styleKey];\n    }\n    if (!children) {\n        return null;\n    }\n    return (<TouchableOpacity testID=\"RNE__Button__wrap\" style={[styles.button, styles.content, buttonStyle, boxStyle, style]} disabled={disabled} {...restProps}>\n      {loading && <ActivityIndicator size={16} color={textColor} style={styles.icon}/>}\n      {React.Children.toArray(children).map((child, idx) => {\n            return (<Div testID=\"RNE__Button__div\" key={idx} style={[sizeStyle, styles.label, textStyle, childStyle]}>\n            {child}\n          </Div>);\n        })}\n    </TouchableOpacity>);\n}\nButtonView.defaultProps = {\n    activeOpacity: 0.5,\n    rounded: 5,\n    bordered: false,\n    size: 'default',\n};\nconst styles = StyleSheet.create({\n    button: {\n        borderStyle: 'solid',\n        display: 'flex',\n    },\n    content: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    icon: {\n        width: 16,\n        marginRight: 4,\n    },\n    label: {\n    // textAlign: 'center',\n    },\n    smallBox: {\n        paddingHorizontal: 3,\n    },\n    defaultBox: {\n        paddingHorizontal: 8,\n    },\n    largeBox: {\n        paddingHorizontal: 10,\n    },\n    small: {\n        marginVertical: 4,\n        fontSize: 14,\n    },\n    default: {\n        marginVertical: 8,\n        fontSize: 16,\n    },\n    large: {\n        marginVertical: 10,\n        fontSize: 18,\n    },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Flex from '../Flex';\nimport { useTheme } from '@shopify/restyle';\nconst styles = StyleSheet.create({\n    default: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n});\nexport default function ButtonGroup(props) {\n    const { children, gutter, inline = false, size, rounded, // Button Props\n    color, type, bordered = true, disabled, textStyle, // Button Props\n    direction, justify, align, wrap, // Flex Props\n    ...otherProps } = props;\n    const porps = { color, type, bordered, disabled, textStyle };\n    const flexProps = { direction, justify, align, wrap };\n    const childs = React.Children.toArray(children);\n    const theme = useTheme();\n    if (inline) {\n        flexProps.direction = 'row';\n        flexProps.wrap = 'wrap';\n    }\n    return (<Flex testID=\"RNE__ButtonGroup__wrap\" style={styles.default} {...flexProps} {...otherProps}>\n      {childs.map((child, idx) => {\n            if (!React.isValidElement(child)) {\n                return null;\n            }\n            const childStyle = {\n                flex: inline ? 0 : 1,\n            };\n            if (inline && gutter) {\n                childStyle.marginVertical = gutter / 2;\n            }\n            if (!gutter) {\n                if (childs.length !== 1 && (idx === 0 || idx < childs.length - 1)) {\n                    childStyle.borderTopRightRadius = 0;\n                    childStyle.borderBottomRightRadius = 0;\n                }\n                if (childs.length > 0 && idx !== 0) {\n                    childStyle.borderTopLeftRadius = 0;\n                    childStyle.borderBottomLeftRadius = 0;\n                }\n            }\n            if (!bordered) {\n                childStyle.borderWidth = 0;\n            }\n            if (bordered && !gutter) {\n                if ((idx > 0 && idx < children.length - 1) || idx === 0) {\n                    childStyle.borderRightWidth = StyleSheet.hairlineWidth;\n                    childStyle.borderColor = theme.colors.text_active;\n                }\n                if (idx > 0 && idx < children.length) {\n                    childStyle.borderLeftWidth = StyleSheet.hairlineWidth;\n                    childStyle.borderColor = theme.colors.text_active;\n                }\n            }\n            if (gutter && inline) {\n                childStyle.marginHorizontal = gutter / 2;\n            }\n            else if (gutter && idx !== 0) {\n                childStyle.marginLeft = gutter / 2;\n            }\n            return React.cloneElement(child, {\n                ...porps,\n                ...child.props,\n                size,\n                rounded,\n                style: [childStyle, child.props.style],\n            });\n        })}\n    </Flex>);\n}\n","import React from 'react';\nimport { View } from 'react-native';\nexport default function FlexItem(props) {\n    return <View {...props}/>;\n}\n","import React from 'react';\nimport { View } from 'react-native';\nimport FlexItem from './FlexItem';\nfunction Flex(props) {\n    const { direction, justify, align, wrap, children, style } = props;\n    const sty = {};\n    if (direction) {\n        sty.flexDirection = direction;\n    }\n    if (wrap) {\n        sty.flexWrap = wrap;\n    }\n    if (justify) {\n        sty.justifyContent = justify\n            .replace(/^start$/g, 'flex-start')\n            .replace(/^end$/g, 'flex-end')\n            .replace(/^between$/g, 'space-between')\n            .replace(/^around$/g, 'space-around')\n            .replace(/^evenly$/g, 'space-evenly');\n    }\n    if (align) {\n        sty.alignItems = align.replace(/^start$/g, 'flex-start').replace(/^end$/g, 'flex-end');\n    }\n    return (<View testID=\"RNE__Flex__wrap\" style={[sty, style]}>\n      {children &&\n            React.Children.map(children, (child) => {\n                if (!React.isValidElement(child)) {\n                    return null;\n                }\n                if (child.type && child.type.displayName === 'FlexItem') {\n                    return React.cloneElement(<FlexItem />, {\n                        ...child.props,\n                        style: [{ flex: 1 }, child.props.style],\n                    });\n                }\n                return child;\n            })}\n    </View>);\n}\nFlex.defaultProps = {\n    direction: 'row',\n    justify: 'start',\n    wrap: 'nowrap',\n    align: 'start',\n};\nFlex.Item = FlexItem;\nexport default Flex;\n","import React, { useState } from 'react';\nimport { Text } from 'react-native';\nimport ButtonGroup from '../ButtonGroup';\nimport Button from '../Button';\nimport { useTheme } from '@shopify/restyle';\nexport default function SegmentedControl(props) {\n    const theme = useTheme();\n    const [state, setState] = useState({\n        selectedIndex: props.selectedIndex || 0,\n    });\n    const handlePress = (label, selectedIndex) => {\n        setState({ selectedIndex });\n        const { onValueChange } = props;\n        onValueChange && onValueChange(label, selectedIndex);\n        return undefined;\n    };\n    const { value, selectedIndex, renderItem, textColor = {\n        actived: theme.colors.text_active || '#fff',\n        unactived: props.color ?? (theme.colors.primary_background || '#3578e5'),\n    }, colors = props.color || theme.colors.primary_background || '#3578e5', ...otherProps } = props;\n    return (<ButtonGroup {...otherProps}>\n      {value &&\n            value.map((label, key) => {\n                const styl = {};\n                const textStyle = {};\n                let textStyleColor = textColor.actived;\n                if (state.selectedIndex !== key + 1) {\n                    styl.backgroundColor = '#fff';\n                    textStyle.color = colors;\n                    textStyleColor = textColor.unactived;\n                }\n                const props = {\n                    type: 'primary',\n                    style: [styl, otherProps.textStyle],\n                    textStyle: [textStyle],\n                    onPress: () => handlePress(label, key + 1),\n                };\n                if (renderItem) {\n                    return renderItem(label, key + 1, props);\n                }\n                return React.cloneElement(<Button key={key}/>, { ...props }, <Text style={{ color: textStyleColor }}>{label}</Text>);\n            })}\n    </ButtonGroup>);\n}\nSegmentedControl.defaultProps = {\n    value: [],\n    size: 'small',\n    selectedIndex: 0,\n};\n","import React from 'react';\nimport { View } from 'react-native';\nexport default function Spacing(props) {\n    const { size = 'default', style, type = 'vertical', ...otherProps } = props;\n    const sty = {};\n    const keyName = type === 'vertical' ? 'height' : 'width';\n    sty[keyName] = 10;\n    if (size === 'small') {\n        sty[keyName] = 5;\n    }\n    else if (size === 'large') {\n        sty[keyName] = 15;\n    }\n    else if (typeof size === 'number') {\n        sty[keyName] = size;\n    }\n    return <View style={[sty, style]} {...otherProps}/>;\n}\n","import React, { Fragment } from 'react';\nimport Text from './Text';\nexport default function Div({ children, ...otherProps }) {\n    if (!children) {\n        return null;\n    }\n    const someStr = React.Children.toArray(children).every((item) => {\n        // eslint-disable-next-line no-mixed-operators\n        return typeof item === 'string' || (item && item.type && item.type.displayName === 'Text');\n    });\n    if (someStr) {\n        return <Text color=\"text\" {...otherProps} children={children}/>;\n    }\n    return (<Fragment>\n      {React.Children.toArray(children)\n            .map((child, idx) => {\n            if (typeof child === 'string') {\n                return <Text {...otherProps} children={child} key={idx}/>;\n            }\n            if (!React.isValidElement(child)) {\n                return undefined;\n            }\n            return React.cloneElement(child, { key: idx, ...otherProps });\n        })\n            .filter(Boolean)}\n    </Fragment>);\n}\n","import React from 'react';\nimport { Text as BaseText } from 'react-native';\nimport { useTheme } from '@shopify/restyle';\nimport { isEmpty } from 'lodash';\nconst Text = (props) => {\n    const { color = 'text', children, style, ...others } = props;\n    const theme = useTheme();\n    const getColorScheme = () => {\n        // app.ts 包裹了ThemeProvider传递了theme\n        if (!isEmpty(theme.colors)) {\n            return theme.colors;\n        }\n        return {\n            [color]: '#ccc',\n        };\n    };\n    return (<BaseText style={[{ color: getColorScheme()[color] }, style]} {...others}>\n      {children}\n    </BaseText>);\n};\nText.displayName = 'Text';\nexport default Text;\n"],"names":["components","_SegmentedControl","_interopRequireDefault","_react","obj","__esModule","createElement","value","color","gutter","selectedIndex","disabled","_Spacing","Fragment","size","data","source","headings","headingsList","Component","_jsx","Preview","_objectSpread","md","path","ButtonView","props","backgroundColor","textColor","borderColor","borderWidth","borderRadius","children","style","childStyle","textStyle","rounded","bordered","buttonColor","type","loading","restProps","_objectWithoutProperties","_excluded","theme","useTheme","colors","func200","func400","func300","func600","white","black","rgb","string","alpha","gray200","buttonStyle","sizeStyle","styles","boxStyle","styleKey","concat","_jsxs","TouchableOpacity","testID","button","content","ActivityIndicator","icon","React","toArray","map","child","idx","Div","label","defaultProps","activeOpacity","StyleSheet","create","borderStyle","display","flexDirection","alignItems","justifyContent","width","marginRight","smallBox","paddingHorizontal","defaultBox","largeBox","small","marginVertical","fontSize","default","large","flexWrap","ButtonGroup","_props$inline","inline","_props$bordered","direction","justify","align","wrap","otherProps","porps","flexProps","childs","Flex","flex","length","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderRightWidth","hairlineWidth","text_active","borderLeftWidth","marginHorizontal","marginLeft","FlexItem","View","sty","replace","displayName","Item","SegmentedControl","_props$color","_useState","useState","_useState2","_slicedToArray","state","setState","handlePress","onValueChange","renderItem","_props$textColor","actived","unactived","primary_background","_props$colors","key","styl","textStyleColor","onPress","Button","Text","Spacing","_props$size","_props$type","keyName","_ref","every","item","_createElement","filter","Boolean","others","BaseText","isEmpty","_defineProperty"],"sourceRoot":""}