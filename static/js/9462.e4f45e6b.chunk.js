"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9462],{79462:function(n,e,t){t.r(e),e.default="Form \u8868\u5355\n---\n\n\u96c6\u6210react-native-uiw\u8868\u5355\u63a7\u4ef6,\u5e76\u652f\u6301\u81ea\u5b9a\u4e49\u7ec4\u4ef6\n\n> \ud83d\udea7 \u6ce8\u610f\uff1a\u6d4b\u8bd5\u7248\u672c\u8c28\u614e\u4f7f\u7528\u3002\n\x3c!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;--\x3e\n\n### \u57fa\u7840\u793a\u4f8b\n\n\x3c!--DemoStart--\x3e \n```jsx\nimport { SafeAreaView } from 'react-native';\nimport { Form } from '@uiw/react-native';\n\nconst FormDemo = () => {\n  const form = Form.useForm();\n  const initialValues = { name: '\u738b\u6ef4\u6ef4' };\n  const items = [\n    {\n      type: 'input',\n      field: 'name',\n      name: '\u8f93\u5165\u6846',\n    }\n  ];\n  return (\n    <SafeAreaView>\n      <Form form={form} schema={items} initialValues={initialValues} />\n    </SafeAreaView>\n  );\n}\n```\n\x3c!--End--\x3e\n\n### form.validateFields\u8fdb\u884c\u8868\u5355\u9a8c\u8bc1\u63d0\u4ea4\n\n\x3c!--DemoStart--\x3e \n```jsx\nimport { SafeAreaView,Toast } from 'react-native';\nimport { Form,Button } from '@uiw/react-native';\n\nconst FormDemo = () => {\n  const form = Form.useForm();\n  const initialValues = {name: ''};\n  const items = [\n    {\n      type: 'input',\n      field: 'name',\n      name: '\u8f93\u5165\u6846',\n      attr: {},\n      required: true,\n      validate: (val) => (!val ? `\u8bf7\u8f93\u5165name` : ''),\n    }\n  ];\n  return (\n    <SafeAreaView>\n      <Form form={form} schema={items} initialValues={initialValues} />\n        <Button\n          type=\"primary\"\n          onPress={() => {\n            form\n              .validateFields()\n              .then((values) => Toast.success(JSON.stringify(values)))\n              .catch((errors) => Toast.warning(JSON.stringify(errors)));\n          }}>\n          \u786e\u5b9a\n        </Button>\n    </SafeAreaView>\n  );\n};\n```\n\x3c!--End--\x3e\n\n### customComponentList\u81ea\u5b9a\u4e49\u8868\u5355\u7ec4\u4ef6\n\n\x3c!--DemoStart--\x3e \n```jsx\nimport { SafeAreaView,Slider } from 'react-native';\nimport { Form } from '@uiw/react-native';\n\nconst FormDemo = () => {\n  const form = Form.useForm();\n  const customComponentList = {\n      render: <Slider />,\n  }\n  const initialValues = {name: ''};\n  const items = [\n    {\n      type: 'input',\n      field: 'name',\n      name: '\u8f93\u5165\u6846',\n      required: true,\n    },\n    {\n      type: 'render',\n      field: 'render',\n      name: '\u81ea\u5b9a\u4e49',\n    },\n  ];\n  return (\n    <SafeAreaView>\n      <Form form={form} schema={items}  customComponentList={customComponentList} initialValues={initialValues} />\n    </SafeAreaView>\n  );\n};\n```\n\x3c!--End--\x3e\n\n### watch\u76d1\u542c\u8868\u5355\u53d8\u5316\n\n\x3c!--DemoStart--\x3e \n```jsx\nimport { SafeAreaView } from 'react-native';\nimport { Form } from '@uiw/react-native';\n\nconst FormDemo = () => {\n  const form = Form.useForm();\n  const watch = {\n    name: (value) => console.log('value', value)\n  }\n  const initialValues = {name: ''};\n  const items = [\n    {\n      type: 'input',\n      field: 'name',\n      name: '\u8f93\u5165\u6846',\n      required: true,\n    }\n  ];\n  return (\n    <SafeAreaView>\n      <Form form={form} schema={items} watch={watch} initialValues={initialValues} />\n    </SafeAreaView>\n  );\n};\n```\n\x3c!--End--\x3e\n\n### \u52a8\u6001\u6dfb\u52a0\u8868\u5355list(\u5f53type\u4e3acardList\u65f6)\n\n> \u26a0\ufe0f \u8b66\u544a:\n  1.\u76ee\u524d\u4ec5\u80fd\u5d4c\u5957\u4e00\u5c42cardList\n  2.\u6211\u4eec\u6682\u65f6\u65e0\u6cd5\u9a8c\u8bc1\u5230\u6dfb\u52a0\u7684\u8868\u5355\u9879\u91cc\u7684\u6bcf\u4e00\u4e2a\u5b57\u6bb5\x3c!--rehype:style=background: #F08800; color: #fff;--\x3e\u3002\n\x3c!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;--\x3e\n\n\x3c!--DemoStart--\x3e \n```jsx\nimport { SafeAreaView,View,Text } from 'react-native';\nimport { Form,Button,Flex } from '@uiw/react-native';\n\nconst FormDemo = () => {\n  const form = Form.useForm();\n  const initialValues = {name: ''};\n  const items = [\n    {\n      type: 'cardList',\n      field: 'cardList',\n      name: '\u8054\u7cfb\u4eba\u96c6\u5408',\n      renderHeader: (i, { remove ,moveUp,moveDown,moveToTop,moveToBottom }) => (\n        <View style={{marginTop: 12, display: 'flex', justifyContent: 'space-between', flexDirection: 'row'}}>\n          <View>\n            <Text>{`\u8054\u7cfb\u4eba${i + 1}`}</Text>\n          </View>\n          <Flex>\n            <Text style={{marginRight:5}}  onPress={() => moveUp()}>\u4e0a\u79fb</Text>\n            <Text style={{marginRight:5}}  onPress={() => moveDown()}>\u4e0b\u79fb</Text>\n            <Text style={{marginRight:5}}  onPress={() => moveToTop()}>\u7f6e\u9876</Text>\n            <Text style={{marginRight:5}}  onPress={() => moveToBottom()}>\u7f6e\u5e95</Text>\n            <Text onPress={() => remove()}>\u5220\u9664</Text>\n          </Flex>\n        </View>\n      ),\n      renderAdd: ({ add }) => (\n        <View style={{marginTop: 12}}>\n          <Button onPress={() => add()} type=\"primary\" size=\"default\" bordered={false}>\n            \u65b0\u589e\u6570\u636e\n          </Button>\n        </View>\n      ),\n      items: [\n        {\n          type: 'input',\n          field: 'name',\n          name: '\u8054\u7cfb\u4eba\u59d3\u540d',\n        },\n        {\n          type: 'input',\n          field: 'phone',\n          name: '\u8054\u7cfb\u4eba\u7535\u8bdd',\n        },\n      ],\n    },\n  ];\n  return (\n    <SafeAreaView>\n      <Form form={form} schema={items} initialValues={initialValues} />\n    </SafeAreaView>\n  );\n};\n```\n\x3c!--End--\x3e\n\n### class\u7ec4\u4ef6\u83b7\u53d6form\n\n\x3c!--DemoStart--\x3e \n```jsx\nimport React from 'react'\nimport { SafeAreaView } from 'react-native';\nimport { Form, Button } from '@uiw/react-native';\n\nclass FormDemo extends React.Component {\n  render(){\n    const { form } = this.props\n    const schema = [\n      {\n        type: 'input',\n        field: 'name',\n        name: '\u8f93\u5165\u6846',\n        attr: {},\n        required: true,\n        validate: (val) => (!val ? `\u8bf7\u8f93\u5165name` : ''),\n      }\n    ];\n    return (\n      <SafeAreaView>\n        <Form\n          form={form}\n          schema={schema}\n          initialValues={{ name: '\u738b\u6ef4\u6ef4' }}\n        />\n        <Button\n          type=\"primary\"\n          onPress={() => form.validateFields().then((values) => {}).catch((errors) => {}) }>\n            \u786e\u5b9a\n        </Button>\n      </SafeAreaView>\n    );\n  }\n}\n\nconst FormComponent = Form.create(FormDemo)\n\nexport default FormComponent;\n```\n\x3c!--End--\x3e\n\n\n\n### FormProps\n```ts\ninterface FormProps<FormData = any, FieldValue = FormData[keyof FormData], FieldKey extends KeyType = keyof FormData> {\n  /**\n   * \u8868\u5355\u96c6\u5408\n  */\n  schema?: FormItemsProps[];\n  /**\n   * \u7ecf Form.useForm() \u521b\u5efa\u7684 form \u63a7\u5236\u5b9e\u4f8b\uff0c\u4e0d\u63d0\u4f9b\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\n  */\n  form: FormInstance<FormData, FieldValue, FieldKey>;\n  /**\n   * \u8868\u5355\u9ed8\u8ba4\u503c\uff0c\u53ea\u6709\u521d\u59cb\u5316\u4ee5\u53ca\u91cd\u7f6e\u65f6\u751f\u6548\n  */\n  initialValues?: Partial<FormData>;\n  /**\n   * \u652f\u6301\u9ed8\u8ba4\u548c\u5361\u7247\u4e24\u79cd\u6a21\u5f0f\n  */\n  mode?:'default' | 'card';\n  // \u8868\u5355\u662f\u5426\u5728onChange\u65f6\u8fdb\u884c\u9a8c\u8bc1\n  changeValidate?: boolean;\n  // \u76d1\u542c\u8868\u5355\u5b57\u6bb5\u53d8\u5316\n  watch?: Partial<Record<string, (value: unknown) => void>>;\n  // \u81ea\u5b9a\u4e49\u7ec4\u4ef6\n  customComponentList?: Partial<Record<string, JSX.Element>>;\n}\n```\n\n### FormItemsProps\n```ts\ninterface FormItemsProps {\n  // \u5b57\u6bb5\u540d\n  field: string;\n  // \u5b57\u6bb5\u7c7b\u578b(\u9ed8\u8ba4\u7ee7\u627f\u4e86react-native-uiw\u4e2d\u7684 input | textArea | slider | rate | radio | search | switch | checkBox | stepper \uff5c cardList   )\n  type: string;\n  // \u6807\u7b7e\u540d\n  name: string;\n  // \u9a8c\u8bc1\u89c4\u5219\n  validate?: RulesOption['validate'];\n  options?: Array<{ label: string; value: KeyType }>;\n  // \u8868\u5355\u63a7\u4ef6props\n  attr?: any;\n  // \u5c55\u793a\u662f\u5426\u5fc5\u586b\n  required?: boolean;\n  // \u662f\u5426\u9690\u85cf\n  hide?:boolean\n  // \u5f53type\u4e3acardList\u751f\u6548,\u6e32\u67d3\u6bcf\u4e00\u9879\u7684\u5934\u90e8\u5185\u5bb9\n  renderHeader?:(index:number,{ remove }:{ remove:()=>void })=>React.ReactNode;\n  // \u5f53type\u4e3acardList\u751f\u6548,\u6e32\u67d3\u6dfb\u52a0\u6309\u94ae\u7684\u6587\u6848\n  renderAdd?:( { add }:{ add:()=>void } )=>React.ReactNode;\n  // \u5f53type\u4e3acardList\u751f\u6548,\u914d\u7f6e\u8868\u5355\u9879\n  items?: Omit<FormItemsProps, 'validate' | 'required'>[];\n}\n```\n\n### FormInstance\n```ts\ntype FormInstance<FormData = any, FieldValue = FormData[keyof FormData], FieldKey extends KeyType = keyof FormData> = {\n  /**\n   * \u83b7\u53d6\u5bf9\u5e94\u5b57\u6bb5\u540d\u7684\u503c\n  */\n  getFieldValue: (field: FieldKey) => FieldValue;\n   /**\n   * \u8bbe\u7f6e\u5bf9\u5e94\u5b57\u6bb5\u540d\u7684\u503c\n  */\n  setFieldValue: (field: FieldKey, value: FieldValue) => void;\n   /**\n   * \u91cd\u5236\u8868\u5355\n  */\n  resetFieldValue: () => void;\n  /**\n   * \u89e6\u53d1\u9a8c\u8bc1\n  */\n  validate: () => Partial<Record<string, string>>;\n  /**\n   * \u89e6\u53d1\u8868\u5355\u9a8c\u8bc1\u83b7\u53d6\u8868\u5355\u6570\u636e\n  */\n  validateFields: () => Promise<FormData> | any;\n  getInnerMethods: (inner?: boolean) => InnerMethodsReturnType<FormData>;\n};\n```\n\n\n\n"}}]);
//# sourceMappingURL=9462.e4f45e6b.chunk.js.map