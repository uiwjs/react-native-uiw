{"version":3,"sources":["../../packages/core/lib/ActionSheet/README.md"],"names":[],"mappings":"sGAAA,OAAe","file":"static/js/73.c7562505.chunk.js","sourcesContent":["export default \"ActionSheet 动作面板\\n---\\n\\n该组件提供了一种动作面板, 底部缓缓出现\\n\\n<img src='https://user-images.githubusercontent.com/57083007/137631382-70df5dd3-0200-4ddb-bd11-3578ee99d032.gif' alt='ActionSheet' style='zoom:33%;' />\\n\\n### 基础示例\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { ActionSheet, Button,ActionSheetItem } from '@uiw/react-native';\\nfunction Demo() {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <Fragment>\\n     <Button onPress={()=>setVisible(true)}>打开 ActionSheet</Button>\\n      <ActionSheet\\n        visible={visible}\\n      >\\n        <ActionSheetItem onPress={()=>console.log('按钮一')}>按钮一</ActionSheetItem>\\n        <ActionSheetItem onPress={()=>console.log('按钮二')}>按钮二</ActionSheetItem>\\n      </ActionSheet>\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### 弹层关闭 && 自定义取消文本\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { ActionSheet, Button,ActionSheetItem } from '@uiw/react-native';\\nfunction Demo() {\\n  const [visible, setVisible] = useState(false)\\n  return (\\n    <Fragment>\\n     <Button onPress={()=>setVisible(true)}>打开 ActionSheet</Button>\\n      <ActionSheet\\n        visible={visible}\\n        onCancel={true}\\n        cancelText='取消'\\n      >\\n        <ActionSheetItem onPress={()=>console.log('按钮一')}>按钮一</ActionSheetItem>\\n        <ActionSheetItem onPress={()=>console.log('按钮二')}>按钮二</ActionSheetItem>\\n      </ActionSheet>\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### Props\\n\\n```ts\\nimport { StyleProp, ViewStyle } from 'react-native';\\nimport { ModalProps } from '@uiw/react-native';\\n\\nexport interface DividerStyle {\\n  itemDivider?: StyleProp<ViewStyle>,\\n  actionDivider?: StyleProp<ViewStyle>,\\n}\\n\\nexport interface ActionSheetProps extends ModalProps {\\n  /** 点击蒙层是否关闭 */\\n  onCancel?: Boolean;\\n  /** 分割线样式 */\\n  dividerStyle?: DividerStyle;\\n  /** 取消的容器样式 */\\n  containerStyle?: StyleProp<ViewStyle>;\\n  /** 动作在被触摸操作激活时以多少不透明度显示 默认 1 */\\n  activeOpacity?: number;\\n  /** 动作有触摸操作时显示出来的底层的颜色 默认 #f1f1f1 */\\n  underlayColor?: string;\\n  /** 取消的文本样式 */\\n  textStyle?: StyleProp<TextStyle>;\\n  /** 取消的文本 */\\n  cancelText?: React.ReactNode;\\n}\\n```\\n\\n### ActionSheetItem Props\\n\\n```ts\\nimport { TextStyle, StyleProp, ViewStyle } from 'react-native';\\n\\nexport interface ActionSheetItemProps {\\n  /** 容器样式 */\\n  containerStyle?: StyleProp<ViewStyle>;\\n  /** 文本样式 */\\n  textStyle?: StyleProp<TextStyle>;\\n  /** 点击 ActionSheetItem 触发的事件 */\\n  onPress?: ((event: GestureResponderEvent) => void),\\n}\\n```\";"],"sourceRoot":""}