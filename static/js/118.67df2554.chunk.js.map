{"version":3,"sources":["../../packages/core/lib/Timeline/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/118.67df2554.chunk.js","sourcesContent":["export default \"Timeline 时间轴\\n---\\n\\n垂直展示一系列的时间流信息。\\n\\n### 基础示例 & 自定义图标\\n\\n```jsx\\nimport { Timeline } from '@uiw/react-native';\\n\\nfunction Demo() {\\n const item = [\\n    {\\n      title: '声明式声明式声明式声',\\n      tips: '2021-08-07 12:00:00',\\n      desc: 'React 使创建交互式 UI 变得轻而易举。为你应用的每一个状态设计简洁的视图，当数据变动时 React 能高效更新并渲染合适的组件。',\\n        icon: {\\n        color: 'red'\\n      },\\n    },\\n    {\\n      title: '组件化',\\n      desc: '构建管理自身状态的封装组件，然后对其组合以构成复杂的 UI。',\\n      icon: {\\n        name: \\\"warning\\\",\\n        size: 20,\\n        color: 'blue'\\n      },\\n    },\\n    {\\n      title: '一次学习，随处编写',\\n      desc: [\\n        '无论你现在使用什么技术栈，在无需重写现有代码的前提下，通过引入 React 来开发新功能。',\\n        'React 还可以使用 Node 进行服务器渲染，或使用 React Native 开发原生移动应用。',\\n      ],\\n    },\\n  ];\\n  return (\\n     <Card title={`基础用法 & 自定义图标`}>\\n    <WingBlank>\\n      <Timeline\\n       style={{ backgroundColor: '#fff' }}\\n       items={item}\\n       />\\n    </WingBlank>\\n  </Card>\\n  );\\n}\\n```\\n\\n### 交替展现\\n\\n```jsx\\nimport { Timeline } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <Card title=\\\"交替展现\\\">\\n      <WingBlank>\\n        <Timeline\\n         style={{ backgroundColor: '#fff' }}\\n         items={item1}\\n         mode=\\\"alternate\\\"\\n         />\\n      </WingBlank>\\n    </Card>\\n  );\\n}\\n```\\n\\n### 展示在左边\\n\\n```jsx\\nimport { Timeline } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n   <Card title=\\\"展示在左边\\\">\\n    <WingBlank>\\n      <Timeline\\n       style={{ backgroundColor: '#fff' }}\\n       items={item}\\n       mode=\\\"left\\\"\\n       />\\n      </WingBlank>\\n   </Card>\\n  );\\n}\\n```\\n\\n### Props\\n\\n```ts\\nexport interface TimelineItemsProps {\\n  /** 标题 */\\n  title: string;\\n  /** 子标题 */\\n  tips?: string;\\n  /** 子项内容 */\\n  desc?: string | string[]; \\n    /** 自定义图标 */\\n  icon?: IconsProps;\\n}\\n\\nexport interface TimelineProps extends ViewProps {\\n  /** 是否倒序 */\\n  isReverse?: boolean;\\n  /** 步骤条数据列表 */\\n  items: TimelineItemsProps[];\\n  /** 改变时间轴和内容的相对位置 */\\n  mode?: 'left' | 'alternate';\\n}\\n```\";"],"sourceRoot":""}