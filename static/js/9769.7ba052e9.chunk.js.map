{"version":3,"file":"static/js/9769.7ba052e9.chunk.js","mappings":"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","sources":["react-native/lib/Table/README.md","pages/components/table/index.tsx","react-native/lib/Table/BodyRow.js","react-native/lib/Table/index.js"],"sourcesContent":["\nexport default {\n    components: { 6: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '配件名称',\n      dataIndex: 'partName',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件品牌',\n      dataIndex: 'partBrand',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件型号',\n      dataIndex: 'partModel',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 200\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 100\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\"\n  });\n};\nreturn Demo; })(),66: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '配件名称',\n      dataIndex: 'partName',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件品牌',\n      dataIndex: 'partBrand',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件型号',\n      dataIndex: 'partModel',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 300\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 110\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\",\n    horizontal: false\n  });\n};\nreturn Demo; })(),127: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '名称',\n      dataIndex: 'partName',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '品牌',\n      dataIndex: 'partBrand',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '型号',\n      dataIndex: 'partModel',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 100\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: 'red'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库 - UIW',\n      remark: 'UIW，ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW，ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW, ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW, ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\"\n  });\n};\nreturn Demo; })(), },\n    data: {\n  \"6\": {\n    \"name\": 6,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '配件名称',\\n      dataIndex: 'partName',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件品牌',\\n      dataIndex: 'partBrand',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件型号',\\n      dataIndex: 'partModel',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 200\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 100\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\"\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 200 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n              );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  },\n  \"66\": {\n    \"name\": 66,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '配件名称',\\n      dataIndex: 'partName',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件品牌',\\n      dataIndex: 'partBrand',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件型号',\\n      dataIndex: 'partModel',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 300\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 110\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\",\\n    horizontal: false\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 300 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 110 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n                );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n        horizontal={false}\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  },\n  \"127\": {\n    \"name\": 127,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '名称',\\n      dataIndex: 'partName',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '品牌',\\n      dataIndex: 'partBrand',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '型号',\\n      dataIndex: 'partModel',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 100\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: 'red'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库 - UIW',\\n      remark: 'UIW，ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW，ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW, ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW, ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\"\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '名称',\\n            dataIndex: 'partName',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '品牌',\\n            dataIndex: 'partBrand',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '型号',\\n            dataIndex: 'partModel',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'red'}}>详情</Button>\\n                </>\\n               );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库 - UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  }\n},\n    source: \"Table 表格\\n---\\n一个非常好用的Table表格 😄\\n### 基础示例\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 200 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n              );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n`horizontal` 水平排成一行\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 300 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 110 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n                );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n        horizontal={false}\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n### 超出自动省略\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '名称',\\n            dataIndex: 'partName',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '品牌',\\n            dataIndex: 'partBrand',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '型号',\\n            dataIndex: 'partModel',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'red'}}>详情</Button>\\n                </>\\n               );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库 - UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n### props\\n\\n| 参数                 | 说明         | 类型    | 默认值  |\\n| -------------------- | ------------ | ------- | ------- |\\n| `columns`           |\\t表格列的配置描述，具体项见下表       | ColumnsType[] | - |\\n| `data`            | 数据数组  | object[] | - |\\n| `rowKey`           | 表格行 key 的取值，可以是字符串或一个函数     | string | function(record): string    | key       |\\n| `horizontal`       | 是否水平排成一行  | bool | true |\\n| `style`       | Table样式 | object | - |\\n\\n### Column\\n\\n| 参数                 | 说明         | 类型    | 默认值  |\\n| -------------------- | ------------ | ------- | ------- |\\n| `dataIndex`           |\\t列数据在数据项中对应的路径，支持通过数组查询嵌套路径      | string | string[] | - |\\n| `ellipsis`            | 超过宽度将自动省略 | - | - |\\n| `title`           | 列头显示文字    | string | -   |\\n| `render`           | 生成复杂数据的渲染函数,参数为当前行数据    | function(record) {} | -   |\\n| `style`           | Table行内样式    | object | -   |\\n\",\n    headings:[],\n    headingsList:[],\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/Table/README.md';\n\nexport const Component = () => <Preview {...md} path=\"/packages/core/src/Table/README.md\" />;\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { colors } from '../utils';\nexport default function BodyRow({ columns, record, style }) {\n    return (<View style={[styles.row, style]}>\n      {columns.map((itm, idx) => {\n            // row渲染的内容\n            let val = '';\n            if (itm.dataIndex.indexOf('.') > -1) {\n                const firstKey = itm.dataIndex.split('.')[0];\n                const secondKey = itm.dataIndex.split('.')[1];\n                val = record[firstKey][secondKey];\n            }\n            else {\n                val = record[itm.dataIndex];\n            }\n            // 是否省略多余文字\n            let textEllipsize = itm.ellipsis && itm.ellipsis\n                ? {\n                    numberOfLines: 1,\n                    ellipsizeMode: 'tail',\n                }\n                : null;\n            return (<View key={itm.dataIndex} style={[(columns.length - 1 === idx) ? styles.firstLeftCell : styles.cell, itm.style ? itm.style : styles.titleFlex]}>\n            {itm.render ? (itm.render(record)) : (<Text selectable={true} {...textEllipsize} style={styles.content}>\n                {val}\n              </Text>)}\n          </View>);\n        })}\n    </View>);\n}\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignContent: 'center',\n        borderBottomWidth: 1,\n        borderRightWidth: 1,\n        borderLeftWidth: 1,\n        borderColor: colors.colorsPalette.dark70,\n    },\n    cell: {\n        borderRightWidth: 1,\n        borderColor: colors.colorsPalette.dark70,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    firstLeftCell: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRightWidth: 1,\n        borderColor: '#FFF',\n    },\n    content: {\n        color: '#888888',\n    },\n    titleFlex: {\n        flex: 1,\n    }\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport BodyRow from './BodyRow';\nimport { colors } from '../utils';\nimport { useTheme } from '@shopify/restyle';\n// table组件\nconst Table = ({ data, columns, rowKey, horizontal = true, style }) => {\n    const theme = useTheme();\n    const styles = createStyles({\n        bgColor: theme.colors.background || '#F5F5F5',\n        textColor: theme.colors.primary_text || '#ccc',\n    });\n    const getRowKey = (record) => {\n        const key = typeof rowKey === 'function' ? rowKey(record) : record && record[rowKey];\n        return key;\n    };\n    return (<ScrollView testID=\"RNE__Table__wrap\" style={[styles.conW, style]} horizontal={horizontal}>\n      <ScrollView horizontal={!horizontal}>\n        <View testID=\"RNE__Table__header\" style={styles.conTitle}>\n          {columns.map((itm, idx) => (<View key={itm.dataIndex + idx} style={[\n                styles.contRight,\n                { borderRightWidth: idx === columns.length - 1 ? 0 : 1 },\n                itm.style ? itm.style : styles.titleFlex,\n            ]}>\n              <Text style={styles.content}>{itm.title}</Text>\n            </View>))}\n        </View>\n        <View testID=\"RNE__Table__body\">\n          {data.map((item, idx) => {\n            const key = getRowKey(item);\n            return <BodyRow key={key} columns={columns} record={item}/>;\n        })}\n        </View>\n        {data.length === 0 && <Text style={styles.noDataText}>暂无数据...</Text>}\n      </ScrollView>\n    </ScrollView>);\n};\nfunction createStyles({ bgColor, textColor }) {\n    return StyleSheet.create({\n        title: {\n            backgroundColor: colors.white,\n            height: 30,\n        },\n        conTitle: {\n            flexDirection: 'row',\n            borderWidth: 1,\n            borderColor: colors.colorsPalette.dark70,\n        },\n        content: {\n            color: textColor,\n        },\n        contRight: {\n            borderRightWidth: 1,\n            borderRightColor: colors.colorsPalette.dark70,\n            borderBottomColor: colors.colorsPalette.dark70,\n            color: '#888888',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingTop: 5,\n            paddingBottom: 5,\n        },\n        conW: {\n            backgroundColor: bgColor,\n        },\n        noDataText: {\n            color: '#888888',\n            textAlign: 'center',\n            paddingTop: 4,\n            paddingBottom: 4,\n        },\n        titleFlex: {\n            flex: 1,\n        },\n    });\n}\nexport default Table;\n"],"names":["components","_react","_interopRequireDefault","_Table","_Button","obj","__esModule","createElement","columns","title","dataIndex","style","width","ellipsis","render","Fragment","size","bordered","textStyle","color","data","id","partName","partBrand","partModel","remark","rowKey","horizontal","source","headings","headingsList","Component","_jsx","Preview","md","path","BodyRow","_ref","record","View","styles","row","children","map","itm","idx","val","indexOf","firstKey","split","secondKey","textEllipsize","numberOfLines","ellipsizeMode","length","firstLeftCell","cell","titleFlex","Text","selectable","content","StyleSheet","create","flexDirection","justifyContent","alignContent","borderBottomWidth","borderRightWidth","borderLeftWidth","borderColor","colors","dark70","alignItems","flex","theme","useTheme","_ref2","bgColor","textColor","backgroundColor","height","conTitle","borderWidth","contRight","borderRightColor","borderBottomColor","paddingTop","paddingBottom","conW","noDataText","textAlign","createStyles","background","primary_text","ScrollView","testID","_jsxs","item","key"],"sourceRoot":""}