{"version":3,"file":"static/js/1309.de6dd324.chunk.js","mappings":"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","sources":["component/Preview/index.js","react-native/lib/Table/README.md","pages/components/table/index.tsx","react-native/lib/Button/index.js","react-native/lib/Table/BodyRow.js","react-native/lib/Table/index.js","react-native/lib/Typography/Div.js","react-native/lib/utils/colors.js","react-native/lib/utils/hooks.js","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const Preview = CodeLayout.Preview;\n  const Code = CodeLayout.Code;\n  const Toolbar = CodeLayout.Toolbar;\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                >\n                  <Preview>\n                    <Child />\n                  </Preview>\n                  <Toolbar text={code} copied={getBooleanValue(param, 'copied', true)}>\n                    {param.title || '示例'}\n                  </Toolbar>\n                  <Code>{code}</Code>\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: { 6: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '配件名称',\n      dataIndex: 'partName',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件品牌',\n      dataIndex: 'partBrand',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件型号',\n      dataIndex: 'partModel',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 200\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 100\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\"\n  });\n};\nreturn Demo; })(),66: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '配件名称',\n      dataIndex: 'partName',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件品牌',\n      dataIndex: 'partBrand',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件型号',\n      dataIndex: 'partModel',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 300\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 110\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\",\n    horizontal: false\n  });\n};\nreturn Demo; })(),127: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '名称',\n      dataIndex: 'partName',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '品牌',\n      dataIndex: 'partBrand',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '型号',\n      dataIndex: 'partModel',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 100\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: 'red'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库 - UIW',\n      remark: 'UIW，ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW，ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW, ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW, ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\"\n  });\n};\nreturn Demo; })(), },\n    data: {\n  \"6\": {\n    \"name\": 6,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '配件名称',\\n      dataIndex: 'partName',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件品牌',\\n      dataIndex: 'partBrand',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件型号',\\n      dataIndex: 'partModel',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 200\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 100\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\"\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 200 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n              );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  },\n  \"66\": {\n    \"name\": 66,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '配件名称',\\n      dataIndex: 'partName',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件品牌',\\n      dataIndex: 'partBrand',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件型号',\\n      dataIndex: 'partModel',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 300\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 110\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\",\\n    horizontal: false\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 300 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 110 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n                );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n        horizontal={false}\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  },\n  \"127\": {\n    \"name\": 127,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '名称',\\n      dataIndex: 'partName',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '品牌',\\n      dataIndex: 'partBrand',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '型号',\\n      dataIndex: 'partModel',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 100\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: 'red'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库 - UIW',\\n      remark: 'UIW，ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW，ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW, ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW, ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\"\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '名称',\\n            dataIndex: 'partName',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '品牌',\\n            dataIndex: 'partBrand',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '型号',\\n            dataIndex: 'partModel',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'red'}}>详情</Button>\\n                </>\\n               );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库 - UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  }\n},\n    source: \"Table 表格\\n---\\n一个非常好用的Table表格 😄\\n### 基础示例\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 200 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n              );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n`horizontal` 水平排成一行\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 300 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 110 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n                );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n        horizontal={false}\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n### 超出自动省略\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '名称',\\n            dataIndex: 'partName',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '品牌',\\n            dataIndex: 'partBrand',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '型号',\\n            dataIndex: 'partModel',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'red'}}>详情</Button>\\n                </>\\n               );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库 - UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n### props\\n\\n| 参数                 | 说明         | 类型    | 默认值  |\\n| -------------------- | ------------ | ------- | ------- |\\n| `columns`           |\\t表格列的配置描述，具体项见下表       | ColumnsType[] | - |\\n| `data`            | 数据数组  | object[] | - |\\n| `rowKey`           | 表格行 key 的取值，可以是字符串或一个函数     | string | function(record): string    | key       |\\n| `horizontal`       | 是否水平排成一行  | bool | true |\\n| `style`       | Table样式 | object | - |\\n\\n### Column\\n\\n| 参数                 | 说明         | 类型    | 默认值  |\\n| -------------------- | ------------ | ------- | ------- |\\n| `dataIndex`           |\\t列数据在数据项中对应的路径，支持通过数组查询嵌套路径      | string | string[] | - |\\n| `ellipsis`            | 超过宽度将自动省略 | - | - |\\n| `title`           | 列头显示文字    | string | -   |\\n| `render`           | 生成复杂数据的渲染函数,参数为当前行数据    | function(record) {} | -   |\\n| `style`           | Table行内样式    | object | -   |\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/Table/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/Table/README.md\" />;\nexport default DEMO;\n","import React from 'react';\nimport { StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { color, colors } from '../utils';\nimport Div from '../Typography/Div';\nexport default function ButtonView(props) {\n  const {\n    children,\n    style,\n    textStyle: childStyle,\n    rounded,\n    bordered,\n    color: buttonColor,\n    type,\n    size,\n    disabled,\n    loading,\n    ...restProps\n  } = props;\n  let backgroundColor, textColor, borderColor, borderWidth, borderRadius;\n  switch (type) {\n    case 'warning':\n      backgroundColor = colors.yellow;\n      break;\n    case 'primary':\n      backgroundColor = colors.blue;\n      break;\n    case 'success':\n      backgroundColor = colors.green;\n      break;\n    case 'danger':\n      backgroundColor = colors.red;\n      break;\n    case 'light':\n      backgroundColor = colors.white;\n      break;\n    case 'dark':\n      backgroundColor = colors.black;\n      break;\n    default:\n      break;\n  }\n  if (backgroundColor) {\n    backgroundColor = color(backgroundColor).rgb().string();\n  }\n  if (type) {\n    textColor = color(backgroundColor).isLight() ? color(colors.black).rgb().string() : color(colors.white).rgb().string();\n  }\n  if (!type) {\n    borderColor = color(colors.black).alpha(0.32).rgb().string();\n    borderWidth = 1;\n  }\n  if (disabled) {\n    textColor = color(textColor).alpha(0.3).rgb().string();\n  }\n  if (buttonColor) {\n    backgroundColor = color(buttonColor).rgb().string();\n    textColor = color(buttonColor).isLight() ? color(buttonColor).darken(0.9).string() : color(buttonColor).lighten(0.9).string();\n  }\n  if (rounded && (typeof rounded === 'number' || typeof rounded === 'boolean')) {\n    borderRadius = rounded;\n  }\n  if (backgroundColor) {\n    borderColor = color(backgroundColor).darken(0.2).string();\n    borderWidth = 1;\n  }\n  if (!bordered) {\n    borderWidth = 0;\n  }\n  const buttonStyle = {\n    backgroundColor: backgroundColor || '#fff5',\n    borderColor,\n    borderWidth,\n    borderRadius\n  };\n  const textStyle = {\n    color: textColor\n  };\n  let sizeStyle = {};\n  if (size && styles[size]) {\n    sizeStyle = styles[size];\n  }\n  let boxStyle = {};\n  const styleKey = `${size}Box`;\n  if (size && styles[styleKey]) {\n    boxStyle = styles[styleKey];\n  }\n  if (!children) {\n    return null;\n  }\n  return <TouchableOpacity testID=\"RNE__Button__wrap\" style={[styles.button, styles.content, buttonStyle, boxStyle, style]} disabled={disabled} {...restProps}>\n      {loading && <ActivityIndicator size={16} color={textColor} style={styles.icon} />}\n      {React.Children.toArray(children).map((child, idx) => {\n      return <Div testID=\"RNE__Button__div\" key={idx} style={[sizeStyle, styles.label, textStyle, childStyle]}>\n            {child}\n          </Div>;\n    })}\n    </TouchableOpacity>;\n}\nButtonView.defaultProps = {\n  activeOpacity: 0.5,\n  rounded: 5,\n  bordered: true,\n  size: 'default'\n};\nconst styles = StyleSheet.create({\n  button: {\n    borderStyle: 'solid',\n    display: 'flex'\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    width: 16,\n    marginRight: 4\n  },\n  label: {\n    // textAlign: 'center',\n  },\n  smallBox: {\n    paddingHorizontal: 3\n  },\n  defaultBox: {\n    paddingHorizontal: 8\n  },\n  largeBox: {\n    paddingHorizontal: 10\n  },\n  small: {\n    marginVertical: 4,\n    fontSize: 14\n  },\n  default: {\n    marginVertical: 8,\n    fontSize: 16\n  },\n  large: {\n    marginVertical: 10,\n    fontSize: 18\n  }\n});","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { colors } from '../utils';\nexport default function BodyRow({\n  columns,\n  record,\n  style\n}) {\n  return <View style={[styles.row, style]}>\n      {columns.map((itm, idx) => {\n      // row渲染的内容\n      let val = '';\n      if (itm.dataIndex.indexOf('.') > -1) {\n        const firstKey = itm.dataIndex.split('.')[0];\n        const secondKey = itm.dataIndex.split('.')[1];\n        val = record[firstKey][secondKey];\n      } else {\n        val = record[itm.dataIndex];\n      }\n\n      // 是否省略多余文字\n      let textEllipsize = itm.ellipsis && itm.ellipsis ? {\n        numberOfLines: 1,\n        ellipsizeMode: 'tail'\n      } : null;\n      return <View key={itm.dataIndex} style={[columns.length - 1 === idx ? styles.firstLeftCell : styles.cell, itm.style ? itm.style : styles.titleFlex]}>\n            {itm.render ? itm.render(record) : <Text selectable={true} {...textEllipsize} style={styles.content}>\n                {val}\n              </Text>}\n          </View>;\n    })}\n    </View>;\n}\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignContent: 'center',\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    borderLeftWidth: 1,\n    borderColor: colors.colorsPalette.dark70\n  },\n  cell: {\n    borderRightWidth: 1,\n    borderColor: colors.colorsPalette.dark70,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  firstLeftCell: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRightWidth: 1,\n    borderColor: '#FFF'\n  },\n  content: {\n    color: '#888888'\n  },\n  titleFlex: {\n    flex: 1\n  }\n});","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport BodyRow from './BodyRow';\nimport { colors } from '../utils';\n// table组件\nconst Table = ({\n  data,\n  columns,\n  rowKey,\n  horizontal = true,\n  style\n}) => {\n  const getRowKey = record => {\n    const key = typeof rowKey === 'function' ? rowKey(record) : record && record[rowKey];\n    return key;\n  };\n  return <ScrollView testID=\"RNE__Table__wrap\" style={[styles.conW, style]} horizontal={horizontal}>\n      <ScrollView horizontal={!horizontal}>\n        <View testID=\"RNE__Table__header\" style={styles.conTitle}>\n          {columns.map((itm, idx) => <View key={itm.dataIndex + idx} style={[styles.contRight, {\n          borderRightWidth: idx === columns.length - 1 ? 0 : 1\n        }, itm.style ? itm.style : styles.titleFlex]}>\n              <Text style={styles.content}>{itm.title}</Text>\n            </View>)}\n        </View>\n        <View testID=\"RNE__Table__body\">\n          {data.map((item, idx) => {\n          const key = getRowKey(item);\n          return <BodyRow key={key} columns={columns} record={item} />;\n        })}\n        </View>\n        {data.length === 0 && <Text style={styles.noDataText}>暂无数据...</Text>}\n      </ScrollView>\n    </ScrollView>;\n};\nconst styles = StyleSheet.create({\n  title: {\n    backgroundColor: colors.white,\n    height: 30\n  },\n  conTitle: {\n    flexDirection: 'row',\n    borderWidth: 1,\n    borderColor: colors.colorsPalette.dark70\n  },\n  content: {\n    color: colors.colorsPalette.dark30\n  },\n  contRight: {\n    borderRightWidth: 1,\n    borderRightColor: colors.colorsPalette.dark70,\n    borderBottomColor: colors.colorsPalette.dark70,\n    color: '#888888',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  conW: {\n    backgroundColor: colors.white\n  },\n  noDataText: {\n    color: '#888888',\n    textAlign: 'center',\n    paddingTop: 4,\n    paddingBottom: 4\n  },\n  titleFlex: {\n    flex: 1\n  }\n});\nexport default Table;","import React, { Fragment } from 'react';\nimport { Text } from 'react-native';\nexport default function Div({\n  children,\n  ...otherProps\n}) {\n  if (!children) {\n    return null;\n  }\n  const someStr = React.Children.toArray(children).every(item => {\n    // eslint-disable-next-line no-mixed-operators\n    return typeof item === 'string' || item && item.type && item.type.displayName === 'Text';\n  });\n  if (someStr) {\n    return <Text {...otherProps} children={children} />;\n  }\n  return <Fragment>\n      {React.Children.toArray(children).map((child, idx) => {\n      if (typeof child === 'string') {\n        return <Text {...otherProps} children={child} key={idx} />;\n      }\n      if (!React.isValidElement(child)) {\n        return undefined;\n      }\n      return React.cloneElement(child, {\n        key: idx,\n        ...otherProps\n      });\n    }).filter(Boolean)}\n    </Fragment>;\n}","export const green = '#28a745'; // 成功-绿色\nexport const blue = '#008EF0'; // 主要-蓝色\nexport const cyan = '#1EABCD'; // 信息-青色\nexport const navy = '#393E48'; // 导航-藏青\nexport const yellow = '#ffc107'; // 警告-黄色\nexport const orange = '#F95C2B'; // 提醒-橙色\nexport const red = '#dc3545'; // 危险-红色\n\nexport const black = '#000000';\nexport const white = '#ffffff';\nexport const colorsPalette = {\n  // DARKS TODO: deprecate and use greys\n  dark10: '#20303C',\n  dark20: '#43515C',\n  dark30: '#66737C',\n  dark40: '#858F96',\n  dark50: '#A3ABB0',\n  dark60: '#C2C7CB',\n  dark70: '#E0E3E5',\n  dark80: '#F2F4F5',\n  // GREYS\n  grey10: '#20303C',\n  grey20: '#4D5963',\n  grey30: '#79838A',\n  grey40: '#A6ACB1',\n  grey50: '#D2D6D8',\n  grey60: '#E8ECF0',\n  grey70: '#F0F4F7',\n  grey80: '#F8f9FA',\n  // BLUES\n  blue10: '#0097C3',\n  blue20: '#00A8DA',\n  blue30: '#00BBF2',\n  blue40: '#40CCF6',\n  blue50: '#85DFF9',\n  blue60: '#B2EAFB',\n  blue70: '#CFF3FD',\n  blue80: '#E3F8FE',\n  // CYAN,\n  cyan10: '#00AAAF',\n  cyan20: '#32BABC',\n  cyan30: '#3CC7C5',\n  cyan40: '#64D4D2',\n  cyan50: '#8BDFDD',\n  cyan60: '#B1E9E9',\n  cyan70: '#D8F4F4',\n  cyan80: '#EBF9F9',\n  // GREENS\n  green10: '#00A36F',\n  green20: '#00B47A',\n  green30: '#00CD8B',\n  green40: '#45DBAA',\n  green50: '#87E7C8',\n  green60: '#B2F0DC',\n  green70: '#CFF6E9',\n  green80: '#E3FAF2',\n  // YELLOWS\n  yellow10: '#E19800',\n  yellow20: '#F0A700',\n  yellow30: '#FFB600',\n  yellow40: '#FFCA45',\n  yellow50: '#FFDD87',\n  yellow60: '#FFEAB5',\n  yellow70: '#FFF2D1',\n  yellow80: '#FFF7E3',\n  // ORANGE,\n  orange10: '#D9644A',\n  orange20: '#E66A4E',\n  orange30: '#F27052',\n  orange40: '#F37E63',\n  orange50: '#F7A997',\n  orange60: '#FAC6BA',\n  orange70: '#FCE2DC',\n  orange80: '#FEF0ED',\n  // REDS\n  red10: '#D72E15',\n  red20: '#EB4229',\n  red30: '#FF563D',\n  red40: '#FF8472',\n  red50: '#FFB2A6',\n  red60: '#FFD0C9',\n  red70: '#FFE3DE',\n  red80: '#FFF0ED',\n  // PURPLE,\n  purple10: '#8B1079',\n  purple20: '#A0138E',\n  purple30: '#B13DAC',\n  purple40: '#C164BD',\n  purple50: '#D08BCD',\n  purple60: '#E0B1DE',\n  purple70: '#EFD8EE',\n  purple80: '#F7EBF7',\n  // VIOLETS\n  violet10: '#3022D0',\n  violet20: '#4434EB',\n  violet30: '#5847FF',\n  violet40: '#8579FF',\n  violet50: '#B2ABFF',\n  violet60: '#D1CCFF',\n  violet70: '#E3E0FF',\n  violet80: '#F0EEFF',\n  transparent: 'transparent'\n};","import { useRef, useEffect } from 'react';\nimport { usePersistFn, useUpdate } from 'ahooks';\n\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\nexport function usePropsValue(options) {\n  const {\n    value,\n    defaultValue,\n    onChange\n  } = options;\n  const update = useUpdate();\n  const stateRef = useRef(value !== undefined ? value : defaultValue);\n  if (value !== undefined) {\n    stateRef.current = value;\n  }\n  const setState = usePersistFn(v => {\n    if (value === undefined) {\n      stateRef.current = v;\n      update();\n    }\n    onChange?.(v);\n  });\n  return [stateRef.current, setState];\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","Preview","CodeLayout","Code","Toolbar","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","props","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","concat","data","value","getURLParameters","disableCheckered","bordered","text","copied","title","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","_react","_interopRequireDefault","_Table","_Button","obj","__esModule","createElement","columns","dataIndex","style","ellipsis","render","Fragment","size","textStyle","color","id","partName","partBrand","partModel","remark","rowKey","horizontal","md","ButtonView","backgroundColor","textColor","borderColor","borderWidth","borderRadius","childStyle","rounded","buttonColor","disabled","loading","restProps","colors","rgb","string","isLight","alpha","darken","lighten","buttonStyle","sizeStyle","styles","boxStyle","styleKey","TouchableOpacity","testID","button","content","ActivityIndicator","icon","React","map","idx","Div","label","defaultProps","activeOpacity","StyleSheet","borderStyle","display","flexDirection","alignItems","justifyContent","marginRight","smallBox","paddingHorizontal","defaultBox","largeBox","small","marginVertical","fontSize","default","large","BodyRow","record","View","row","itm","val","indexOf","firstKey","split","secondKey","textEllipsize","numberOfLines","ellipsizeMode","length","firstLeftCell","cell","titleFlex","Text","selectable","alignContent","borderBottomWidth","borderRightWidth","borderLeftWidth","flex","height","conTitle","contRight","borderRightColor","borderBottomColor","paddingTop","paddingBottom","conW","noDataText","textAlign","_ref$horizontal","ScrollView","item","key","otherProps","every","displayName","_createElement","filter","Boolean","green","blue","cyan","navy","yellow","orange","red","black","white","colorsPalette","dark10","dark20","dark30","dark40","dark50","dark60","dark70","dark80","grey10","grey20","grey30","grey40","grey50","grey60","grey70","grey80","blue10","blue20","blue30","blue40","blue50","blue60","blue70","blue80","cyan10","cyan20","cyan30","cyan40","cyan50","cyan60","cyan70","cyan80","green10","green20","green30","green40","green50","green60","green70","green80","yellow10","yellow20","yellow30","yellow40","yellow50","yellow60","yellow70","yellow80","orange10","orange20","orange30","orange40","orange50","orange60","orange70","orange80","red10","red20","red30","red40","red50","red60","red70","red80","purple10","purple20","purple30","purple40","purple50","purple60","purple70","purple80","violet10","violet20","violet30","violet40","violet50","violet60","violet70","violet80","transparent","usePrevious","useEffect","current","usePropsValue","options","onChange","update","useUpdate","stateRef","undefined","setState","usePersistFn","v","webpackEmptyContext","req","e","Error","keys","resolve","module","exports"],"sourceRoot":""}