{"version":3,"file":"static/js/8725.7a419615.chunk.js","mappings":"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","sources":["react-native/lib/SegmentedControl/README.md","pages/components/segmentedcontrol/index.tsx","react-native/lib/SegmentedControl/index.js","react-native/lib/Spacing/index.js"],"sourcesContent":["\nexport default {\n    components: { 11: (function() { \"use strict\";\n\nvar _reactNative = require(\"react-native\");\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),28: (function() { \"use strict\";\n\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    color: \"#dc3545\",\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),42: (function() { \"use strict\";\n\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),55: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    disabled: true,\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),69: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _Spacing = _interopRequireDefault(require(\"@uiw/react-native/lib/Spacing\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"large\",\n    gutter: 10,\n    selectedIndex: 1,\n    value: ['申请', '审批', '提交']\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Spacing[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"default\",\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Spacing[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"small\",\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  }));\n}\nreturn Demo; })(), },\n    data: {\n  \"11\": {\n    \"name\": 11,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _reactNative = require(\\\"react-native\\\");\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { Text } from 'react-native';\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl value={['申请', '审批', '提交']} />\\n  );\\n}\\n\\nexport default Demo;\"\n  },\n  \"28\": {\n    \"name\": 28,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    color: \\\"#dc3545\\\",\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl color=\\\"#dc3545\\\" value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"42\": {\n    \"name\": 42,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"55\": {\n    \"name\": 55,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    disabled: true,\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { SegmentedControl } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl disabled gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"69\": {\n    \"name\": 69,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _Spacing = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Spacing\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"large\\\",\\n    gutter: 10,\\n    selectedIndex: 1,\\n    value: ['申请', '审批', '提交']\\n  }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Spacing[\\\"default\\\"], null), /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"default\\\",\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Spacing[\\\"default\\\"], null), /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"small\\\",\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  }));\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { SegmentedControl, Spacing } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <SegmentedControl size=\\\"large\\\" gutter={10} selectedIndex={1} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"default\\\" selectedIndex={2} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"small\\\" gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n    </>\\n  );\\n}\\nexport default Demo;\"\n  }\n},\n    source: \"SegmentedControl 分段器\\n---\\n\\n由至少 2 个分段控件组成，用作不同视图的显示；是 iOS 的推荐组件。\\n\\n\\n\\n### 基础示例\\n\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { Text } from 'react-native';\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl value={['申请', '审批', '提交']} />\\n  );\\n}\\n\\nexport default Demo;\\n```\\n\\n### 设置颜色\\n\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl color=\\\"#dc3545\\\" value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 设置间距\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n### 设置禁用\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { SegmentedControl } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl disabled gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 设置尺寸\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { SegmentedControl, Spacing } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <SegmentedControl size=\\\"large\\\" gutter={10} selectedIndex={1} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"default\\\" selectedIndex={2} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"small\\\" gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n    </>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### Props\\n\\n组件继承 `ButtonGroup` 组件。\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `style` | 自定义样式 | Object | {} |\\n| `value` | 初始值 | String[] | [] |\\n| `color` | 组件主色调 | String | `#108ee9` |\\n| `textColor` | 文本颜色 | Object: TextColorType | - |\\n| `size` | 按钮尺寸 | `small`, `default`, `large` | `default` |\\n| `disabled` | 是否启用 | Boolean | `false` |\\n| `selectedIndex` | 选中项在数组中的索引 | Number | 0 |\\n| `renderItem` | 自定义单元格 | (data, index, rowNum): void | - |\\n| `onValueChange` | 回调函数 | (label, selectedIndex): void | - |\\n\\n\\n### TextColorType\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `actived` | 激活 | String | `#fff` |\\n| `unactived` | 未激活 | String | `color` |\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/SegmentedControl/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/SegmentedControl/README.md\" />;\nexport default DEMO;\n","import React, { useState } from 'react';\nimport { Text } from 'react-native';\nimport ButtonGroup from '../ButtonGroup';\nimport Button from '../Button';\nimport { useTheme } from '@shopify/restyle';\nexport default function SegmentedControl(props) {\n  const theme = useTheme();\n  const [state, setState] = useState({\n    selectedIndex: props.selectedIndex || 0\n  });\n  const handlePress = (label, selectedIndex) => {\n    setState({\n      selectedIndex\n    });\n    const {\n      onValueChange\n    } = props;\n    onValueChange && onValueChange(label, selectedIndex);\n    return undefined;\n  };\n  const {\n    value,\n    selectedIndex,\n    renderItem,\n    textColor = {\n      actived: theme.colors.text_active || '#fff',\n      unactived: props.color ?? (theme.colors.primary_background || '#3578e5')\n    },\n    colors = props.color || theme.colors.primary_background || '#3578e5',\n    ...otherProps\n  } = props;\n  return <ButtonGroup {...otherProps}>\n      {value && value.map((label, key) => {\n      const styl = {};\n      const textStyle = {};\n      let textStyleColor = textColor.actived;\n      if (state.selectedIndex !== key + 1) {\n        styl.backgroundColor = '#fff';\n        textStyle.color = colors;\n        textStyleColor = textColor.unactived;\n      }\n      const props = {\n        type: 'primary',\n        style: [styl, otherProps.textStyle],\n        textStyle: [textStyle],\n        onPress: () => handlePress(label, key + 1)\n      };\n      if (renderItem) {\n        return renderItem(label, key + 1, props);\n      }\n      return React.cloneElement(<Button key={key} />, {\n        ...props\n      }, <Text style={{\n        color: textStyleColor\n      }}>{label}</Text>);\n    })}\n    </ButtonGroup>;\n}\nSegmentedControl.defaultProps = {\n  value: [],\n  size: 'small',\n  selectedIndex: 0\n};","import React from 'react';\nimport { View } from 'react-native';\nexport default function Spacing(props) {\n  const {\n    size = 'default',\n    style,\n    type = 'vertical',\n    ...otherProps\n  } = props;\n  const sty = {};\n  const keyName = type === 'vertical' ? 'height' : 'width';\n  sty[keyName] = 10;\n  if (size === 'small') {\n    sty[keyName] = 5;\n  } else if (size === 'large') {\n    sty[keyName] = 15;\n  } else if (typeof size === 'number') {\n    sty[keyName] = size;\n  }\n  return <View style={[sty, style]} {...otherProps} />;\n}"],"names":["components","_SegmentedControl","_interopRequireDefault","_react","obj","__esModule","createElement","value","color","gutter","selectedIndex","disabled","_Spacing","Fragment","size","data","source","_jsx","Preview","_objectSpread","md","path","SegmentedControl","props","_props$color","theme","useTheme","_useState","useState","_useState2","_slicedToArray","state","setState","handlePress","label","onValueChange","renderItem","_props$textColor","textColor","actived","colors","text_active","unactived","primary_background","_props$colors","otherProps","_objectWithoutProperties","_excluded","ButtonGroup","children","map","key","styl","textStyle","textStyleColor","backgroundColor","type","style","onPress","React","Button","Text","defaultProps","Spacing","_props$size","_props$type","sty","keyName","View"],"sourceRoot":""}