(this.webpackJsonpwebsite=this.webpackJsonpwebsite||[]).push([[72],{1097:function(e,t,n){"use strict";n.r(t),t.default="ActionSheet \u52a8\u4f5c\u9762\u677f\n---\n\n\u8be5\u7ec4\u4ef6\u63d0\u4f9b\u4e86\u4e00\u79cd\u52a8\u4f5c\u9762\u677f, \u5e95\u90e8\u7f13\u7f13\u51fa\u73b0\n\n<image src='https://user-images.githubusercontent.com/57083007/137631382-70df5dd3-0200-4ddb-bd11-3578ee99d032.gif' alt='ActionSheet' style='zoom:33%;' />\n\n### \u57fa\u7840\u793a\u4f8b\n\n```jsx\nimport { Fragment, useState } from 'react';\nimport { ActionSheet, Button,ActionSheetItem } from '@uiw/react-native';\nfunction Demo() {\n  const [visible, setVisible] = useState(false)\n  return (\n    <Fragment>\n     <Button onPress={()=>setVisible(true)}>\u6253\u5f00 ActionSheet</Button>\n      <ActionSheet\n        visible={visible}\n      >\n        <ActionSheetItem onPress={()=>console.log('\u6309\u94ae\u4e00')}>\u6309\u94ae\u4e00</ActionSheetItem>\n        <ActionSheetItem onPress={()=>console.log('\u6309\u94ae\u4e8c')}>\u6309\u94ae\u4e8c</ActionSheetItem>\n      </ActionSheet>\n    </Fragment>\n  );\n}\n```\n\n### \u5f39\u5c42\u5173\u95ed && \u81ea\u5b9a\u4e49\u53d6\u6d88\u6587\u672c\n\n```jsx\nimport { Fragment, useState } from 'react';\nimport { ActionSheet, Button,ActionSheetItem } from '@uiw/react-native';\nfunction Demo() {\n  const [visible, setVisible] = useState(false)\n  return (\n    <Fragment>\n     <Button onPress={()=>setVisible(true)}>\u6253\u5f00 ActionSheet</Button>\n      <ActionSheet\n        visible={visible}\n        onCancel={true}\n        cancelText='\u53d6\u6d88'\n      >\n        <ActionSheetItem onPress={()=>console.log('\u6309\u94ae\u4e00')}>\u6309\u94ae\u4e00</ActionSheetItem>\n        <ActionSheetItem onPress={()=>console.log('\u6309\u94ae\u4e8c')}>\u6309\u94ae\u4e8c</ActionSheetItem>\n      </ActionSheet>\n    </Fragment>\n  );\n}\n```\n\n### Props\n\n```ts\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { ModalProps } from '@uiw/react-native';\n\nexport interface DividerStyle {\n  itemDivider?: StyleProp<ViewStyle>,\n  actionDivider?: StyleProp<ViewStyle>,\n}\n\nexport interface ActionSheetProps extends ModalProps {\n  /** \u70b9\u51fb\u8499\u5c42\u662f\u5426\u5173\u95ed */\n  onCancel?: Boolean;\n  /** \u5206\u5272\u7ebf\u6837\u5f0f */\n  dividerStyle?: DividerStyle;\n  /** \u53d6\u6d88\u7684\u5bb9\u5668\u6837\u5f0f */\n  containerStyle?: StyleProp<ViewStyle>;\n  /** \u52a8\u4f5c\u5728\u88ab\u89e6\u6478\u64cd\u4f5c\u6fc0\u6d3b\u65f6\u4ee5\u591a\u5c11\u4e0d\u900f\u660e\u5ea6\u663e\u793a \u9ed8\u8ba4 1 */\n  activeOpacity?: number;\n  /** \u52a8\u4f5c\u6709\u89e6\u6478\u64cd\u4f5c\u65f6\u663e\u793a\u51fa\u6765\u7684\u5e95\u5c42\u7684\u989c\u8272 \u9ed8\u8ba4 #f1f1f1 */\n  underlayColor?: string;\n  /** \u53d6\u6d88\u7684\u6587\u672c\u6837\u5f0f */\n  textStyle?: StyleProp<TextStyle>;\n  /** \u53d6\u6d88\u7684\u6587\u672c */\n  cancelText?: React.ReactNode;\n}\n```\n\n### ActionSheetItem Props\n\n```ts\nimport { TextStyle, StyleProp, ViewStyle } from 'react-native';\n\nexport interface ActionSheetItemProps {\n  /** \u5bb9\u5668\u6837\u5f0f */\n  containerStyle?: StyleProp<ViewStyle>;\n  /** \u6587\u672c\u6837\u5f0f */\n  textStyle?: StyleProp<TextStyle>;\n  /** \u70b9\u51fb ActionSheetItem \u89e6\u53d1\u7684\u4e8b\u4ef6 */\n  onPress?: ((event: GestureResponderEvent) => void),\n}\n```"}}]);
//# sourceMappingURL=72.3ba7e624.chunk.js.map