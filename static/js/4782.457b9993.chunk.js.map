{"version":3,"file":"static/js/4782.457b9993.chunk.js","mappings":"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","sources":["react-native/lib/SegmentedControl/README.md","pages/components/segmentedcontrol/index.tsx","react-native/lib/ButtonGroup/index.js","react-native/lib/Flex/FlexItem.js","react-native/lib/Flex/index.js","react-native/lib/SegmentedControl/index.js","react-native/lib/Spacing/index.js"],"sourcesContent":["\nexport default {\n    components: { 11: (function() { \"use strict\";\n\nvar _reactNative = require(\"react-native\");\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),28: (function() { \"use strict\";\n\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    color: \"#dc3545\",\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),42: (function() { \"use strict\";\n\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),55: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    disabled: true,\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  });\n}\nreturn Demo; })(),69: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _SegmentedControl = _interopRequireDefault(require(\"@uiw/react-native/lib/SegmentedControl\"));\nvar _Spacing = _interopRequireDefault(require(\"@uiw/react-native/lib/Spacing\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"large\",\n    gutter: 10,\n    selectedIndex: 1,\n    value: ['申请', '审批', '提交']\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Spacing[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"default\",\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  }), /*#__PURE__*/_react[\"default\"].createElement(_Spacing[\"default\"], null), /*#__PURE__*/_react[\"default\"].createElement(_SegmentedControl[\"default\"], {\n    size: \"small\",\n    gutter: 10,\n    selectedIndex: 2,\n    value: ['申请', '审批', '提交']\n  }));\n}\nreturn Demo; })(), },\n    data: {\n  \"11\": {\n    \"name\": 11,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _reactNative = require(\\\"react-native\\\");\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { Text } from 'react-native';\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl value={['申请', '审批', '提交']} />\\n  );\\n}\\n\\nexport default Demo;\"\n  },\n  \"28\": {\n    \"name\": 28,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    color: \\\"#dc3545\\\",\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl color=\\\"#dc3545\\\" value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"42\": {\n    \"name\": 42,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"55\": {\n    \"name\": 55,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    disabled: true,\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { SegmentedControl } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl disabled gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\"\n  },\n  \"69\": {\n    \"name\": 69,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _SegmentedControl = _interopRequireDefault(require(\\\"@uiw/react-native/lib/SegmentedControl\\\"));\\nvar _Spacing = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Spacing\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"large\\\",\\n    gutter: 10,\\n    selectedIndex: 1,\\n    value: ['申请', '审批', '提交']\\n  }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Spacing[\\\"default\\\"], null), /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"default\\\",\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  }), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Spacing[\\\"default\\\"], null), /*#__PURE__*/_react[\\\"default\\\"].createElement(_SegmentedControl[\\\"default\\\"], {\\n    size: \\\"small\\\",\\n    gutter: 10,\\n    selectedIndex: 2,\\n    value: ['申请', '审批', '提交']\\n  }));\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { SegmentedControl, Spacing } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <SegmentedControl size=\\\"large\\\" gutter={10} selectedIndex={1} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"default\\\" selectedIndex={2} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"small\\\" gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n    </>\\n  );\\n}\\nexport default Demo;\"\n  }\n},\n    source: \"SegmentedControl 分段器\\n---\\n\\n由至少 2 个分段控件组成，用作不同视图的显示；是 iOS 的推荐组件。\\n\\n\\n\\n### 基础示例\\n\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { Text } from 'react-native';\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl value={['申请', '审批', '提交']} />\\n  );\\n}\\n\\nexport default Demo;\\n```\\n\\n### 设置颜色\\n\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl color=\\\"#dc3545\\\" value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 设置间距\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport { SegmentedControl } from '@uiw/react-native';\\nimport React from 'react';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n### 设置禁用\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { SegmentedControl } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SegmentedControl disabled gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 设置尺寸\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { SegmentedControl, Spacing } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <>\\n      <SegmentedControl size=\\\"large\\\" gutter={10} selectedIndex={1} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"default\\\" selectedIndex={2} value={['申请', '审批', '提交']} />\\n      <Spacing />\\n      <SegmentedControl size=\\\"small\\\" gutter={10} selectedIndex={2} value={['申请', '审批', '提交']} />\\n    </>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### Props\\n\\n组件继承 `ButtonGroup` 组件。\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `style` | 自定义样式 | Object | {} |\\n| `value` | 初始值 | String[] | [] |\\n| `color` | 组件主色调 | String | `#108ee9` |\\n| `textColor` | 文本颜色 | Object: TextColorType | - |\\n| `size` | 按钮尺寸 | `small`, `default`, `large` | `default` |\\n| `disabled` | 是否启用 | Boolean | `false` |\\n| `selectedIndex` | 选中项在数组中的索引 | Number | 0 |\\n| `renderItem` | 自定义单元格 | (data, index, rowNum): void | - |\\n| `onValueChange` | 回调函数 | (label, selectedIndex): void | - |\\n\\n\\n### TextColorType\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `actived` | 激活 | String | `#fff` |\\n| `unactived` | 未激活 | String | `color` |\\n\",\n    headings:[],\n    headingsList:[],\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/SegmentedControl/README.md';\n\nexport const Component = () => <Preview {...md} path=\"/packages/core/src/SegmentedControl/README.md\" />;\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport Flex from '../Flex';\nimport { useTheme } from '@shopify/restyle';\nconst styles = StyleSheet.create({\n    default: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n});\nexport default function ButtonGroup(props) {\n    const { children, gutter, inline = false, size, rounded, // Button Props\n    color, type, bordered = true, disabled, textStyle, // Button Props\n    direction, justify, align, wrap, // Flex Props\n    ...otherProps } = props;\n    const porps = { color, type, bordered, disabled, textStyle };\n    const flexProps = { direction, justify, align, wrap };\n    const childs = React.Children.toArray(children);\n    const theme = useTheme();\n    if (inline) {\n        flexProps.direction = 'row';\n        flexProps.wrap = 'wrap';\n    }\n    return (<Flex testID=\"RNE__ButtonGroup__wrap\" style={styles.default} {...flexProps} {...otherProps}>\n      {childs.map((child, idx) => {\n            if (!React.isValidElement(child)) {\n                return null;\n            }\n            const childStyle = {\n                flex: inline ? 0 : 1,\n            };\n            if (inline && gutter) {\n                childStyle.marginVertical = gutter / 2;\n            }\n            if (!gutter) {\n                if (childs.length !== 1 && (idx === 0 || idx < childs.length - 1)) {\n                    childStyle.borderTopRightRadius = 0;\n                    childStyle.borderBottomRightRadius = 0;\n                }\n                if (childs.length > 0 && idx !== 0) {\n                    childStyle.borderTopLeftRadius = 0;\n                    childStyle.borderBottomLeftRadius = 0;\n                }\n            }\n            if (!bordered) {\n                childStyle.borderWidth = 0;\n            }\n            if (bordered && !gutter) {\n                if ((idx > 0 && idx < children.length - 1) || idx === 0) {\n                    childStyle.borderRightWidth = StyleSheet.hairlineWidth;\n                    childStyle.borderColor = theme.colors.text_active;\n                }\n                if (idx > 0 && idx < children.length) {\n                    childStyle.borderLeftWidth = StyleSheet.hairlineWidth;\n                    childStyle.borderColor = theme.colors.text_active;\n                }\n            }\n            if (gutter && inline) {\n                childStyle.marginHorizontal = gutter / 2;\n            }\n            else if (gutter && idx !== 0) {\n                childStyle.marginLeft = gutter / 2;\n            }\n            return React.cloneElement(child, {\n                ...porps,\n                ...child.props,\n                size,\n                rounded,\n                style: [childStyle, child.props.style],\n            });\n        })}\n    </Flex>);\n}\n","import React from 'react';\nimport { View } from 'react-native';\nexport default function FlexItem(props) {\n    return <View {...props}/>;\n}\n","import React from 'react';\nimport { View } from 'react-native';\nimport FlexItem from './FlexItem';\nfunction Flex(props) {\n    const { direction, justify, align, wrap, children, style } = props;\n    const sty = {};\n    if (direction) {\n        sty.flexDirection = direction;\n    }\n    if (wrap) {\n        sty.flexWrap = wrap;\n    }\n    if (justify) {\n        sty.justifyContent = justify\n            .replace(/^start$/g, 'flex-start')\n            .replace(/^end$/g, 'flex-end')\n            .replace(/^between$/g, 'space-between')\n            .replace(/^around$/g, 'space-around')\n            .replace(/^evenly$/g, 'space-evenly');\n    }\n    if (align) {\n        sty.alignItems = align.replace(/^start$/g, 'flex-start').replace(/^end$/g, 'flex-end');\n    }\n    return (<View testID=\"RNE__Flex__wrap\" style={[sty, style]}>\n      {children &&\n            React.Children.map(children, (child) => {\n                if (!React.isValidElement(child)) {\n                    return null;\n                }\n                if (child.type && child.type.displayName === 'FlexItem') {\n                    return React.cloneElement(<FlexItem />, {\n                        ...child.props,\n                        style: [{ flex: 1 }, child.props.style],\n                    });\n                }\n                return child;\n            })}\n    </View>);\n}\nFlex.defaultProps = {\n    direction: 'row',\n    justify: 'start',\n    wrap: 'nowrap',\n    align: 'start',\n};\nFlex.Item = FlexItem;\nexport default Flex;\n","import React, { useState } from 'react';\nimport { Text } from 'react-native';\nimport ButtonGroup from '../ButtonGroup';\nimport Button from '../Button';\nimport { useTheme } from '@shopify/restyle';\nexport default function SegmentedControl(props) {\n    const theme = useTheme();\n    const [state, setState] = useState({\n        selectedIndex: props.selectedIndex || 0,\n    });\n    const handlePress = (label, selectedIndex) => {\n        setState({ selectedIndex });\n        const { onValueChange } = props;\n        onValueChange && onValueChange(label, selectedIndex);\n        return undefined;\n    };\n    const { value, selectedIndex, renderItem, textColor = {\n        actived: theme.colors.text_active || '#fff',\n        unactived: props.color ?? (theme.colors.primary_background || '#3578e5'),\n    }, colors = props.color || theme.colors.primary_background || '#3578e5', ...otherProps } = props;\n    return (<ButtonGroup {...otherProps}>\n      {value &&\n            value.map((label, key) => {\n                const styl = {};\n                const textStyle = {};\n                let textStyleColor = textColor.actived;\n                if (state.selectedIndex !== key + 1) {\n                    styl.backgroundColor = '#fff';\n                    textStyle.color = colors;\n                    textStyleColor = textColor.unactived;\n                }\n                const props = {\n                    type: 'primary',\n                    style: [styl, otherProps.textStyle],\n                    textStyle: [textStyle],\n                    onPress: () => handlePress(label, key + 1),\n                };\n                if (renderItem) {\n                    return renderItem(label, key + 1, props);\n                }\n                return React.cloneElement(<Button key={key}/>, { ...props }, <Text style={{ color: textStyleColor }}>{label}</Text>);\n            })}\n    </ButtonGroup>);\n}\nSegmentedControl.defaultProps = {\n    value: [],\n    size: 'small',\n    selectedIndex: 0,\n};\n","import React from 'react';\nimport { View } from 'react-native';\nexport default function Spacing(props) {\n    const { size = 'default', style, type = 'vertical', ...otherProps } = props;\n    const sty = {};\n    const keyName = type === 'vertical' ? 'height' : 'width';\n    sty[keyName] = 10;\n    if (size === 'small') {\n        sty[keyName] = 5;\n    }\n    else if (size === 'large') {\n        sty[keyName] = 15;\n    }\n    else if (typeof size === 'number') {\n        sty[keyName] = size;\n    }\n    return <View style={[sty, style]} {...otherProps}/>;\n}\n"],"names":["components","_SegmentedControl","_interopRequireDefault","_react","obj","__esModule","createElement","value","color","gutter","selectedIndex","disabled","_Spacing","Fragment","size","data","source","headings","headingsList","Component","_jsx","Preview","md","path","styles","StyleSheet","create","default","display","flexDirection","flexWrap","ButtonGroup","props","children","inline","rounded","type","bordered","textStyle","direction","justify","align","wrap","otherProps","porps","flexProps","childs","React","toArray","theme","useTheme","Flex","testID","style","map","child","idx","childStyle","flex","marginVertical","length","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","borderWidth","borderRightWidth","hairlineWidth","borderColor","colors","text_active","borderLeftWidth","marginHorizontal","marginLeft","FlexItem","View","sty","justifyContent","replace","alignItems","displayName","defaultProps","Item","SegmentedControl","_props$color","state","setState","useState","handlePress","label","onValueChange","renderItem","textColor","actived","unactived","primary_background","key","styl","textStyleColor","backgroundColor","onPress","Button","Text","Spacing","keyName"],"sourceRoot":""}