{"version":3,"sources":["../../packages/core/lib/Timeline/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/115.8a4d16a6.chunk.js","sourcesContent":["export default \"Timeline 时间轴\\n---\\n\\n垂直展示一系列的时间流信息。\\n\\n### 基础示例\\n\\n```jsx\\nimport { Timeline } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <Timeline\\n      style={{ backgroundColor: '#fff' }}\\n      isReverse\\n      items={[\\n        { \\n          'title': '声明式声明式声明式声明式声明式声明式声明式声明式声明式', \\n          'tips': '2021-08-07 12:00:00',\\n          'desc': 'React 使创建交互式 UI 变得轻而易举。为你应用的每一个状态设计简洁的视图，当数据变动时 React 能高效更新并渲染合适的组件。'\\n        },\\n        {\\n          'title': '组件化',\\n          'color': 'yellow',\\n          'desc': '构建管理自身状态的封装组件，然后对其组合以构成复杂的 UI。'\\n        },\\n        {\\n          'title': '一次学习，随处编写', \\n          'color': 'red',\\n          'desc': [\\n            '无论你现在使用什么技术栈，在无需重写现有代码的前提下，通过引入 React 来开发新功能。',\\n            'React 还可以使用 Node 进行服务器渲染，或使用 React Native 开发原生移动应用。'\\n          ]\\n        }\\n      ]}\\n    />\\n  );\\n}\\n```\\n\\n### Props\\n\\n```ts\\nexport interface TimelineItemsProps {\\n  /** 标题 */\\n  title: string;\\n  /** 子标题 */\\n  tips?: string;\\n  /** 标示颜色 */\\n  color?: string;\\n  /** 子项内容 */\\n  desc?: string | string[]; \\n}\\n\\nexport interface TimelineProps extends ViewProps {\\n  /** 是否倒序 */\\n  isReverse?: boolean;\\n  /** 步骤条数据列表 */\\n  items: TimelineItemsProps[];\\n}\\n```\";"],"sourceRoot":""}