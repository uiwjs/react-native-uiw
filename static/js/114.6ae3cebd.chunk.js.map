{"version":3,"sources":["../../packages/core/lib/Slider/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/114.6ae3cebd.chunk.js","sourcesContent":["export default \"Slider 滑块输入条\\n---\\n\\n允许用户在一个区间中选择特定值。\\n\\n> 自带 Slider 已经过时，交于社区维护 [`react-native-slider`](https://github.com/react-native-community/react-native-slider)，当前组件是重新封装保持 iOS/android 效果一致。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n![](https://user-images.githubusercontent.com/57083007/146733306-cffada07-0f11-46cc-8969-1676c9070cda.gif)<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n### 基础示例\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { Text } from 'react-native';\\nimport { Slider } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  const [value, setValue] = useState(0.3);\\n  return (\\n    <Fragment>\\n      <Slider\\n        value={value}\\n        onChange={(cValue) => setValue(cValue)}\\n      />\\n      <Text>值：{value.toFixed(1)}</Text>\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### 不显示滑块\\n\\n```jsx\\nimport { Fragment,useState } from 'react';\\nimport { Slider } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  const [value, setValue] = useState(0.3);\\n  return (\\n    <Fragment>\\n      <Slider\\n        shownThumb={false}\\n        value={value}\\n        onChange={(cValue) => setValue(cValue)}\\n      />\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### 设置步长\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { Slider } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  const [value, setValue] = useState(0.3);\\n  return (\\n    <Fragment>\\n      <Slider\\n        step={0.2}\\n        shownThumb={false}\\n        value={value}\\n        onChange={(cValue) => setValue(cValue)}\\n      />\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `value` | 初始值 | Number | - |\\n| `step` | 滑块的步长值。该值应介于`0`到 `maxValue`~ `minValue`之间） | Number | - |\\n| `disabled` | 初始值 | Number | - |\\n| `maxValue` | 最大值 | Number | `1` |\\n| `minValue` | 最小值 | Number | `0` |\\n| `disabled` | 值为 `true` 时，滑块为禁用状态 | Boolean | - |\\n| `vertical` | 值为 `true` 时，Slider 为垂直方向 | Boolean | - |\\n| `trackStyle` | 设置轨道样式 | ViewStyle | - |\\n| `thumbStyle` | 设置拖拽按钮样式 | ViewStyle | - |\\n| `thumbTintColor` | 设置拖拽按钮背景颜色 | String | - |\\n| `maximumTrackTintColor` | 轨道背景颜色 | String | - |\\n| `minimumTrackTintColor` | 左侧或者上部分轨道颜色 | String | - |\\n| `animationConfig` | 设置动画参数 | Animated.SpringAnimationConfig | - |\\n| `animateTransitions` | 设置为 `true` 可使用默认的 `timing` 动画类型为值设置动画 | Boolean | - |\\n| `shownThumb` | 设置轨道上访拖拽滑块是否显示| Boolean | - |\\n| `thumbSize` | 滑块尺寸 | `{ width: number; height: number; }` | `{ width: 20, height: 20 }` |\\n| `onChange` | 当 `Slider` 的值发生改变时，会触发 `onChange` 事件，并把改变后的值作为参数传入 | (value: number) => void | - |\\n| `onSlidingComplete` | 当滑块停止滑动时触发事件 | (value: number) => void | - |\\n| `onSlidingStart` | 当滑块开始滑动时触发事件 | (value: number) => void | - |\\n\";"],"sourceRoot":""}