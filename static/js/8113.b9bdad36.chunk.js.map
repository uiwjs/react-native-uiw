{"version":3,"file":"static/js/8113.b9bdad36.chunk.js","mappings":"gHAAA","sources":["../../packages/core/lib/QuickList/README.md"],"sourcesContent":["export default \"QuickList 快速请求列表\\n---\\n\\n快速完成上拉下拉请求列表。\\n\\n![](https://user-images.githubusercontent.com/66067296/140003953-6d3c5a99-a656-4bd3-a1e9-3711550cb87d.gif)<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n### 基础示例\\n\\n<!--DemoStart--> \\n```jsx\\nimport React, { useRef, useState } from 'react';\\nimport { SafeAreaView, Image, View, Text } from 'react-native';\\nimport { QuickList, List } from '@uiw/react-native';\\n\\nconst imageUrl = 'https://c-ssl.duitang.com/uploads/item/202004/13/20200413013923_25wds.jpeg'\\n\\nconst defaultData = [\\n  { name: '@uiw/react-native QuickList', id: 1, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 2, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 3, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 4, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 5, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 6, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 7, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 8, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 9, img: imageUrl },\\n  { name: '@uiw/react-native QuickList', id: 10, img: imageUrl },\\n];\\n\\nconst QuickListDemo = (props) => {\\n  const baseRef = useRef();\\n  const [total, setTotal] = useState(0)\\n  const [data, setData] = useState([])\\n\\n  const sleep = (time) => new Promise((resolve) => setTimeout(() => resolve(''), time))\\n\\n  // 模拟请求\\n  const fethList = async (params) => {\\n    const { page, pageSize } = params\\n    if (page === 1) {\\n      await sleep(500)\\n      setData(defaultData)\\n    } else {\\n      let fetchData = []\\n      for (let i = 0; i < pageSize; i++) {\\n        const id = (data.length + 1 / 10 * pageSize) + i\\n        const name = `@uiw/react-native QuickList`;\\n        const img = imageUrl\\n        let obj = { name, id,img }\\n        fetchData.push(obj)\\n      }\\n      let newData = [...data, ...fetchData]\\n      await sleep(500)\\n      setData(newData)\\n    }\\n    setTotal(40)\\n  }\\n  // 列表渲染\\n  const ListItem = (item:any) => {\\n    return (\\n      <List flat={false}>\\n        <View\\n          style={{ padding: 10, display: \\\"flex\\\", alignItems: \\\"center\\\", flexDirection: \\\"row\\\" }}>\\n          <Image\\n            source={{\\n              uri: item.img,\\n            }}\\n            style={{ height: 70, width: 70, borderRadius: 50 }}\\n          />\\n          <View style={{ marginLeft: 10 }}>\\n            <Text style={{ marginBottom: 5, fontSize: 18 }}>react-native</Text>\\n            <Text style={{ color:\\\"#808080\\\"}}>{item.name}</Text>\\n          </View>\\n        </View>\\n      </List>\\n    )\\n  }\\n\\n  return (\\n    <SafeAreaView style={{ flex: 1 }}>\\n      <QuickList\\n        ref={baseRef}\\n        onFetch={fethList}\\n        data={data}\\n        total={total}\\n        renderItem={({ item }) => ListItem(item)}\\n        keyId=\\\"id\\\"\\n      />\\n    </SafeAreaView>\\n  );\\n}\\nexport default QuickListDemo\\n```\\n<!--End-->\\n\\n### Props\\n\\n```ts\\ninterface QuickListProps<ItemT> extends FlatListProps<ItemT> {\\n  onFetch: (params: any) => void // 请求的接口函数\\n  data: Array<any>, // 数据源\\n  renderItem: ListRenderItem<any>, // 从data列表中获取一个项目并将其渲染到列表中\\n  keyId: string | number,// 唯一健\\n  emptyView?: void | any,// 当列表为空时呈现\\n  pageSize?: number, // 每次加载数据条数\\n  total: number, // 总条数\\n  style?: Object,// 样式\\n}\\n\\nexport type QuickListComponent<ItemT = any> = (\\n  props: QuickListProps<ItemT>,\\n  ref?:  Ref<FlatList<ItemT>> | any\\n) => React.ReactElement\\n```\\n\";"],"names":[],"sourceRoot":""}