{"version":3,"file":"static/js/6796.f4032f49.chunk.js","mappings":"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","sources":["component/Preview/index.js","react-native/lib/changelog/README.md","pages/components/changelog/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const Preview = CodeLayout.Preview;\n  const Code = CodeLayout.Code;\n  const Toolbar = CodeLayout.Toolbar;\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                >\n                  <Preview>\n                    <Child />\n                  </Preview>\n                  <Toolbar text={code} copied={getBooleanValue(param, 'copied', true)}>\n                    {param.title || '示例'}\n                  </Toolbar>\n                  <Code>\n                    <code {...rest} />\n                  </Code>\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"# 更新日志\\n\\n<b><font face=\\\"微软雅黑\\\" size=3 color=#3578e5 >V4.0.0</font></b>\\n\\n`2023-04-14`\\n\\n**Bug Fixes**\\n\\n- Switch: 修复switch初始值(默认值)不能正确显示状态 [#583](https://github.com/uiwjs/react-native-uiw/pull/583)\\n- ActionSheet: 优化弹窗按钮的点击区域 [#562](https://github.com/uiwjs/react-native-uiw/pull/562)\\n- Input: 优化文本输入框组件文档 [#541](https://github.com/uiwjs/react-native-uiw/pull/541)\\n- SpeedDial: 修复文档遮挡，无法点击问题 [#545](https://github.com/uiwjs/react-native-uiw/pull/545)\\n- Tabs: 修复选项卡组件报错和展示溢出问题 [#550](https://github.com/uiwjs/react-native-uiw/pull/550)\\n- SpeedDial: 修复层级较低组件无法选中问题 [#553](https://github.com/uiwjs/react-native-uiw/pull/553)\\n- Form: 优化Form示例展示 [#2641](https://github.com/uiwjs/react-native-uiw/actions/runs/4644484377)\\n- ImagePicker: 修复android保存图片报错 [#2696](https://github.com/uiwjs/react-native-uiw/actions/runs/4695870443)\\n- Progress: 重构组件 变更参数 \\n\\n**Feature**\\n\\n- Theme: 新增主题色 和  theme文档使用说明，支持明暗主题适配 ([#586](https://github.com/uiwjs/react-native-uiw/pull/586))\\n- VerificationCode: 新增 VerificationCode 验证码倒计时组件 和 文档示例 [#589](https://github.com/uiwjs/react-native-uiw/pull/589)\\n- Tree: 新增 Tree 树形控件 和 文档示例 [#590](https://github.com/uiwjs/react-native-uiw/pull/590)\\n- Accordion: 新增 Accordion 手风琴组件  [#588](https://github.com/uiwjs/react-native-uiw/pull/588)\\n- Accordion: 新增 isMultiple、accordionStyle、iconShow、contentStyle、iconSize 文档示例 [#588](https://github.com/uiwjs/react-native-uiw/pull/588)\\n- ImagePicker: 新增 ImagePicker 图片上传组件 [#2674](https://github.com/uiwjs/react-native-uiw/actions/runs/4664460047)\\n- List: 新增 titleLabelStyle 属性支持 [#548](https://github.com/uiwjs/react-native-uiw/pull/548)\\n- ImagePicker: 新增 ImagePicker 图片保存功能 [#2691](https://github.com/uiwjs/react-native-uiw/actions/runs/4687708113)\\n- DatePeriodInput: 新增 DatePeriodInput 日期区间选择器 [#553](https://github.com/uiwjs/react-native-uiw/pull/553)\\n\\n### 1.在app.tsx入口文件添加如下\\n\\n```diff\\nimport { ThemeProvider,theme } from '@uiw/react-native';\\n\\n+ <ThemeProvider theme={theme.lightTheme}>\\n  {/** 其他Provider */}\\n+ </ThemeProvider>;\\n```\\n\\n### 2.VerificationCode 基本用法\\n\\n```diff\\nimport React from 'react';\\nimport { View } from 'react-native';\\nimport { VerificationCode } from '@uiw/react-native'\\n\\nconst Demo = () => {\\n+    const [value, setValue] = useState('');\\n    return (\\n      <View>\\n+        <VerificationCode\\n+              value={value}\\n+              count={3}\\n+              onChange={(val) => console.log(val)}\\n+              outerStyle={{ borderWidth: 1, borderColor: \\\"#ccc\\\" }}\\n+            />\\n      </View>\\n    )\\n  }\\n}\\n```\\n\\n### 3.Tree 基本用法\\n\\n```diff\\nimport React from 'react';\\nimport { View } from 'react-native';\\nimport { Tree } from '@uiw/react-native'\\n\\nconst Demo = () => {\\n+   const option = [\\n+     {\\n+       label: '一栋',\\n+       value: '01',\\n+       children: [\\n+         {\\n+           label: '01-1',\\n+           value: '01-1',\\n+           children: [{label: 01-1-1', value: '01-1-1'}],\\n+         },\\n+       ],\\n+     },\\n+   ]\\n   return (\\n      <View>\\n+        <Tree treeData={option} defaultExpandAll />\\n      </View>\\n    )\\n  }\\n}\\n```\\n\\n### 4.Accordion 基本用法 及 新增属性\\n\\n```diff\\nimport React from 'react';\\nimport { View } from 'react-native';\\nimport { Accordion } from '@uiw/react-native'\\n\\nconst Demo = () => {\\n+    const contents = [\\n+  {\\n+    title: <Text>Section 1</Text>,\\n+    content: (\\n+      <View>\\n+        <Text>Content of section 1</Text>\\n+        <Image source={{uri: 'https://wx3.sinaimg.cn/mw690/4718260ely1gt2cg7t5udj23dw1wkhdu.jpg'}} style={{height: 180}} />\\n+      </View>\\n+    ),\\n+  },\\n+  {\\n+    title: <Text>Section 2</Text>,\\n+    content: (\\n+      <View>\\n+        <Text>Content of section 2</Text>\\n+        <Image source={{uri: 'https://wx1.sinaimg.cn/mw690/4718260ely1gt2cg5r9zij22yo1o0x6p.jpg'}} style={{height: 180}} />\\n+      </View>\\n+    ),\\n+  },\\n    return (\\n      <View>\\n+         <Accordion sections={contents} />\\n          {/** isMultiple 是否可以展开多个.默认为是,当前为否 */}\\n+          <Accordion sections={contents} isMultiple={false} />\\n          {/** iconShow 是否展示右侧图标,默认为是,当前为否 */}\\n+          <Accordion sections={contents} iconShow={false} />\\n          {/** iconSize 设置右侧图标尺寸大小 */}\\n+          <Accordion sections={contents} iconSize={30} />\\n          {/** accordionStyle 每行列表手风琴样式*/}\\n+         <Accordion sections={contents} accordionStyle={{backgroundColor: '#3578e5'}} />\\n          {/** contentStyle 展开手风琴内容样式 */}\\n+         <Accordion sections={contents} contentStyle={{backgroundColor: '#FFD21D'}} />\\n      </View>\\n    )\\n  }\\n}\\n```\\n\\n### 5.ImagePicker 基本用法\\n\\n```diff\\nimport React from 'react';\\nimport { ImagePicker } from '@uiw/react-native'\\nimport { View } from 'react-native';\\n\\nconst Demo = () => {\\n   return (\\n      <View>\\n+         <ImagePicker\\n+              upload={(file: File[]) => {\\n+                let imageList: string[] = [];\\n+                file.forEach(file => imageList.push(file.uri));\\n+                return imageList;\\n+              }}\\n+              selectionLimit={2}\\n+            />\\n      </View>\\n    )\\n  }\\n}\\n```\\n\\n### 6.DatePeriodInput 基本用法\\n\\n```diff\\nimport React,{useState} from 'react';\\nimport { DatePeriodInput } from '@uiw/react-native'\\nimport { View } from 'react-native';\\n\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n   return (\\n      <View>\\n+          <DatePeriodInput\\n+                value={value}\\n+                onChange={date => {\\n+                 setState(date);\\n+                }}\\n+              />\\n      </View>\\n    )\\n  }\\n}\\n```\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/changelog/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/changelog/README.md\" />;\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","Preview","CodeLayout","Code","Toolbar","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","props","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","concat","data","value","getURLParameters","disableCheckered","bordered","text","copied","title","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}