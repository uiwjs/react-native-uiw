{"version":3,"file":"static/js/7054.9d0e7324.chunk.js","mappings":"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","sources":["component/Preview/index.js","react-native/lib/TreeSelect/README.md","pages/components/treeSelect/index.tsx","react-native/lib/Ellipsis/index.js","react-native/lib/Icon/index.js","react-native/lib/MaskLayer/index.js","react-native/lib/Modal/index.js","react-native/lib/TreeSelect/styles.js","react-native/lib/TreeSelect/tree-select.js","react-native/lib/TreeSelect/index.js","react-native/lib/utils/tree-select.js","react-native/lib/utils/colors.js","react-native/lib/utils/hooks.js","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const Preview = CodeLayout.Preview;\n  const Code = CodeLayout.Code;\n  const Toolbar = CodeLayout.Toolbar;\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                >\n                  <Preview>\n                    <Child />\n                  </Preview>\n                  <Toolbar text={code} copied={getBooleanValue(param, 'copied', true)}>\n                    {param.title || '示例'}\n                  </Toolbar>\n                  <Code>\n                    <code {...rest} />\n                  </Code>\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: { 12: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeSelect = _interopRequireDefault(require(\"@uiw/react-native/lib/TreeSelect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  var option = [{\n    label: '北京',\n    value: '01',\n    children: [{\n      label: '东城区',\n      value: '01-1'\n    }, {\n      label: '西城区',\n      value: '01-2'\n    }, {\n      label: '崇文区',\n      value: '01-3'\n    }, {\n      label: '宣武区',\n      value: '01-4'\n    }]\n  }, {\n    label: '浙江',\n    value: '02',\n    children: [{\n      label: '杭州',\n      value: '02-1',\n      children: [{\n        label: '西湖区',\n        value: '02-1-1'\n      }, {\n        label: '上城区',\n        value: '02-1-2'\n      }, {\n        label: '江干区',\n        value: '02-1-3'\n      }, {\n        label: '下城区',\n        value: '02-1-4'\n      }]\n    }, {\n      label: '宁波',\n      value: '02-2',\n      children: [{\n        label: 'xx区',\n        value: '02-2-1'\n      }, {\n        label: 'yy区',\n        value: '02-2-2'\n      }]\n    }, {\n      label: '温州',\n      value: '02-3'\n    }, {\n      label: '嘉兴',\n      value: '02-4'\n    }, {\n      label: '湖州',\n      value: '02-5'\n    }, {\n      label: '绍兴',\n      value: '02-6'\n    }]\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_TreeSelect[\"default\"], {\n    defaultValue: ['01', '01-1'],\n    options: option,\n    onChange: function onChange(value, nodes) {\n      console.log(value, nodes);\n    }\n  });\n}\nreturn Demo; })(),115: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeSelect = _interopRequireDefault(require(\"@uiw/react-native/lib/TreeSelect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  var option = [{\n    labels: '北京',\n    values: '01',\n    children: [{\n      labels: '东城区',\n      values: '01-1'\n    }, {\n      labels: '西城区',\n      values: '01-2'\n    }, {\n      labels: '崇文区',\n      values: '01-3'\n    }, {\n      labels: '宣武区',\n      values: '01-4'\n    }]\n  }, {\n    labels: '浙江',\n    values: '02',\n    children: [{\n      labels: '杭州',\n      values: '02-1',\n      children: [{\n        labels: '西湖区',\n        values: '02-1-1'\n      }, {\n        labels: '上城区',\n        values: '02-1-2'\n      }, {\n        labels: '江干区',\n        values: '02-1-3'\n      }, {\n        labels: '下城区',\n        values: '02-1-4'\n      }]\n    }, {\n      labels: '宁波',\n      values: '02-2',\n      children: [{\n        labels: 'xx区',\n        values: '02-2-1'\n      }, {\n        labels: 'yy区',\n        values: '02-2-2'\n      }]\n    }, {\n      labels: '温州',\n      values: '02-3'\n    }, {\n      labels: '嘉兴',\n      values: '02-4'\n    }, {\n      labels: '湖州',\n      values: '02-5'\n    }, {\n      labels: '绍兴',\n      values: '02-6'\n    }]\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_TreeSelect[\"default\"], {\n    defaultValue: ['01', '01-1'],\n    options: option,\n    fieldNames: {\n      label: \"labels\",\n      value: 'values',\n      children: 'children'\n    },\n    onChange: function onChange(value, nodes) {\n      console.log(value, nodes);\n    }\n  });\n}\nreturn Demo; })(), },\n    data: {\n  \"12\": {\n    \"name\": 12,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _TreeSelect = _interopRequireDefault(require(\\\"@uiw/react-native/lib/TreeSelect\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  var option = [{\\n    label: '北京',\\n    value: '01',\\n    children: [{\\n      label: '东城区',\\n      value: '01-1'\\n    }, {\\n      label: '西城区',\\n      value: '01-2'\\n    }, {\\n      label: '崇文区',\\n      value: '01-3'\\n    }, {\\n      label: '宣武区',\\n      value: '01-4'\\n    }]\\n  }, {\\n    label: '浙江',\\n    value: '02',\\n    children: [{\\n      label: '杭州',\\n      value: '02-1',\\n      children: [{\\n        label: '西湖区',\\n        value: '02-1-1'\\n      }, {\\n        label: '上城区',\\n        value: '02-1-2'\\n      }, {\\n        label: '江干区',\\n        value: '02-1-3'\\n      }, {\\n        label: '下城区',\\n        value: '02-1-4'\\n      }]\\n    }, {\\n      label: '宁波',\\n      value: '02-2',\\n      children: [{\\n        label: 'xx区',\\n        value: '02-2-1'\\n      }, {\\n        label: 'yy区',\\n        value: '02-2-2'\\n      }]\\n    }, {\\n      label: '温州',\\n      value: '02-3'\\n    }, {\\n      label: '嘉兴',\\n      value: '02-4'\\n    }, {\\n      label: '湖州',\\n      value: '02-5'\\n    }, {\\n      label: '绍兴',\\n      value: '02-6'\\n    }]\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_TreeSelect[\\\"default\\\"], {\\n    defaultValue: ['01', '01-1'],\\n    options: option,\\n    onChange: function onChange(value, nodes) {\\n      console.log(value, nodes);\\n    }\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        label: '北京',\\n        value: '01',\\n        children: [\\n          {\\n            label: '东城区',\\n            value: '01-1',\\n          },\\n          {\\n            label: '西城区',\\n            value: '01-2',\\n          },\\n          {\\n            label: '崇文区',\\n            value: '01-3',\\n          },\\n          {\\n            label: '宣武区',\\n            value: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        label: '浙江',\\n        value: '02',\\n        children: [\\n          {\\n            label: '杭州',\\n            value: '02-1',\\n            children: [\\n              {\\n                label: '西湖区',\\n                value: '02-1-1',\\n              },\\n              {\\n                label: '上城区',\\n                value: '02-1-2',\\n              },\\n              {\\n                label: '江干区',\\n                value: '02-1-3',\\n              },\\n              {\\n                label: '下城区',\\n                value: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            label: '宁波',\\n            value: '02-2',\\n            children: [\\n              {\\n                label: 'xx区',\\n                value: '02-2-1',\\n              },\\n              {\\n                label: 'yy区',\\n                value: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            label: '温州',\\n            value: '02-3',\\n          },\\n          {\\n            label: '嘉兴',\\n            value: '02-4',\\n          },\\n          {\\n            label: '湖州',\\n            value: '02-5',\\n          },\\n          {\\n            label: '绍兴',\\n            value: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\"\n  },\n  \"115\": {\n    \"name\": 115,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _TreeSelect = _interopRequireDefault(require(\\\"@uiw/react-native/lib/TreeSelect\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  var option = [{\\n    labels: '北京',\\n    values: '01',\\n    children: [{\\n      labels: '东城区',\\n      values: '01-1'\\n    }, {\\n      labels: '西城区',\\n      values: '01-2'\\n    }, {\\n      labels: '崇文区',\\n      values: '01-3'\\n    }, {\\n      labels: '宣武区',\\n      values: '01-4'\\n    }]\\n  }, {\\n    labels: '浙江',\\n    values: '02',\\n    children: [{\\n      labels: '杭州',\\n      values: '02-1',\\n      children: [{\\n        labels: '西湖区',\\n        values: '02-1-1'\\n      }, {\\n        labels: '上城区',\\n        values: '02-1-2'\\n      }, {\\n        labels: '江干区',\\n        values: '02-1-3'\\n      }, {\\n        labels: '下城区',\\n        values: '02-1-4'\\n      }]\\n    }, {\\n      labels: '宁波',\\n      values: '02-2',\\n      children: [{\\n        labels: 'xx区',\\n        values: '02-2-1'\\n      }, {\\n        labels: 'yy区',\\n        values: '02-2-2'\\n      }]\\n    }, {\\n      labels: '温州',\\n      values: '02-3'\\n    }, {\\n      labels: '嘉兴',\\n      values: '02-4'\\n    }, {\\n      labels: '湖州',\\n      values: '02-5'\\n    }, {\\n      labels: '绍兴',\\n      values: '02-6'\\n    }]\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_TreeSelect[\\\"default\\\"], {\\n    defaultValue: ['01', '01-1'],\\n    options: option,\\n    fieldNames: {\\n      label: \\\"labels\\\",\\n      value: 'values',\\n      children: 'children'\\n    },\\n    onChange: function onChange(value, nodes) {\\n      console.log(value, nodes);\\n    }\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        labels: '北京',\\n        values: '01',\\n        children: [\\n          {\\n            labels: '东城区',\\n            values: '01-1',\\n          },\\n          {\\n            labels: '西城区',\\n            values: '01-2',\\n          },\\n          {\\n            labels: '崇文区',\\n            values: '01-3',\\n          },\\n          {\\n            labels: '宣武区',\\n            values: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        labels: '浙江',\\n        values: '02',\\n        children: [\\n          {\\n            labels: '杭州',\\n            values: '02-1',\\n            children: [\\n              {\\n                labels: '西湖区',\\n                values: '02-1-1',\\n              },\\n              {\\n                labels: '上城区',\\n                values: '02-1-2',\\n              },\\n              {\\n                labels: '江干区',\\n                values: '02-1-3',\\n              },\\n              {\\n                labels: '下城区',\\n                values: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '宁波',\\n            values: '02-2',\\n            children: [\\n              {\\n                labels: 'xx区',\\n                values: '02-2-1',\\n              },\\n              {\\n                labels: 'yy区',\\n                values: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '温州',\\n            values: '02-3',\\n          },\\n          {\\n            labels: '嘉兴',\\n            values: '02-4',\\n          },\\n          {\\n            labels: '湖州',\\n            values: '02-5',\\n          },\\n          {\\n            labels: '绍兴',\\n            values: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       fieldNames={{ label: \\\"labels\\\", value: 'values', children: 'children'}}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\"\n  }\n},\n    source: \"TreeSelect 级联选择器\\n---\\n\\n> 🚧 注意：测试版本谨慎使用。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n<!-- ![](https://user-images.githubusercontent.com/66067296/147335182-2abf199f-e206-4b4b-9edf-f1c29568d884.gif) -->\\n<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n### 基础示例\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        label: '北京',\\n        value: '01',\\n        children: [\\n          {\\n            label: '东城区',\\n            value: '01-1',\\n          },\\n          {\\n            label: '西城区',\\n            value: '01-2',\\n          },\\n          {\\n            label: '崇文区',\\n            value: '01-3',\\n          },\\n          {\\n            label: '宣武区',\\n            value: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        label: '浙江',\\n        value: '02',\\n        children: [\\n          {\\n            label: '杭州',\\n            value: '02-1',\\n            children: [\\n              {\\n                label: '西湖区',\\n                value: '02-1-1',\\n              },\\n              {\\n                label: '上城区',\\n                value: '02-1-2',\\n              },\\n              {\\n                label: '江干区',\\n                value: '02-1-3',\\n              },\\n              {\\n                label: '下城区',\\n                value: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            label: '宁波',\\n            value: '02-2',\\n            children: [\\n              {\\n                label: 'xx区',\\n                value: '02-2-1',\\n              },\\n              {\\n                label: 'yy区',\\n                value: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            label: '温州',\\n            value: '02-3',\\n          },\\n          {\\n            label: '嘉兴',\\n            value: '02-4',\\n          },\\n          {\\n            label: '湖州',\\n            value: '02-5',\\n          },\\n          {\\n            label: '绍兴',\\n            value: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\\n```\\n\\n\\n### 自定义字段名称\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        labels: '北京',\\n        values: '01',\\n        children: [\\n          {\\n            labels: '东城区',\\n            values: '01-1',\\n          },\\n          {\\n            labels: '西城区',\\n            values: '01-2',\\n          },\\n          {\\n            labels: '崇文区',\\n            values: '01-3',\\n          },\\n          {\\n            labels: '宣武区',\\n            values: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        labels: '浙江',\\n        values: '02',\\n        children: [\\n          {\\n            labels: '杭州',\\n            values: '02-1',\\n            children: [\\n              {\\n                labels: '西湖区',\\n                values: '02-1-1',\\n              },\\n              {\\n                labels: '上城区',\\n                values: '02-1-2',\\n              },\\n              {\\n                labels: '江干区',\\n                values: '02-1-3',\\n              },\\n              {\\n                labels: '下城区',\\n                values: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '宁波',\\n            values: '02-2',\\n            children: [\\n              {\\n                labels: 'xx区',\\n                values: '02-2-1',\\n              },\\n              {\\n                labels: 'yy区',\\n                values: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '温州',\\n            values: '02-3',\\n          },\\n          {\\n            labels: '嘉兴',\\n            values: '02-4',\\n          },\\n          {\\n            labels: '湖州',\\n            values: '02-5',\\n          },\\n          {\\n            labels: '绍兴',\\n            values: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       fieldNames={{ label: \\\"labels\\\", value: 'values', children: 'children'}}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| options | 级联数据 | `TreeSelectOption[]` | - |\\n| defaultValue | 默认选中项 | `string[]` | - |\\n| value | 选中项 | string[] | - |\\n| onChange | value 变化时触发 | `(value: string[], extend: { options: TreeSelectOption[] }) => void` | - |\\n| fieldNames | 自定义 options 中 label value children 的字段 | `{{ label: string, value: string, children: string }} | any` | - |\\n| activeColor | 选中文本颜色 | `string` | - |\\n| activeColor | 是否禁用 | `boolean` | `false` |\\n| placeholder | 占位符 | `string` | `请选择` |\\n| extra | 图标 | `JSX.Element` | - |\\n| showClear | 是否展示删除图标 | `boolean` | `true` |\\n| contentStyle | 容器样式 | `StyleProp<ViewStyle>` | - |\\n| placeholderColor | 搜索框默认文本颜色 | `ColorValue` | - |\\n| height | 弹出框高度 | `number` | `300` |\\n| modalProps | Modal组件参数 | `ModalProps` | `300` |\\n\\n\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/TreeSelect/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/TreeSelect/README.md\" />;\nexport default DEMO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from 'react-native';\nexport default function Ellipsis({\n  maxLen,\n  children,\n  placeholder,\n  ...props\n}) {\n  let content = children;\n  if (maxLen && content && typeof content === 'string') {\n    content = content.length > maxLen ? content.substr(0, maxLen) + placeholder : content;\n  }\n  return <Text {...props}>{content}</Text>;\n}\nEllipsis.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.string]),\n  placeholder: PropTypes.string,\n  maxLen: PropTypes.number\n};\nEllipsis.defaultProps = {\n  placeholder: '...'\n};","import React from 'react';\nimport Svg, { SvgXml, Path } from 'react-native-svg';\nimport svgPaths from '@uiw/icons/fonts/w-icon.json';\nexport default (props => {\n  const {\n    size = 26,\n    name,\n    fill = '#000000',\n    stroke,\n    xml,\n    paths,\n    color,\n    ...otherProps\n  } = props;\n  if (xml) {\n    return <SvgXml testID=\"RNE__Icon__svgXml\" xml={xml} height={size} width={size} {...otherProps} />;\n  }\n  let pathData = paths;\n  if (!pathData) {\n    if (!name || !svgPaths[name]) {\n      return null;\n    }\n    pathData = svgPaths[name];\n  }\n  return <Svg testID=\"RNE__Icon__svg\" fill={color || fill} stroke={stroke} height={size} width={size} viewBox=\"0 0 20 20\" {...otherProps}>\n      {pathData.map((d, i) => <Path key={i} d={d} fillRule=\"evenodd\" />)}\n    </Svg>;\n});","import React, { useState, useMemo } from 'react';\nimport { Modal, Animated, TouchableOpacity, StyleSheet } from 'react-native';\nimport { usePrevious } from '../utils';\nconst styles = StyleSheet.create({\n  position: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    zIndex: 9998\n  },\n  backdrop: {\n    backgroundColor: '#000'\n  },\n  content: {\n    backgroundColor: '#fff',\n    position: 'absolute'\n  }\n});\nconst MaskLayer = (props = {}) => {\n  const {\n    maskClosable = true,\n    children,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    visible: _vis,\n    opacity = 0.6,\n    onDismiss,\n    animatedParallelShow = [],\n    animatedParallelHide = [],\n    ...otherProps\n  } = props;\n  const [visible, setVisible] = useState(!!props.visible);\n  const preVisible = usePrevious(props.visible);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [bgOpacity] = useState(new Animated.Value(0));\n  useMemo(() => {\n    if (preVisible !== props.visible && props.visible) {\n      setVisible(!!props.visible);\n      setVisibleModal(false);\n      Animated.parallel([Animated.spring(bgOpacity, {\n        toValue: opacity,\n        overshootClamping: true,\n        useNativeDriver: true\n      }), ...animatedParallelShow]).start();\n    } else if (preVisible !== props.visible && !props.visible) {\n      Animated.parallel([Animated.spring(bgOpacity, {\n        toValue: 0,\n        overshootClamping: true,\n        useNativeDriver: true\n      }), ...animatedParallelHide]).start(() => {\n        setVisible(!!props.visible);\n        setVisibleModal(true);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.visible]);\n  const backdropContent = <Animated.View style={[styles.position, styles.backdrop, {\n    opacity: bgOpacity\n  }]} />;\n  let backdrop = <TouchableOpacity activeOpacity={1} style={[styles.position]} onPress={() => onDismiss && onDismiss()}>\n      {backdropContent}\n    </TouchableOpacity>;\n  let isTrue = visible || false;\n  if (!visible && visibleModal) {\n    isTrue = false;\n  }\n  return <Modal transparent={true} animationType=\"none\" {...otherProps} visible={isTrue}>\n      {maskClosable ? backdrop : backdropContent}\n      {children && React.Children.toArray(children).map(child => {\n      if (!React.isValidElement(child)) {\n        return;\n      }\n      return React.cloneElement(child, {\n        ...child.props,\n        ...{\n          style: [{\n            zIndex: 9999\n          }, child.props.style]\n        }\n      });\n    })}\n    </Modal>;\n};\nexport default MaskLayer;","import React, { useState, useMemo, useRef } from 'react';\nimport { Animated, StyleSheet, Dimensions } from 'react-native';\nimport MaskLayer from '../MaskLayer';\nlet MainWidth = Dimensions.get('window').width;\nlet MainHeight = Dimensions.get('window').height;\nconst Modal = (props = {}) => {\n  const {\n    onClosed,\n    visible,\n    children,\n    placement = 'bottom',\n    containerStyle,\n    ...otherProps\n  } = props;\n  const AnimatedOpacity = useRef(new Animated.Value(0)).current;\n  // const [display] = useState<'none' | 'flex'>('none');\n  let [layoutHeight, setLayoutHeight] = useState(0);\n  let [layoutWidth, setLayoutWidth] = useState(0);\n  const [translateValue] = useState(new Animated.Value(0));\n  const isVertical = /^(top|bottom)$/.test(placement);\n  const isHorizontal = /^(left|right)$/.test(placement);\n  function onDismiss() {\n    onClosed && onClosed();\n  }\n  function measureContainer(event) {\n    const {\n      height,\n      width\n    } = event.nativeEvent.layout;\n    if (!layoutHeight && isVertical) {\n      setLayoutHeight(height);\n    }\n    if (!layoutWidth && isHorizontal) {\n      setLayoutWidth(width);\n    }\n  }\n  useMemo(() => {\n    function getTransformSize() {\n      if (placement === 'top') {\n        return -layoutHeight;\n      }\n      if (placement === 'bottom') {\n        return layoutHeight;\n      }\n      if (placement === 'left') {\n        return -layoutWidth;\n      }\n      if (placement === 'right') {\n        return layoutWidth;\n      }\n      return 0;\n    }\n    const result = getTransformSize();\n    if (!result) return;\n    if (visible) {\n      translateValue.setValue(result);\n      // AnimatedOpacity\n      Animated.timing(AnimatedOpacity, {\n        toValue: 1,\n        duration: 0,\n        useNativeDriver: false\n      }).start(({\n        finished\n      }) => {\n        Animated.parallel([Animated.spring(translateValue, {\n          toValue: 0,\n          overshootClamping: true,\n          useNativeDriver: true\n        })]).start();\n      });\n    }\n    if (!visible) {\n      Animated.parallel([Animated.spring(translateValue, {\n        toValue: result,\n        overshootClamping: true,\n        useNativeDriver: true\n      })]).start();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [visible, layoutHeight, layoutWidth]);\n  const translateStyle = {};\n  if (isVertical) {\n    translateStyle.translateY = translateValue;\n  }\n  if (isHorizontal) {\n    translateStyle.translateX = translateValue;\n  }\n  const child = <Animated.View style={[styles.content, placement && styles[placement], {\n    opacity: AnimatedOpacity\n  }, containerStyle]}>\n      <Animated.View onLayout={measureContainer} style={[styles.content, placement && styles[placement],\n    // !layoutHeight && isVertical ? { display: display } : {},\n    // !layoutWidth && isHorizontal ? { display: display } : {},\n    // // getTransformStyle(),\n    {\n      transform: [translateStyle],\n      backgroundColor: '#fff',\n      position: 'relative',\n      zIndex: 10000\n    }]}>\n        {children}\n      </Animated.View>\n    </Animated.View>;\n  return <MaskLayer {...otherProps} visible={visible} onDismiss={onDismiss}>\n      {child}\n    </MaskLayer>;\n};\nexport default Modal;\nconst styles = StyleSheet.create({\n  content: {\n    position: 'absolute',\n    zIndex: 9999\n  },\n  top: {\n    top: 0,\n    width: MainWidth,\n    left: 0,\n    right: 0\n  },\n  bottom: {\n    bottom: 0,\n    left: 0,\n    width: MainWidth,\n    right: 0\n  },\n  left: {\n    bottom: 0,\n    top: 0,\n    height: MainHeight,\n    left: 0\n  },\n  right: {\n    bottom: 0,\n    top: 0,\n    height: MainHeight,\n    right: 0\n  }\n});","import { StyleSheet } from 'react-native';\nexport const style = StyleSheet.create({\n  item: {\n    minHeight: 50,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  active_first_item: {\n    backgroundColor: '#fff'\n  },\n  not_active_first_item: {\n    backgroundColor: '#f6f7f9'\n  },\n  active_nth_item: {\n    backgroundColor: '#fef4f3',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  not_active_nth_item: {\n    backgroundColor: '#f6f7f9',\n    borderColor: '#fff',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginLeft: 10,\n    marginBottom: 10\n  },\n  content: {\n    flexDirection: 'row',\n    height: 35,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingRight: 5,\n    backgroundColor: '#fff',\n    paddingHorizontal: 16\n  },\n  disabled: {\n    flexDirection: 'row',\n    height: 35,\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingRight: 5,\n    backgroundColor: '#f5f5f5',\n    paddingHorizontal: 16\n  },\n  contentTitle: {\n    fontSize: 16,\n    color: 'black'\n  }\n});","import React, { useMemo, useState } from 'react';\nimport { usePropsValue } from '../utils/hooks';\nimport { getTreeDeep } from '../utils/tree-select';\nimport { View, Text, TouchableOpacity, ScrollView, Pressable } from 'react-native';\nimport Icon from '../Icon';\nimport Ellipsis from '../Ellipsis';\nimport Modal from '../Modal';\nimport { style } from './styles';\nconst defaultProps = {\n  options: [],\n  fieldNames: {},\n  defaultValue: [],\n  activeColor: '#5847FF',\n  placeholder: '请选择',\n  extra: undefined,\n  showClear: true,\n  contentStyle: {},\n  placeholderColor: '',\n  disabled: false,\n  height: 300,\n  modalProps: {}\n};\nexport const TreeSelect = p => {\n  const props = {\n    ...defaultProps,\n    ...p\n  };\n  const labelName = props.fieldNames.label || 'label';\n  const valueName = props.fieldNames.value || 'value';\n  const childrenName = props.fieldNames.children || 'children';\n  const [visible, setVisible] = useState(false);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  });\n  const [deep, optionsMap, optionsParentMap] = useMemo(() => {\n    const deep = getTreeDeep(props.options, childrenName);\n    const optionsMap = new Map();\n    const optionsParentMap = new Map();\n    function traverse(current, children) {\n      children.forEach(item => {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]);\n  const initialLabelValues = useMemo(() => {\n    const labels = [];\n    props.defaultValue?.forEach(defaultValue => {\n      const defaultOption = optionsMap.get(defaultValue);\n      if (defaultOption) {\n        labels.push(defaultOption[labelName]);\n      }\n    });\n    return labels;\n  }, [props.defaultValue, optionsMap, labelName]);\n  const [labelValues, setLabelValues] = useState(initialLabelValues);\n  const onItemSelect = node => {\n    // 找到父级节点\n    const parentNodes = [];\n    let current = node;\n    while (current) {\n      parentNodes.unshift(current);\n      const next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n    const values = parentNodes.map(i => i[valueName]);\n    const labels = parentNodes.map(i => i[labelName]);\n    setLabelValues(labels);\n    setValue(values);\n    props.onChange?.(values, {\n      options: parentNodes\n    });\n  };\n\n  // item样式\n  const activeStyles = (index, isActive, isLast) => {\n    let styles;\n    // 选中第一排\n    if (isActive && index === 0) {\n      styles = {\n        ...style.active_first_item\n      };\n    }\n    // 未选中第一排\n    if (!isActive && index === 0) {\n      styles = {\n        ...style.not_active_first_item\n      };\n    }\n    // 选中后排\n    if (isActive && index !== 0) {\n      styles = {\n        ...style.active_nth_item,\n        borderColor: props.activeColor,\n        marginRight: isLast ? 10 : 0\n      };\n    }\n    // 未选中后排\n    if (!isActive && index !== 0) {\n      styles = {\n        ...style.not_active_nth_item,\n        marginRight: isLast ? 10 : 0\n      };\n    }\n    return styles;\n  };\n  const renderItems = (columnOptions = [], index) => {\n    return columnOptions.map(item => {\n      const isActive = item[valueName] === value[index];\n      const active_font_color = index === 0 ? '#333' : props.activeColor;\n      // 是否是最后一列\n      const isLast = deep - 1 === index;\n      return <TouchableOpacity key={item[valueName]} onPress={() => {\n        if (!isActive) {\n          onItemSelect(item);\n        }\n      }} style={[style.item, {\n        ...activeStyles(index, isActive, isLast)\n      }]}>\n          <Text style={isActive ? {\n          color: active_font_color,\n          fontWeight: 'bold'\n        } : {\n          color: '#666'\n        }}>\n            {item[labelName]}\n          </Text>\n        </TouchableOpacity>;\n    });\n  };\n  const renderColumns = () => {\n    const columns = [];\n    for (let i = 0; i < deep; i++) {\n      let width = `${100 / deep}%`;\n\n      // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n      if (deep === 2 && i === 0) {\n        width = `33.33%`;\n      }\n      if (deep === 2 && i === 1) {\n        width = `66.67%`;\n      }\n      const column = <ScrollView key={i} style={{\n        width,\n        flex: 1,\n        backgroundColor: i === 0 ? '#f6f7f9' : '#fff'\n      }}>\n          {renderItems(i === 0 ? props.options : optionsMap.get(value[i - 1])?.[childrenName], i)}\n        </ScrollView>;\n      columns.push(column);\n    }\n    return columns;\n  };\n  return <React.Fragment>\n      <Pressable onPress={() => {\n      if (props.disabled) return;\n      setVisible(true);\n    }}>\n        <View style={[props.disabled ? style.disabled : style.content, props.contentStyle]}>\n          <Ellipsis style={[style.contentTitle, {\n          color: props.placeholderColor\n        }]} maxLen={30}>\n            {labelValues.join() || props.placeholder}\n          </Ellipsis>\n          {React.isValidElement(props.extra) ? props.extra : value && props.showClear ? <Pressable onPress={() => {\n          setValue([]);\n          setLabelValues([]);\n          props.onChange?.([], {\n            options: []\n          });\n        }} style={{\n          paddingRight: 3\n        }}>\n              <Icon name=\"circle-close-o\" size={18} color=\"#ccc\" />\n            </Pressable> : <Icon name=\"right\" size={18} color=\"#A19EA0\" />}\n        </View>\n      </Pressable>\n      <Modal visible={visible} onClosed={() => setVisible(false)} {...props.modalProps}>\n        <View style={{\n        marginBottom: 10\n      }} />\n        <View style={{\n        height: props.height,\n        flexDirection: 'row'\n      }}>{renderColumns()}</View>\n      </Modal>\n    </React.Fragment>;\n};","import { TreeSelect } from './tree-select';\nexport default TreeSelect;","// 找到树的深度\nexport function getTreeDeep(treeData, childrenName = 'children') {\n  const walker = tree => {\n    let deep = 0;\n    tree.forEach(item => {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n  return walker(treeData);\n}","export const green = '#28a745'; // 成功-绿色\nexport const blue = '#008EF0'; // 主要-蓝色\nexport const cyan = '#1EABCD'; // 信息-青色\nexport const navy = '#393E48'; // 导航-藏青\nexport const yellow = '#ffc107'; // 警告-黄色\nexport const orange = '#F95C2B'; // 提醒-橙色\nexport const red = '#dc3545'; // 危险-红色\n\nexport const black = '#000000';\nexport const white = '#ffffff';\nexport const colorsPalette = {\n  // DARKS TODO: deprecate and use greys\n  dark10: '#20303C',\n  dark20: '#43515C',\n  dark30: '#66737C',\n  dark40: '#858F96',\n  dark50: '#A3ABB0',\n  dark60: '#C2C7CB',\n  dark70: '#E0E3E5',\n  dark80: '#F2F4F5',\n  // GREYS\n  grey10: '#20303C',\n  grey20: '#4D5963',\n  grey30: '#79838A',\n  grey40: '#A6ACB1',\n  grey50: '#D2D6D8',\n  grey60: '#E8ECF0',\n  grey70: '#F0F4F7',\n  grey80: '#F8f9FA',\n  // BLUES\n  blue10: '#0097C3',\n  blue20: '#00A8DA',\n  blue30: '#00BBF2',\n  blue40: '#40CCF6',\n  blue50: '#85DFF9',\n  blue60: '#B2EAFB',\n  blue70: '#CFF3FD',\n  blue80: '#E3F8FE',\n  // CYAN,\n  cyan10: '#00AAAF',\n  cyan20: '#32BABC',\n  cyan30: '#3CC7C5',\n  cyan40: '#64D4D2',\n  cyan50: '#8BDFDD',\n  cyan60: '#B1E9E9',\n  cyan70: '#D8F4F4',\n  cyan80: '#EBF9F9',\n  // GREENS\n  green10: '#00A36F',\n  green20: '#00B47A',\n  green30: '#00CD8B',\n  green40: '#45DBAA',\n  green50: '#87E7C8',\n  green60: '#B2F0DC',\n  green70: '#CFF6E9',\n  green80: '#E3FAF2',\n  // YELLOWS\n  yellow10: '#E19800',\n  yellow20: '#F0A700',\n  yellow30: '#FFB600',\n  yellow40: '#FFCA45',\n  yellow50: '#FFDD87',\n  yellow60: '#FFEAB5',\n  yellow70: '#FFF2D1',\n  yellow80: '#FFF7E3',\n  // ORANGE,\n  orange10: '#D9644A',\n  orange20: '#E66A4E',\n  orange30: '#F27052',\n  orange40: '#F37E63',\n  orange50: '#F7A997',\n  orange60: '#FAC6BA',\n  orange70: '#FCE2DC',\n  orange80: '#FEF0ED',\n  // REDS\n  red10: '#D72E15',\n  red20: '#EB4229',\n  red30: '#FF563D',\n  red40: '#FF8472',\n  red50: '#FFB2A6',\n  red60: '#FFD0C9',\n  red70: '#FFE3DE',\n  red80: '#FFF0ED',\n  // PURPLE,\n  purple10: '#8B1079',\n  purple20: '#A0138E',\n  purple30: '#B13DAC',\n  purple40: '#C164BD',\n  purple50: '#D08BCD',\n  purple60: '#E0B1DE',\n  purple70: '#EFD8EE',\n  purple80: '#F7EBF7',\n  // VIOLETS\n  violet10: '#3022D0',\n  violet20: '#4434EB',\n  violet30: '#5847FF',\n  violet40: '#8579FF',\n  violet50: '#B2ABFF',\n  violet60: '#D1CCFF',\n  violet70: '#E3E0FF',\n  violet80: '#F0EEFF',\n  transparent: 'transparent'\n};","import { useRef, useEffect } from 'react';\nimport { usePersistFn, useUpdate } from 'ahooks';\n\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\nexport function usePropsValue(options) {\n  const {\n    value,\n    defaultValue,\n    onChange\n  } = options;\n  const update = useUpdate();\n  const stateRef = useRef(value !== undefined ? value : defaultValue);\n  if (value !== undefined) {\n    stateRef.current = value;\n  }\n  const setState = usePersistFn(v => {\n    if (value === undefined) {\n      stateRef.current = v;\n      update();\n    }\n    onChange?.(v);\n  });\n  return [stateRef.current, setState];\n}","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","Preview","CodeLayout","Code","Toolbar","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","props","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","concat","data","value","getURLParameters","disableCheckered","bordered","text","copied","title","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","_react","_interopRequireDefault","_TreeSelect","obj","__esModule","createElement","options","label","onChange","nodes","console","log","labels","values","fieldNames","md","Ellipsis","maxLen","placeholder","content","length","substr","Text","defaultProps","_props$size","size","name","_props$fill","fill","stroke","xml","paths","color","otherProps","SvgXml","testID","height","pathData","svgPaths","Svg","viewBox","map","d","i","Path","fillRule","styles","StyleSheet","backgroundColor","top","bottom","left","right","zIndex","backdrop","arguments","undefined","_props$maskClosable","maskClosable","_props$opacity","visible","opacity","onDismiss","_props$animatedParall","animatedParallelShow","_props$animatedParall2","animatedParallelHide","_useState","useState","_useState2","_slicedToArray","setVisible","preVisible","usePrevious","_useState3","_useState4","visibleModal","setVisibleModal","_useState5","Animated","bgOpacity","useMemo","toValue","overshootClamping","useNativeDriver","_toConsumableArray","backdropContent","style","TouchableOpacity","activeOpacity","onPress","isTrue","Modal","transparent","animationType","React","MainWidth","Dimensions","MainHeight","onClosed","_props$placement","placement","containerStyle","AnimatedOpacity","current","layoutHeight","setLayoutHeight","layoutWidth","setLayoutWidth","translateValue","isVertical","isHorizontal","result","setValue","duration","finished","translateStyle","translateY","translateX","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","transform","MaskLayer","item","minHeight","display","alignItems","justifyContent","active_first_item","not_active_first_item","active_nth_item","borderWidth","borderRadius","marginLeft","marginBottom","not_active_nth_item","borderColor","flexDirection","paddingRight","paddingHorizontal","disabled","contentTitle","fontSize","activeColor","extra","showClear","contentStyle","placeholderColor","modalProps","p","labelName","valueName","childrenName","_usePropsValue","usePropsValue","_usePropsValue2","_useMemo","deep","treeData","walker","tree","forEach","Math","max","getTreeDeep","optionsMap","Map","optionsParentMap","traverse","set","_useMemo2","initialLabelValues","_props$defaultValue","defaultOption","push","labelValues","setLabelValues","activeStyles","isActive","isLast","marginRight","renderItems","active_font_color","_props$onChange","parentNodes","unshift","call","onItemSelect","fontWeight","Pressable","View","join","_props$onChange2","columns","_optionsMap$get","column","ScrollView","flex","renderColumns","green","blue","cyan","navy","yellow","orange","red","black","white","colorsPalette","dark10","dark20","dark30","dark40","dark50","dark60","dark70","dark80","grey10","grey20","grey30","grey40","grey50","grey60","grey70","grey80","blue10","blue20","blue30","blue40","blue50","blue60","blue70","blue80","cyan10","cyan20","cyan30","cyan40","cyan50","cyan60","cyan70","cyan80","green10","green20","green30","green40","green50","green60","green70","green80","yellow10","yellow20","yellow30","yellow40","yellow50","yellow60","yellow70","yellow80","orange10","orange20","orange30","orange40","orange50","orange60","orange70","orange80","red10","red20","red30","red40","red50","red60","red70","red80","purple10","purple20","purple30","purple40","purple50","purple60","purple70","purple80","violet10","violet20","violet30","violet40","violet50","violet60","violet70","violet80","useEffect","update","useUpdate","stateRef","setState","usePersistFn","v","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}