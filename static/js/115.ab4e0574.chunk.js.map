{"version":3,"sources":["../../packages/core/lib/Stepper/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/115.ab4e0574.chunk.js","sourcesContent":["export default \"Stepper 步进器\\n---\\n用作增加或者减少当前数值。\\n\\n### 基础示例\\n\\n```jsx\\nimport {List, Stepper} from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <List  flat={false} extra=\\\"test\\\">\\n      <List.Item\\n        extra={\\n          <Stepper\\n            value={this.state.value}\\n            onChange={(value)=>{\\n              this.setState({value})\\n            }}\\n        />}\\n      >\\n        基本使用：\\n      </List.Item>\\n      <List.Item\\n        extra={\\n          <Stepper\\n            size='small'\\n            value={this.state.value}\\n            onChange={(value)=>{\\n              this.setState({value})\\n            }}\\n          />\\n        }\\n      >\\n        尺寸控制(size: small | default | large)：\\n      </List.Item>\\n      <List.Item\\n        extra={\\n          <Stepper\\n            disabledLongPress={true}\\n            value={this.state.value2}\\n            onChange={(value2)=>{\\n              this.setState({value2})\\n            }}\\n          />\\n        }>\\n        按钮开启长按(disabledLongPress: boolean)：\\n      </List.Item>\\n      <List.Item\\n        extra={\\n          <Stepper\\n            width={120}\\n            value={this.state.value2}\\n            onChange={(value2)=>{\\n              this.setState({value2})\\n            }}\\n          />\\n        }>\\n        自定义宽度(width: number)：\\n      </List.Item>\\n      <List.Item\\n        extra={\\n          <Stepper\\n            value={this.state.value}\\n            color={{color: '#ccc',borderColor: '#999',controlColor: 'red',valueColor: '#000'}}\\n            onChange={(value)=>{\\n              this.setState({value})\\n            }}\\n          />\\n        }>\\n        自定义颜色(color: Color)：\\n      </List.Item>\\n      <List.Item\\n        extra={\\n          <Stepper\\n            disabledInput={false}\\n            value={this.state.value1}\\n            onChange={(value1)=>{\\n              this.setState({value1})\\n            }}\\n          />\\n        }>\\n        不禁止输入(disabledInput: boolean)：\\n      </List.Item>\\n      <List.Item\\n        extra={\\n          <Stepper\\n            disabled={true}\\n            disabledInput={false}\\n            value={this.state.value1}\\n            onChange={(value1)=>{\\n              this.setState({value1})\\n            }}\\n          />\\n        }>\\n        禁止点击(disabled: boolean)：\\n      </List.Item>\\n    </List>\\n  );\\n}\\n```\\n\\n### Stepper Props\\n\\n```ts\\nexport interface Color {\\n  /** 组件主色调 #108ee9 */\\n  color?: string,\\n  /** 组件边框颜色 #108ee9 */\\n  borderColor?: string,\\n  /** 组件按钮 + - 颜色 #108ee9 */\\n  controlColor?: string,\\n  /** 组件 value 值颜色 #108ee9 */\\n  valueColor?: string\\n}\\n\\nexport  type Size =  'small' | 'default' | 'large';\\n\\nexport interface StepProps {\\n  /** 尺寸 */\\n  size?:Size,\\n  /** 颜色 */\\n  color?: Color,\\n  /** input 宽度,不包括两侧按钮 */\\n  width?: number,\\n  /** 输入框当前值，开发者需要通过 onChange 事件来更新 value 值，必填 */\\n  value: number,\\n  /** 每次点击改变的间隔大小 */\\n  step?: number,\\n  /** 最小值 */\\n  min?: number,\\n  /** 最大值 */\\n  max?: number,\\n  /** 按钮是否禁止点击 */\\n  disabled?: boolean,\\n  /** 输入框是否禁止输入 */\\n  disabledInput?: boolean,\\n  /** 按钮是否支持长按 */\\n  disabledLongPress?: boolean,\\n  /** 长按间隔 单位(ms) */\\n  delayLong?: number,\\n  /** 输入框值改变时触发的事件, 必填 */\\n  onChange: (value: number)=>void,\\n  /** 输入框尝试输入错误数据触发的事件\\t */\\n  onErrorInput?: (type: 'OVER' | 'LOW', errorValue: number) => void\\n};\\n``` \\n\";"],"sourceRoot":""}