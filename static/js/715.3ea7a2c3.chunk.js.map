{"version":3,"file":"static/js/715.3ea7a2c3.chunk.js","mappings":"+GAAA","sources":["../../packages/core/lib/TextArea/README.md"],"sourcesContent":["export default \"TextArea 多行输入框\\n---\\n\\n![](https://user-images.githubusercontent.com/66067296/147332763-7126a61c-0476-497e-8e52-5c2805ae346e.png)<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n可输入多行。\\n\\n### 基础示例\\n\\n```jsx\\nimport React, { Component } from 'react';\\nimport { StyleSheet } from 'react-native';\\nimport { TextArea } from '@uiw/react-native';\\nimport Layout, { Container } from '../../Layout';\\nimport { ComProps } from '../../routes';\\n\\nconst { Header, Body, Card, Footer } = Layout;\\nexport interface TextAreaProps extends ComProps { }\\nexport default class TextAreaView extends Component<TextAreaProps> {\\n  state = {\\n    value: '',\\n  };\\n  render() {\\n    const { route } = this.props;\\n    const description = route.params.description;\\n    const title = route.params.title;\\n    return (\\n      <Container>\\n        <Layout>\\n          <Header title={title} description={description} />\\n          <Body>\\n            <Card title=\\\"基础实例\\\" style={styles.card}>\\n              <TextArea\\n                onChange={(value: string) => {\\n                  this.setState({ value });\\n                }}\\n                value={this.state.value}\\n                placeholder='默认提示语'\\n              />\\n            </Card>\\n          </Body>\\n          <Footer />\\n        </Layout>\\n      </Container>\\n    );\\n  }\\n}\\nconst styles = StyleSheet.create({\\n  card: {\\n    backgroundColor: '#fff',\\n  },\\n});\\n```\\n\\n### 只读状态\\n\\n```jsx\\nimport React, { Component } from 'react';\\nimport { StyleSheet } from 'react-native';\\nimport { TextArea } from '@uiw/react-native';\\nimport Layout, { Container } from '../../Layout';\\nimport { ComProps } from '../../routes';\\n\\nconst { Header, Body, Card, Footer } = Layout;\\nexport interface TextAreaProps extends ComProps { }\\nexport default class TextAreaView extends Component<TextAreaProps> {\\n  state = {\\n    value4: '',\\n  };\\n  render() {\\n    const { route } = this.props;\\n    const description = route.params.description;\\n    const title = route.params.title;\\n    return (\\n      <Container>\\n        <Layout>\\n          <Header title={title} description={description} />\\n          <Body>\\n            <Card title=\\\"展示字数\\\" style={styles.card}>\\n              <TextArea\\n                onChange={(value4: string) => {\\n                  this.setState({ value4 });\\n                }}\\n                value={this.state.value4}\\n                showWords={true}\\n                placeholder=\\\"默认展示字数\\\"\\n              />\\n            </Card>\\n          </Body>\\n          <Footer />\\n        </Layout>\\n      </Container>\\n    );\\n  }\\n}\\nconst styles = StyleSheet.create({\\n  card: {\\n    backgroundColor: '#fff',\\n  },\\n});\\n```\\n\\n### 只读状态\\n\\n```jsx\\nimport React, { Component } from 'react';\\nimport { StyleSheet } from 'react-native';\\nimport { TextArea } from '@uiw/react-native';\\nimport Layout, { Container } from '../../Layout';\\nimport { ComProps } from '../../routes';\\n\\nconst { Header, Body, Card, Footer } = Layout;\\nexport interface TextAreaProps extends ComProps { }\\nexport default class TextAreaView extends Component<TextAreaProps> {\\n  state = {\\n    value1: '只读状态不可输入',\\n  };\\n  render() {\\n    const { route } = this.props;\\n    const description = route.params.description;\\n    const title = route.params.title;\\n    return (\\n      <Container>\\n        <Layout>\\n          <Header title={title} description={description} />\\n          <Body>\\n             <Card title=\\\"只读状态\\\" style={styles.card}>\\n              <TextArea\\n                editable={false}\\n                onChange={(value1: string) => {\\n                  this.setState({ value1 });\\n                }}\\n                value={this.state.value1}\\n              />\\n            </Card>\\n          </Body>\\n          <Footer />\\n        </Layout>\\n      </Container>\\n    );\\n  }\\n}\\nconst styles = StyleSheet.create({\\n  card: {\\n    backgroundColor: '#fff',\\n  },\\n});\\n```\\n\\n### 自定义输入框样式\\n\\n```jsx\\nimport React, { Component } from 'react';\\nimport { StyleSheet } from 'react-native';\\nimport { TextArea } from '@uiw/react-native';\\nimport Layout, { Container } from '../../Layout';\\nimport { ComProps } from '../../routes';\\n\\nconst { Header, Body, Card, Footer } = Layout;\\nexport interface TextAreaProps extends ComProps { }\\nexport default class TextAreaView extends Component<TextAreaProps> {\\n  state = {\\n    value3: '自定义输入框样式',\\n  };\\n  render() {\\n    const { route } = this.props;\\n    const description = route.params.description;\\n    const title = route.params.title;\\n    return (\\n      <Container>\\n        <Layout>\\n          <Header title={title} description={description} />\\n          <Body>\\n           <Card title=\\\"自定义输入框样式\\\" style={styles.card}>\\n                <TextArea\\n                style={{\\n                  height: 150,\\n                  borderColor: 'blue',\\n                  borderWidth: 2,\\n                }}\\n                fontStyle={{\\n                  fontSize: 16,\\n                  color: 'blue',\\n                }}\\n                showWords={true}\\n                onChange={(value3: string) => {\\n                  this.setState({ value3 });\\n                }}\\n                value={this.state.value3}\\n              />\\n            </Card>\\n          </Body>\\n          <Footer />\\n        </Layout>\\n      </Container>\\n    );\\n  }\\n}\\nconst styles = StyleSheet.create({\\n  card: {\\n    backgroundColor: '#fff',\\n  },\\n});\\n```\\n\\n### props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `textAlignVertical` | 文本位置 | `\\\"top\\\" | \\\"center\\\" | \\\"auto\\\" | \\\"bottom\\\"` | `top` |\\n| `placeholder` | 默认提示语 | String | |\\n| `placeholderTextColor` | 提示语颜色 | `string` | `#989FB2` |\\n| `maxLength` | 最大字符数 | `number` | `100` |\\n| `numberOfLines` | 输入框的行数(Android) | `number` | `30` |\\n| `editable` | 是否禁用 | `boolean` | `true` |\\n| `onChange` | 文本域内容变化时触发 | `(val: string) => void` |  |\\n| `value` | 文本框中的文字内容 | `string` |  |\\n| `showWords` | 是否展示字数 | `boolean` | `false` |\\n| `fontStyle` | 输入框文字样式 | ` StyleProp<TextStyle>` |  |\\n\";"],"names":[],"sourceRoot":""}