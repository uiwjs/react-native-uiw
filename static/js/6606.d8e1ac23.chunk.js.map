{"version":3,"file":"static/js/6606.d8e1ac23.chunk.js","mappings":"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","sources":["component/Preview/index.js","pages/docs/unpack/android/README.md","pages/docs/unpack/android/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync","pages/docs/unpack/android|sync|//.(png%7Cgif%7Cjpg%7Csvg)$"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  disableToolbar={getBooleanValue(param, 'disableToolbar', false)}\n                  disableCode={getBooleanValue(param, 'disableCode', false)}\n                  disablePreview={getBooleanValue(param, 'disablePreview', false)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                  copied={getBooleanValue(param, 'copied', true)}\n                  background={param.background}\n                  toolbar={param.title || '示例'}\n                  code={<code {...rest} />}\n                  text={code}\n                >\n                  <Child />\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"Android 打包\\n===\\n官方教程 https://reactnative.dev/docs/signed-apk-android/\\n\\nAndroid要求所有应用都必须先使用证书进行数字签名，然后才能安装。 为了通过Google Play商店分发您的Android应用，需要使用发布密钥对其进行签名，然后再将其用于以后的所有更新。 自2017年以来，借助Google Play的应用签名功能，Google Play可以自动管理签名发布。 但是，在将应用程序二进制文件上传到Google Play之前，需要使用上传密钥对其进行签名。 Android Developers文档上的[“签署应用程序”](https://developer.android.com/tools/publishing/app-signing.html)页面详细描述了该主题。 本指南简要介绍了该过程，并列出了打包JavaScript捆绑包所需的步骤。\\n\\n## 生成上传需要的秘钥\\n\\n> Android要求所有应用都有一个数字签名才会被允许安装在用户手机上，Android开发者官网上的如何给你的 [应用签名文档](https://developer.android.com/tools/publishing/app-signing.html) 描述了签名的细节  \\n\\n生成签名有两种方式：\\n\\n- Keytool命令行\\n- Android Studio界面生成\\n\\n# Android Studio界面生成\\n## 一. 创建签名文件\\n\\n### `创建签名文件`<!--rehype:style=color: white; background: #1c7bd0;-->\\n\\n用 `Android Studio`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->打开需要打包的项目,之后选择 `Build`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->中的`Generate Signed Bundle/APK`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->开始创建签名文件。\\n\\n![](./img/01.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n选择`Android App Bundle`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->点击进入下一步。\\n\\n![](./img/02.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n### `填写签名参数`<!--rehype:style=color: white; background: #1c7bd0;-->\\n\\n![](./img/03.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n#### `1. 创建密钥库(已拥有密钥库跳过)`<!--rehype:style=color: white; background: #ffb703;-->\\n\\n点击`Create new...”`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->按钮创建密钥库，填写相关信息后，点击`OK`创建成功。\\n\\n![](./img/04.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n#### `2.选择已存在密钥库及密钥`<!--rehype:style=color: white; background: #ffb703;-->\\n\\n点击`Choose existing...”`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->按钮找到密钥库文件。\\n\\n![](./img/05.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n> 密钥库文件地址在项目`Android/app/debug.keystore`<!--rehype:style=color: #1c7bd0; background: ##E6E6E6-->目录下。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n# Keytool命令行生成\\n您可以使用keytool生成专用签名密钥。 在Windows上，必须从 `C:\\\\Program Files\\\\Java\\\\jdkx.x.x_x\\\\bin` 运行keytool。\\n\\n```shell\\n$ keytool -genkeypair -v -keystore xx-key.keystore -alias xx-key-alias -keyalg RSA -keysize 2048 -validity 10000\\n```\\n\\n⚠️  生成打包用的 key，将 `keystore` 命名为 `xx-release-key.keystore` 别名 `-alias` 为 `xx-key-alias`  \\n⚠️  记住要输入的 `输入密钥库口令:`\\n\\n```shell\\nkeytool -genkeypair -v -keystore xx-release-key.keystore -alias xx-key-alias -keyalg RSA -keysize 2048 -validity 10000\\n# 输入密钥库口令: 123456\\n# 再次输入新口令:\\n# 您的名字与姓氏是什么?\\n#   [Unknown]:  Wang\\n# 您的组织单位名称是什么?\\n#   [Unknown]:  junzhuo\\n# 您的组织名称是什么?\\n#   [Unknown]:  junzhuo\\n# 您所在的城市或区域名称是什么?\\n#   [Unknown]:  shanghai\\n# 您所在的省/市/自治区名称是什么?\\n#   [Unknown]:  shanghai\\n# 该单位的双字母国家/地区代码是什么?\\n#   [Unknown]:  zh\\n# CN=Wang, OU=junzhuo, O=junzhuo, L=shanghai, ST=shanghai, C=zh是否正确?\\n#   [否]:  y\\n#\\n# 正在为以下对象生成 2,048 位RSA密钥对和自签名证书 (SHA256withRSA) (有效期为 10,000 天):\\n#    CN=Wang, OU=junzhuo, O=junzhuo, L=shanghai, ST=shanghai, C=zh\\n# 输入 <xx-key-alias> 的密钥口令\\n#   (如果和密钥库口令相同, 按回车):\\n# [正在存储goods-key.keystore]\\n#\\n# 这是一个巨坑 不要迁移标准格式，否则打包错误\\n# Warning:\\n# JKS 密钥库使用专用格式。建议使用 \\\"keytool -importkeystore -srckeystore xx-key.keystore -destkeystore xx-key.keystore -deststoretype pkcs12\\\" 迁移到行业标准格式 PKCS12。\\n```\\n\\n⚠️⚠️⚠️ 下面这是一个巨坑 不要迁移标准格式，否则打包错误，上面生成命令会提示下面命令，如果你照做了，坑可能爬不出来\\n\\n```shell\\n# Warning:\\n# JKS 密钥库使用专用格式。建议使用 \\\"\\nkeytool -importkeystore -srckeystore xx-key.keystore -destkeystore xx-key.keystore -deststoretype pkcs12\\n# \\\" 迁移到行业标准格式 PKCS12。\\n```\\n\\n## 设置Gradle变量\\n![](./img/image.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n如果 Gradle 加载失败，https://gradle.org/ 点击下面按钮重新同步\\n\\n![](./img/image1.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\nAndroid Studio 打包\\n\\n![](./img/image2.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n![](./img/image3.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n![](./img/image4.png)<!--rehype:style=max-width: 650px;width: 100%;-->\\n\\n记得选择生成目录 `<项目所在目录>/android/app/build/outputs/apk`\\n\\n![](./img/image5.png)<!--rehype:style=max-width: 650px;width: 100%;-->\"\n  }","import Preview from 'src/component/Preview';\nimport md from './README.md';\n\nconst transformImageUri = (url: string) => {\n  const reqImage = (require as any).context('./', true, /\\.(png|gif|jpg|svg)$/);\n  const urlAddr = reqImage(url);\n  return urlAddr;\n};\n\nconst DEMO = () => (\n  <Preview {...md} transformImageUri={transformImageUri} path=\"website/src/pages/docs/unpack/android/README.md\" />\n);\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;","var map = {\n\t\"./img/01.png\": 77524,\n\t\"./img/02.png\": 51520,\n\t\"./img/03.png\": 70303,\n\t\"./img/04.png\": 17193,\n\t\"./img/05.png\": 29458,\n\t\"./img/image.png\": 60718,\n\t\"./img/image1.png\": 36677,\n\t\"./img/image2.png\": 59319,\n\t\"./img/image3.png\": 94498,\n\t\"./img/image4.png\": 40572,\n\t\"./img/image5.png\": 99227\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26129;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","props","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","concat","data","value","getURLParameters","CodeLayout","disableCheckered","disableToolbar","disableCode","disablePreview","bordered","copied","background","toolbar","title","text","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","transformImageUri","url","require","reqImage","Preview","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports","map","webpackContext","webpackContextResolve","__webpack_require__","o","Object"],"sourceRoot":""}