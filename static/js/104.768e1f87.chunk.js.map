{"version":3,"sources":["../../packages/core/lib/SearchInputBar/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/104.768e1f87.chunk.js","sourcesContent":["export default \"SearchInputBar 动作面板\\n---\\n\\n可用于用户输入搜索信息\\n\\n<img src='https://user-images.githubusercontent.com/66067296/140004397-65ffc69e-a79f-425d-9d75-2928c125e5c8.gif' alt='SearchInputBar' style='zoom:33%;' />\\n\\n### 基础示例\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { SearchInputBar } from '@uiw/react-native';\\nfunction Demo() {\\n  const [value, setValue] = useState('')\\n  return (\\n    <Fragment>\\n      <SearchInputBar\\n        onChangeText={setValue}\\n        onClear={()=>setValue('')}\\n        value={value}\\n        button={{\\n          onPress() {\\n            // 点击搜索按钮触法\\n          }\\n        }}\\n      />\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### 一直显示右侧按钮 && 自定义placeholder && 自定右侧搜索内容\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { SearchInputBar } from '@uiw/react-native';\\nfunction Demo() {\\n  const [value, setValue] = useState('')\\n  return (\\n    <Fragment>\\n      <SearchInputBar\\n        onChangeText={setValue}\\n        onClear={()=>setValue('')}\\n        value={value}\\n        placeholder=\\\"请输入搜索关键字\\\"\\n        searchRender={<View style={styles.search}><Text>搜索</Text></View>}\\n        actionName=\\\"搜一下\\\"\\n        showActionButton\\n        button={{\\n          onPress() {\\n            // 点击搜索按钮触法\\n          }\\n        }}\\n      />\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### 键盘不收起来\\n\\n**注意: 每层```ScrollView```都要写```keyboardShouldPersistTaps=\\\"always\\\"```**\\n\\n```jsx\\nimport { Fragment, useState } from 'react';\\nimport { SearchInputBar } from '@uiw/react-native';\\nfunction Demo() {\\n  const [value, setValue] = useState('')\\n  return (\\n    <ScrollView keyboardShouldPersistTaps=\\\"always\\\" >\\n      <SearchInputBar\\n        onChangeText={setValue}\\n        onClear={()=>setValue('')}\\n        value={value}\\n        showActionButton\\n        button={{\\n          onPress() {\\n            // 点击搜索按钮触法\\n          }\\n        }}\\n      />\\n    </ScrollView>\\n  );\\n}\\n```\\n\\n### 获取输入框 Ref\\n\\n```jsx\\nimport { Fragment, useRef } from 'react';\\nimport { SearchInputBar } from '@uiw/react-native';\\nfunction Demo() {\\n  const inputRef = useRef()\\n  return (\\n    <Fragment>\\n      <SearchInputBar\\n        ref={inputRef}\\n        onChangeText={setValue}\\n        onClear={()=>setValue('')}\\n        value={value}\\n        placeholder=\\\"请输入搜索关键字\\\"\\n        actionName=\\\"搜一下\\\"\\n        showActionButton\\n        button={{\\n          onPress() {\\n            // 点击搜索按钮触法\\n          }\\n        }}\\n      />\\n      <Button\\n        onPress={()=>{\\n          console.log(inputRef.current.inputRef)\\n        }}\\n      >获取 输入框 Ref</Button>\\n    </Fragment>\\n  );\\n}\\n```\\n\\n### Props\\n**注意: 组件继承了```TextInput```属性**\\n```ts\\nimport { TextInputProps,StyleProp,ViewStyle } from 'react-native';\\nimport { ButtonProps,IconsProps } from '@uiw/react-native'\\n\\nexport interface SearchInputBarProps extends TextInputProps {\\n  /** 容器样式 */\\n  containerStyle?: StyleProp<ViewStyle>;\\n  /** 右侧按钮 */\\n  button?: ButtonProps;\\n  /** 右侧按钮文案 */\\n  actionName?: string;\\n  /** 是否一直显示右侧按钮 null = 永不显示 */\\n  showActionButton?: boolean | null;\\n  /** 搜索图标Icon参数 参考Icon组件 */\\n  searchIcon?: IconsProps;\\n  /** 点击搜索图标时触发事件 */\\n  onSearch?: Function;\\n  /** 清除图标Icon参数 参考Icon组件 */\\n  closeIcon?: IconsProps;\\n  /** 点击清除图标时触发事件 */\\n  onClear?: Function;\\n  /** 自定义搜索 */\\n  searchRender?: JSX.Element;\\n  /** 输入框TextInput样式 */ \\n  inputStyle?: TextStyle\\n  /** loading加载 */\\n  loading?: any\\n}\\n```\";"],"sourceRoot":""}