{"version":3,"file":"static/js/4158.60807518.chunk.js","mappings":"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","sources":["component/Preview/index.js","pages/docs/development/document/README.md","pages/docs/development/document/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  disableToolbar={getBooleanValue(param, 'disableToolbar', false)}\n                  disableCode={getBooleanValue(param, 'disableCode', false)}\n                  disablePreview={getBooleanValue(param, 'disablePreview', false)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                  copied={getBooleanValue(param, 'copied', true)}\n                  background={param.background}\n                  toolbar={param.title || '示例'}\n                  code={<code {...rest} />}\n                  text={code}\n                >\n                  <Child />\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"参与文档/网站编辑开发\\n===\\n\\n这里介绍，当前组件库开发和文档编写，方便您快速介入到文档/网站编辑开发中。\\n\\n> 🚧  注意：文档网站发布是监听 master 分支的更新`自动`发布到 [`gh-pages`](https://github.com/uiwjs/react-native-uiw/tree/gh-pages) 分支。  \\n> 在 `package.json` 中的版本号请不要随意更改，组件发布是监听 [`package.json 中的版本号`](https://github.com/uiwjs/react-native-uiw/blob/4e4f55681a71b4813a5f5fe26f4b1a859bc85a7f/.github/workflows/ci.yml#L64-L66)变更`自动`发布到 npm 上。  \\n> 这些自动化得益于 [Github Actions](https://github.com/actions) 的强力驱动。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n## 目录结构\\n\\n```bash\\n├── README.md -> packages/core/README.md\\n├── ....\\n├── example   # ----> 示例\\n│   ├── base      # 示例，用于单独测试某个组件\\n│   └── examples  # 所有组件的示例\\n├── packages  # ----> 包\\n│   ├── core  # 📦 @uiw/react-native 基础组件\\n│   │   ├── package.json\\n│   │   └── src\\n│   │       ├── Avatar # 组件源码以及组件文档\\n│   │       └── ....\\n│   └── docs  # 📦 @uiw/react-native-doc 可忽略，编译后的组件文档静态文件提交到 npm 提供文档版本预览\\n└── website   # ----> 文档网站源码\\n    ├── ....\\n    └── src\\n        ├── pages # 📑 文档示例编写在这里\\n        │   ├── components\\n        │   └── ....\\n        └── routes\\n            ├── Controller.tsx\\n            ├── history.ts\\n            ├── menus.ts   # 配置菜单\\n            └── router.tsx # 配置菜单对应的页面\\n```\\n\\n## 文档编辑预览\\n\\n我们通过 [npm](https://www.npmjs.com/@uiw/react-native-doc) 来管理 UIW React Native 组件文档站点的版本，使用 [unpkg.com](https://unpkg.com/) 提供的静态资源预览和同步 npm 包的特点，来实现[查看历史版本](https://unpkg.com/browse/@uiw/react-native-doc/)组件文档的一功能。的文档。所以我们在发布 [`@uiw/react-native`](https://www.npmjs.com/package/@uiw/react-native) 包的同时会发布 [`@uiw/react-native-doc`](https://www.npmjs.com/package/@uiw/react-native-doc) 包。\\n\\n通过 unpkg 预览文档网站：https://unpkg.com/@uiw/react-native-doc/doc/index.html\\n\\n这是 v3.0.0+ 版本预览方法\\n\\n```shell\\nhttps://unpkg.com/@uiw/react-native-doc@<包版本>/web/index.html\\n```\\n\\n[`v2.0.0+ 文档网站`](https://unpkg.com/@uiw/react-native-doc@2.1.0/doc/build/index.html)\\n\\n> 🚧  注意：为了保持包版本同步，我们通过 [`lerna`](http://npmjs.com/lerna)<!--rehype:target=\\\"__blank\\\"--> 工具同时更改所有包的版本，确保组件包和文档包的版本是一致的。  \\n> 在项目根目录运行 `npm run version` 命令，即可更改所有包的版本。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n文档还可以使用 [`Githack`](http://raw.githack.com) 来访问历史的文档。\\n\\n```bash\\n# 最新文档\\nhttps://raw.githack.com/uiwjs/react-native-uiw/gh-pages/index.html\\n# v2.11.1 文档\\nhttps://raw.githack.com/uiwjs/react-native-uiw/c08bdf4/index.html\\n```\\n\\nGithack：[`v2.0.0+ 文档网站`](https://raw.githack.com/uiwjs/react-native-uiw/c08bdf4/index.html)\\n\\n### `启动文档网站 & 预览文档`<!--rehype:style=color: white; background: #1c7bd0;-->\\n\\n组件文档存放在组件 `packages/core`<!--rehype:style=color: #039423; background: #e3efe7;--> 包目录中，其它文档放在文档源码目录 `website/src/pages`<!--rehype:style=color: #039423; background: #e3efe7;--> 中，根据路由地址建立。\\n\\n> 如果需要将文档网站运行起来，需要先安装依赖和编译包。使用 [`yarn workspaces`](https://classic.yarnpkg.com/en/docs/workspaces)，组件文档是从 `node_modules` 中加载，需要编译(或监听)输出到 `node_modules` 中。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n<!--rehype:-->\\n```bash\\nyarn install     # 安装当前依赖，和子包中的依赖\\nyarn run build   # 编译包\\n```\\n\\n实时监听包和文档网站本地预览\\n\\n```bash\\n# Step 1️⃣  编译输出 JS/d.ts 文件\\nyarn run lib:watch\\n# Step 2️⃣  本地运行预览文档网站\\nyarn run start\\n```\\n\\n浏览器中打开文档网站： `http://localhost:3000`<!--rehype:style=color: #3d79a2; background: #e5ecf3;-->\\n\\n### `添加 & 编辑一个文档页面`<!--rehype:style=color: white; background: #4a4a4a;-->\\n\\n添加一个新的文档，需要新增路由、菜单、添加 `README.md` 文件。\\n\\n```bash\\nwebsite\\n├── src\\n│   ├── pages # 文档示例编写在这里\\n│   │   ├── components\\n│   │   └── getting-started\\n│   │       ├── README.md # 📑 添加 README.md 文档\\n│   │       └── index.tsx # ✅ 添加加载 README.md JS 文件\\n│   └── routes\\n│       ├── menus.ts   # ✅ 配置菜单\\n│       └── router.tsx # ✅ 配置菜单对应的页面\\n```\\n\\n修改组件文档\\n\\n```bash\\npackages\\n├── core # 📦 @uiw/react-native\\n│   └── src\\n│       ├── Avatar\\n│       │   ├── README.md # 📑 组件文档\\n│       │   └── index.tsx # ✅ 组件入口文件\\n│       ├── ....\\n│       └── Button\\n```\\n\\n#### `第 1 步`<!--rehype:style=background: #a5d4ff;-->：菜单配置\\n\\n在 [`website/src/routes/menus.ts`](https://github.com/uiwjs/react-native-uiw/blob/4e4f55681a71b4813a5f5fe26f4b1a859bc85a7f/website/src/routes/menus.ts#L44) 中配置菜单\\n\\n```ts\\nexport interface MenuData extends React.RefAttributes<HTMLAnchorElement>, React.AnchorHTMLAttributes<HTMLAnchorElement> {\\n  name: string;\\n  path?: string;\\n  divider?: boolean;\\n}\\nexport const docsMenus: MenuData[] = [\\n  { path: '/docs/getting-started', name: '快速上手' },\\n  { divider: true, name: \\\"环境安装\\\" },\\n  { path: '/docs/environment-setup/ios', name: 'iOS 环境安装' },\\n  ...\\n  { divider: true, name: \\\"其它\\\" },\\n  { path: '/docs/development', name: '参与组件/文档开发' },\\n  { href: 'https://github.com/uiwjs/react-native-uiw/releases', target: '_blank', name: '更新日志' },\\n]\\nexport const componentMenus: MenuData[] = [ .... ]\\n```\\n\\n#### `第 2 步`<!--rehype:style=background: #a5d4ff;-->：新增路由\\n\\n在 [`website/src/routes/router.tsx`](https://github.com/uiwjs/react-native-uiw/blob/4e4f55681a71b4813a5f5fe26f4b1a859bc85a7f/website/src/routes/router.tsx#L39-L41) 中加载 Markdown 以及相关文件\\n\\n```ts\\nexport const getRouterData = {\\n  '/': {\\n    component: dynamicWrapper([], () => import('../layouts/BasicLayout')),\\n  },\\n  '/docs/getting-started': {\\n    component: dynamicWrapper([], () => import('../pages/docs/getting-started')),\\n  },\\n  ....\\n}\\n```\\n\\n#### `第 3 步`<!--rehype:style=background: #a5d4ff;-->：新增 Markdown 文件\\n\\n添加 `website/src/pages/docs/getting-started/README.md` 和 `website/src/pages/docs/getting-started/index.tsx`\\n\\n```tsx\\nimport Preview from 'src/component/Preview';\\nimport md from './README.md';\\n\\nconst DEMO = () => <Preview {...md} />;\\nexport default DEMO;\\n\\n```\\n> 注意: 如果markdown有本地图片需要增加transformImageUri配置,否则不现实图片\\n```tsx\\nimport Preview from 'src/component/Preview';\\nimport md from './README.md';\\n\\nconst transformImageUri = (url: string) => {\\n  const reqImage = (require as any).context('./', true, /\\\\.(png|gif|jpg|svg)$/)\\n  const urlAddr = reqImage(url)\\n  return urlAddr\\n}\\n\\nconst DEMO = () => <Preview {...md} transformImageUri={transformImageUri} />;\\nexport default DEMO;\\n\\n```\\n\\n### `修改一个 Markdown 文件内容`\\n\\n可直接点击文档网站底部的 `在 GitHub 上编辑此页`<!--rehype:style=color: #1e1cf0; background: #e3e3ff;--> 按钮。\\n\\n⇣⇣⇣⇣⇣⇣看见没有，点击下面按钮⇣⇣⇣⇣⇣⇣\\n<!--rehype:style=background-color: #a0ffb3; padding: 12px 16px; display: inline-block;-->\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from './README.md';\n\nconst DEMO = () => <Preview {...md} path=\"website/src/pages/docs/development/document/README.md\" />;\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","props","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","concat","data","value","getURLParameters","CodeLayout","disableCheckered","disableToolbar","disableCode","disablePreview","bordered","copied","background","toolbar","title","text","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","Preview","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}