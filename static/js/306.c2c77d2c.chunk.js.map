{"version":3,"file":"static/js/306.c2c77d2c.chunk.js","mappings":"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","sources":["component/Preview/Footer.js","component/Preview/index.js","react-native/lib/TreeSelect/README.md","pages/components/treeSelect/index.tsx","react-native/lib/Ellipsis/index.js","react-native/lib/Icon/index.js","react-native/lib/MaskLayer/index.js","react-native/lib/Modal/index.js","react-native/lib/TreeSelect/index.js","react-native/lib/TreeSelect/tree-select.js","react-native/lib/Typography/Text.js","react-native/lib/utils/colors.js","react-native/lib/utils/hooks.js","react-native/lib/utils/tree-select.js","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import { Divider } from 'uiw';\n\nexport default function (props) {\n  const { path } = props;\n  const url = /^http/.test(path || '')\n    ? path\n    : `https://github.com/uiwjs/react-native-uiw/edit/master/${path?.replace(/^\\//, '')}`;\n  return (\n    <div style={{ paddingBlock: 20 }}>\n      {path && url && (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#333' }}>\n          在Github上编辑本页！\n        </a>\n      )}\n      <Divider type=\"vertical\" />\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/react-native-uiw/issues\"\n        style={{ color: '#333' }}\n      >\n        提交bug\n      </a>\n    </div>\n  );\n}\n","import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Editor from './Footer';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const Preview = CodeLayout.Preview;\n  const Code = CodeLayout.Code;\n  const Toolbar = CodeLayout.Toolbar;\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                >\n                  <Preview>\n                    <Child />\n                  </Preview>\n                  <Toolbar text={code} copied={getBooleanValue(param, 'copied', true)}>\n                    {param.title || '示例'}\n                  </Toolbar>\n                  <Code>\n                    <code {...rest} />\n                  </Code>\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer />\n      <Editor path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle width={50} onClick={() => scrollToTop()} format={() => <Icon type=\"arrow-up\" />} percent={percent} />\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: { 12: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeSelect = _interopRequireDefault(require(\"@uiw/react-native/lib/TreeSelect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  var option = [{\n    label: '北京',\n    value: '01',\n    children: [{\n      label: '东城区',\n      value: '01-1'\n    }, {\n      label: '西城区',\n      value: '01-2'\n    }, {\n      label: '崇文区',\n      value: '01-3'\n    }, {\n      label: '宣武区',\n      value: '01-4'\n    }]\n  }, {\n    label: '浙江',\n    value: '02',\n    children: [{\n      label: '杭州',\n      value: '02-1',\n      children: [{\n        label: '西湖区',\n        value: '02-1-1'\n      }, {\n        label: '上城区',\n        value: '02-1-2'\n      }, {\n        label: '江干区',\n        value: '02-1-3'\n      }, {\n        label: '下城区',\n        value: '02-1-4'\n      }]\n    }, {\n      label: '宁波',\n      value: '02-2',\n      children: [{\n        label: 'xx区',\n        value: '02-2-1'\n      }, {\n        label: 'yy区',\n        value: '02-2-2'\n      }]\n    }, {\n      label: '温州',\n      value: '02-3'\n    }, {\n      label: '嘉兴',\n      value: '02-4'\n    }, {\n      label: '湖州',\n      value: '02-5'\n    }, {\n      label: '绍兴',\n      value: '02-6'\n    }]\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_TreeSelect[\"default\"], {\n    defaultValue: ['01', '01-1'],\n    options: option,\n    onChange: function onChange(value, nodes) {\n      console.log(value, nodes);\n    }\n  });\n}\nreturn Demo; })(),115: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeSelect = _interopRequireDefault(require(\"@uiw/react-native/lib/TreeSelect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  var option = [{\n    labels: '北京',\n    values: '01',\n    children: [{\n      labels: '东城区',\n      values: '01-1'\n    }, {\n      labels: '西城区',\n      values: '01-2'\n    }, {\n      labels: '崇文区',\n      values: '01-3'\n    }, {\n      labels: '宣武区',\n      values: '01-4'\n    }]\n  }, {\n    labels: '浙江',\n    values: '02',\n    children: [{\n      labels: '杭州',\n      values: '02-1',\n      children: [{\n        labels: '西湖区',\n        values: '02-1-1'\n      }, {\n        labels: '上城区',\n        values: '02-1-2'\n      }, {\n        labels: '江干区',\n        values: '02-1-3'\n      }, {\n        labels: '下城区',\n        values: '02-1-4'\n      }]\n    }, {\n      labels: '宁波',\n      values: '02-2',\n      children: [{\n        labels: 'xx区',\n        values: '02-2-1'\n      }, {\n        labels: 'yy区',\n        values: '02-2-2'\n      }]\n    }, {\n      labels: '温州',\n      values: '02-3'\n    }, {\n      labels: '嘉兴',\n      values: '02-4'\n    }, {\n      labels: '湖州',\n      values: '02-5'\n    }, {\n      labels: '绍兴',\n      values: '02-6'\n    }]\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_TreeSelect[\"default\"], {\n    defaultValue: ['01', '01-1'],\n    options: option,\n    fieldNames: {\n      label: \"labels\",\n      value: 'values',\n      children: 'children'\n    },\n    onChange: function onChange(value, nodes) {\n      console.log(value, nodes);\n    }\n  });\n}\nreturn Demo; })(), },\n    data: {\n  \"12\": {\n    \"name\": 12,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _TreeSelect = _interopRequireDefault(require(\\\"@uiw/react-native/lib/TreeSelect\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  var option = [{\\n    label: '北京',\\n    value: '01',\\n    children: [{\\n      label: '东城区',\\n      value: '01-1'\\n    }, {\\n      label: '西城区',\\n      value: '01-2'\\n    }, {\\n      label: '崇文区',\\n      value: '01-3'\\n    }, {\\n      label: '宣武区',\\n      value: '01-4'\\n    }]\\n  }, {\\n    label: '浙江',\\n    value: '02',\\n    children: [{\\n      label: '杭州',\\n      value: '02-1',\\n      children: [{\\n        label: '西湖区',\\n        value: '02-1-1'\\n      }, {\\n        label: '上城区',\\n        value: '02-1-2'\\n      }, {\\n        label: '江干区',\\n        value: '02-1-3'\\n      }, {\\n        label: '下城区',\\n        value: '02-1-4'\\n      }]\\n    }, {\\n      label: '宁波',\\n      value: '02-2',\\n      children: [{\\n        label: 'xx区',\\n        value: '02-2-1'\\n      }, {\\n        label: 'yy区',\\n        value: '02-2-2'\\n      }]\\n    }, {\\n      label: '温州',\\n      value: '02-3'\\n    }, {\\n      label: '嘉兴',\\n      value: '02-4'\\n    }, {\\n      label: '湖州',\\n      value: '02-5'\\n    }, {\\n      label: '绍兴',\\n      value: '02-6'\\n    }]\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_TreeSelect[\\\"default\\\"], {\\n    defaultValue: ['01', '01-1'],\\n    options: option,\\n    onChange: function onChange(value, nodes) {\\n      console.log(value, nodes);\\n    }\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        label: '北京',\\n        value: '01',\\n        children: [\\n          {\\n            label: '东城区',\\n            value: '01-1',\\n          },\\n          {\\n            label: '西城区',\\n            value: '01-2',\\n          },\\n          {\\n            label: '崇文区',\\n            value: '01-3',\\n          },\\n          {\\n            label: '宣武区',\\n            value: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        label: '浙江',\\n        value: '02',\\n        children: [\\n          {\\n            label: '杭州',\\n            value: '02-1',\\n            children: [\\n              {\\n                label: '西湖区',\\n                value: '02-1-1',\\n              },\\n              {\\n                label: '上城区',\\n                value: '02-1-2',\\n              },\\n              {\\n                label: '江干区',\\n                value: '02-1-3',\\n              },\\n              {\\n                label: '下城区',\\n                value: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            label: '宁波',\\n            value: '02-2',\\n            children: [\\n              {\\n                label: 'xx区',\\n                value: '02-2-1',\\n              },\\n              {\\n                label: 'yy区',\\n                value: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            label: '温州',\\n            value: '02-3',\\n          },\\n          {\\n            label: '嘉兴',\\n            value: '02-4',\\n          },\\n          {\\n            label: '湖州',\\n            value: '02-5',\\n          },\\n          {\\n            label: '绍兴',\\n            value: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\"\n  },\n  \"115\": {\n    \"name\": 115,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _TreeSelect = _interopRequireDefault(require(\\\"@uiw/react-native/lib/TreeSelect\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  var option = [{\\n    labels: '北京',\\n    values: '01',\\n    children: [{\\n      labels: '东城区',\\n      values: '01-1'\\n    }, {\\n      labels: '西城区',\\n      values: '01-2'\\n    }, {\\n      labels: '崇文区',\\n      values: '01-3'\\n    }, {\\n      labels: '宣武区',\\n      values: '01-4'\\n    }]\\n  }, {\\n    labels: '浙江',\\n    values: '02',\\n    children: [{\\n      labels: '杭州',\\n      values: '02-1',\\n      children: [{\\n        labels: '西湖区',\\n        values: '02-1-1'\\n      }, {\\n        labels: '上城区',\\n        values: '02-1-2'\\n      }, {\\n        labels: '江干区',\\n        values: '02-1-3'\\n      }, {\\n        labels: '下城区',\\n        values: '02-1-4'\\n      }]\\n    }, {\\n      labels: '宁波',\\n      values: '02-2',\\n      children: [{\\n        labels: 'xx区',\\n        values: '02-2-1'\\n      }, {\\n        labels: 'yy区',\\n        values: '02-2-2'\\n      }]\\n    }, {\\n      labels: '温州',\\n      values: '02-3'\\n    }, {\\n      labels: '嘉兴',\\n      values: '02-4'\\n    }, {\\n      labels: '湖州',\\n      values: '02-5'\\n    }, {\\n      labels: '绍兴',\\n      values: '02-6'\\n    }]\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_TreeSelect[\\\"default\\\"], {\\n    defaultValue: ['01', '01-1'],\\n    options: option,\\n    fieldNames: {\\n      label: \\\"labels\\\",\\n      value: 'values',\\n      children: 'children'\\n    },\\n    onChange: function onChange(value, nodes) {\\n      console.log(value, nodes);\\n    }\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        labels: '北京',\\n        values: '01',\\n        children: [\\n          {\\n            labels: '东城区',\\n            values: '01-1',\\n          },\\n          {\\n            labels: '西城区',\\n            values: '01-2',\\n          },\\n          {\\n            labels: '崇文区',\\n            values: '01-3',\\n          },\\n          {\\n            labels: '宣武区',\\n            values: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        labels: '浙江',\\n        values: '02',\\n        children: [\\n          {\\n            labels: '杭州',\\n            values: '02-1',\\n            children: [\\n              {\\n                labels: '西湖区',\\n                values: '02-1-1',\\n              },\\n              {\\n                labels: '上城区',\\n                values: '02-1-2',\\n              },\\n              {\\n                labels: '江干区',\\n                values: '02-1-3',\\n              },\\n              {\\n                labels: '下城区',\\n                values: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '宁波',\\n            values: '02-2',\\n            children: [\\n              {\\n                labels: 'xx区',\\n                values: '02-2-1',\\n              },\\n              {\\n                labels: 'yy区',\\n                values: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '温州',\\n            values: '02-3',\\n          },\\n          {\\n            labels: '嘉兴',\\n            values: '02-4',\\n          },\\n          {\\n            labels: '湖州',\\n            values: '02-5',\\n          },\\n          {\\n            labels: '绍兴',\\n            values: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       fieldNames={{ label: \\\"labels\\\", value: 'values', children: 'children'}}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\"\n  }\n},\n    source: \"TreeSelect 级联选择器\\n---\\n\\n> 🚧 注意：测试版本谨慎使用。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n<!-- ![](https://user-images.githubusercontent.com/66067296/147335182-2abf199f-e206-4b4b-9edf-f1c29568d884.gif) -->\\n<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n### 基础示例\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        label: '北京',\\n        value: '01',\\n        children: [\\n          {\\n            label: '东城区',\\n            value: '01-1',\\n          },\\n          {\\n            label: '西城区',\\n            value: '01-2',\\n          },\\n          {\\n            label: '崇文区',\\n            value: '01-3',\\n          },\\n          {\\n            label: '宣武区',\\n            value: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        label: '浙江',\\n        value: '02',\\n        children: [\\n          {\\n            label: '杭州',\\n            value: '02-1',\\n            children: [\\n              {\\n                label: '西湖区',\\n                value: '02-1-1',\\n              },\\n              {\\n                label: '上城区',\\n                value: '02-1-2',\\n              },\\n              {\\n                label: '江干区',\\n                value: '02-1-3',\\n              },\\n              {\\n                label: '下城区',\\n                value: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            label: '宁波',\\n            value: '02-2',\\n            children: [\\n              {\\n                label: 'xx区',\\n                value: '02-2-1',\\n              },\\n              {\\n                label: 'yy区',\\n                value: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            label: '温州',\\n            value: '02-3',\\n          },\\n          {\\n            label: '嘉兴',\\n            value: '02-4',\\n          },\\n          {\\n            label: '湖州',\\n            value: '02-5',\\n          },\\n          {\\n            label: '绍兴',\\n            value: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\\n```\\n\\n\\n### 自定义字段名称\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        labels: '北京',\\n        values: '01',\\n        children: [\\n          {\\n            labels: '东城区',\\n            values: '01-1',\\n          },\\n          {\\n            labels: '西城区',\\n            values: '01-2',\\n          },\\n          {\\n            labels: '崇文区',\\n            values: '01-3',\\n          },\\n          {\\n            labels: '宣武区',\\n            values: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        labels: '浙江',\\n        values: '02',\\n        children: [\\n          {\\n            labels: '杭州',\\n            values: '02-1',\\n            children: [\\n              {\\n                labels: '西湖区',\\n                values: '02-1-1',\\n              },\\n              {\\n                labels: '上城区',\\n                values: '02-1-2',\\n              },\\n              {\\n                labels: '江干区',\\n                values: '02-1-3',\\n              },\\n              {\\n                labels: '下城区',\\n                values: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '宁波',\\n            values: '02-2',\\n            children: [\\n              {\\n                labels: 'xx区',\\n                values: '02-2-1',\\n              },\\n              {\\n                labels: 'yy区',\\n                values: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '温州',\\n            values: '02-3',\\n          },\\n          {\\n            labels: '嘉兴',\\n            values: '02-4',\\n          },\\n          {\\n            labels: '湖州',\\n            values: '02-5',\\n          },\\n          {\\n            labels: '绍兴',\\n            values: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       fieldNames={{ label: \\\"labels\\\", value: 'values', children: 'children'}}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| options | 级联数据 | `TreeSelectOption[]` | - |\\n| defaultValue | 默认选中项 | `string[]` | - |\\n| value | 选中项 | string[] | - |\\n| onChange | value 变化时触发 | `(value: string[], extend: { options: TreeSelectOption[] }) => void` | - |\\n| fieldNames | 自定义 options 中 label value children 的字段 | `{{ label: string, value: string, children: string }} | any` | - |\\n| activeColor | 选中文本颜色 | `string` | - |\\n| activeColor | 是否禁用 | `boolean` | `false` |\\n| placeholder | 占位符 | `string` | `请选择` |\\n| extra | 图标 | `JSX.Element` | - |\\n| showClear | 是否展示删除图标 | `boolean` | `true` |\\n| contentStyle | 容器样式 | `StyleProp<ViewStyle>` | - |\\n| placeholderColor | 搜索框默认文本颜色 | `ColorValue` | - |\\n| height | 弹出框高度 | `number` | `300` |\\n| modalProps | Modal组件参数 | `ModalProps` | `300` |\\n\\n\\n\",\n    headings:[]\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/TreeSelect/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/TreeSelect/README.md\" />;\nexport default DEMO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../Typography/Text';\nexport default function Ellipsis({ maxLen, children, placeholder, ...props }) {\n    let content = children;\n    if (maxLen && content && typeof content === 'string') {\n        content = content.length > maxLen ? content.substr(0, maxLen) + placeholder : content;\n    }\n    return <Text {...props}>{content}</Text>;\n}\nEllipsis.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.string]),\n    placeholder: PropTypes.string,\n    maxLen: PropTypes.number,\n};\nEllipsis.defaultProps = {\n    placeholder: '...',\n};\n","import React from 'react';\nimport Svg, { SvgXml, Path } from 'react-native-svg';\nimport svgPaths from '@uiw/icons/fonts/w-icon.json';\nexport default (props) => {\n    const { size = 26, name, fill = '#000000', stroke, xml, paths, color, ...otherProps } = props;\n    if (xml) {\n        return <SvgXml testID=\"RNE__Icon__svgXml\" xml={xml} height={size} width={size} {...otherProps}/>;\n    }\n    let pathData = paths;\n    if (!pathData) {\n        if (!name || !svgPaths[name]) {\n            return null;\n        }\n        pathData = svgPaths[name];\n    }\n    return (<Svg testID=\"RNE__Icon__svg\" fill={color || fill} stroke={stroke} height={size} width={size} viewBox=\"0 0 20 20\" {...otherProps}>\n      {pathData.map((d, i) => (<Path key={i} d={d} fillRule=\"evenodd\"/>))}\n    </Svg>);\n};\n","import React, { useState, useMemo } from 'react';\nimport { Modal, Animated, TouchableOpacity, StyleSheet } from 'react-native';\nimport { usePrevious } from '../utils';\nimport { useTheme } from '@shopify/restyle';\nfunction createStyles({ whiteColor, blackBackground }) {\n    return StyleSheet.create({\n        position: {\n            position: 'absolute',\n            backgroundColor: 'transparent',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            zIndex: 9998,\n        },\n        backdrop: {\n            backgroundColor: blackBackground,\n        },\n        content: {\n            backgroundColor: whiteColor,\n            position: 'absolute',\n        },\n    });\n}\nconst MaskLayer = (props = {}) => {\n    const theme = useTheme();\n    const styles = createStyles({\n        whiteColor: theme.colors.white || '#fff',\n        blackBackground: theme.colors.black || '#000',\n    });\n    const { maskClosable = true, children, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    visible: _vis, opacity = 0.6, onDismiss, animatedParallelShow = [], animatedParallelHide = [], ...otherProps } = props;\n    const [visible, setVisible] = useState(!!props.visible);\n    const preVisible = usePrevious(props.visible);\n    const [visibleModal, setVisibleModal] = useState(false);\n    const [bgOpacity] = useState(new Animated.Value(0));\n    useMemo(() => {\n        if (preVisible !== props.visible && props.visible) {\n            setVisible(!!props.visible);\n            setVisibleModal(false);\n            Animated.parallel([\n                Animated.spring(bgOpacity, {\n                    toValue: opacity,\n                    overshootClamping: true,\n                    useNativeDriver: true,\n                }),\n                ...animatedParallelShow,\n            ]).start();\n        }\n        else if (preVisible !== props.visible && !props.visible) {\n            Animated.parallel([\n                Animated.spring(bgOpacity, {\n                    toValue: 0,\n                    overshootClamping: true,\n                    useNativeDriver: true,\n                }),\n                ...animatedParallelHide,\n            ]).start(() => {\n                setVisible(!!props.visible);\n                setVisibleModal(true);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.visible]);\n    const backdropContent = <Animated.View style={[styles.position, styles.backdrop, { opacity: bgOpacity }]}/>;\n    let backdrop = (<TouchableOpacity activeOpacity={1} style={[styles.position]} onPress={() => onDismiss && onDismiss()}>\n      {backdropContent}\n    </TouchableOpacity>);\n    let isTrue = visible || false;\n    if (!visible && visibleModal) {\n        isTrue = false;\n    }\n    return (<Modal transparent={true} animationType=\"none\" {...otherProps} visible={isTrue}>\n      {maskClosable ? backdrop : backdropContent}\n      {children &&\n            React.Children.toArray(children).map((child) => {\n                if (!React.isValidElement(child)) {\n                    return;\n                }\n                return React.cloneElement(child, {\n                    ...child.props,\n                    ...{ style: [{ zIndex: 9999 }, child.props.style] },\n                });\n            })}\n    </Modal>);\n};\nexport default MaskLayer;\n","import React, { useState, useMemo, useRef, useEffect, useReducer } from 'react';\nimport { Animated, StyleSheet, Dimensions } from 'react-native';\nimport MaskLayer from '../MaskLayer';\nimport { useTheme } from '@shopify/restyle';\nconst MainWidth = Dimensions.get('window').width;\nconst MainHeight = Dimensions.get('window').height;\nexport const reducer = (state, action) => {\n    return {\n        ...state,\n        ...action,\n    };\n};\nconst Modal = (props = {}) => {\n    const { onClosed, visible, children, placement = 'bottom', containerStyle, ...otherProps } = props;\n    const theme = useTheme();\n    const AnimatedOpacity = useRef(new Animated.Value(0)).current;\n    const [{ layoutHeight, layoutWidth }, dispatch] = useReducer(reducer, { layoutHeight: 0, layoutWidth: 0 });\n    const [translateValue] = useState(new Animated.Value(0));\n    const { isVertical, isHorizontal } = useMemo(() => {\n        const isVertical = /^(top|bottom)$/.test(placement);\n        const isHorizontal = /^(left|right)$/.test(placement);\n        return { isVertical, isHorizontal };\n    }, [placement]);\n    useEffect(() => {\n        function getTransformSize() {\n            if (placement === 'top') {\n                return -layoutHeight;\n            }\n            if (placement === 'bottom') {\n                return layoutHeight;\n            }\n            if (placement === 'left') {\n                return -layoutWidth;\n            }\n            if (placement === 'right') {\n                return layoutWidth;\n            }\n            if (placement === 'middle') {\n                return layoutWidth;\n            }\n            return 0;\n        }\n        const result = getTransformSize();\n        if (!result)\n            return;\n        if (visible) {\n            translateValue.setValue(result);\n            Animated.parallel([\n                Animated.timing(AnimatedOpacity, {\n                    toValue: 1,\n                    duration: 0,\n                    useNativeDriver: false,\n                }),\n                Animated.spring(translateValue, {\n                    toValue: 0,\n                    overshootClamping: true,\n                    useNativeDriver: true,\n                }),\n            ]).start();\n        }\n        if (!visible) {\n            Animated.parallel([\n                Animated.spring(translateValue, {\n                    toValue: result,\n                    overshootClamping: true,\n                    useNativeDriver: true,\n                }),\n                Animated.timing(AnimatedOpacity, {\n                    toValue: 0,\n                    duration: 0,\n                    useNativeDriver: false,\n                }),\n            ]).start();\n        }\n    }, [visible, layoutHeight, layoutWidth, placement, translateValue, AnimatedOpacity]);\n    const translateStyle = {};\n    if (isVertical) {\n        translateStyle.translateY = translateValue;\n    }\n    if (isHorizontal) {\n        translateStyle.translateX = translateValue;\n    }\n    if (placement === 'middle') {\n        translateStyle.translateY = translateValue;\n    }\n    const child = useMemo(() => (<Animated.View style={[\n            styles.content,\n            placement && styles[placement],\n            placement === 'middle' && styles.middle_warp,\n            { opacity: AnimatedOpacity },\n            containerStyle,\n        ]}>\n        <Animated.View onLayout={(event) => {\n            const { height, width } = event.nativeEvent.layout;\n            if (placement === 'middle') {\n                dispatch({ layoutHeight: height, layoutWidth: width });\n            }\n            else if (!layoutHeight && isVertical) {\n                dispatch({ layoutHeight: height });\n            }\n            else if (!layoutWidth && isHorizontal) {\n                dispatch({ layoutWidth: width });\n            }\n        }} style={[\n            styles.content,\n            placement && styles[placement],\n            {\n                transform: [translateStyle],\n                backgroundColor: theme.colors.mask || '#fff',\n                position: 'relative',\n                zIndex: 10000,\n            },\n        ]}>\n          {children}\n        </Animated.View>\n      </Animated.View>), [\n        children,\n        AnimatedOpacity,\n        containerStyle,\n        isHorizontal,\n        isVertical,\n        layoutHeight,\n        layoutWidth,\n        placement,\n        theme.colors.mask,\n        translateStyle,\n    ]);\n    return (<MaskLayer {...otherProps} visible={visible} onDismiss={onClosed}>\n      {child}\n    </MaskLayer>);\n};\nexport default Modal;\nconst styles = StyleSheet.create({\n    content: {\n        position: 'absolute',\n        zIndex: 9999,\n    },\n    top: {\n        top: 0,\n        width: MainWidth,\n        left: 0,\n        right: 0,\n    },\n    bottom: {\n        bottom: 0,\n        left: 0,\n        width: MainWidth,\n        right: 0,\n    },\n    left: {\n        bottom: 0,\n        top: 0,\n        height: MainHeight,\n        left: 0,\n    },\n    right: {\n        bottom: 0,\n        top: 0,\n        height: MainHeight,\n        right: 0,\n    },\n    middle: {},\n    middle_warp: {\n        bottom: 0,\n        top: 0,\n        right: 0,\n        left: 0,\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n});\n","import { TreeSelect } from './tree-select';\nexport default TreeSelect;\n","import React, { useMemo, useState } from 'react';\nimport { usePropsValue } from '../utils/hooks';\nimport { getTreeDeep } from '../utils/tree-select';\nimport { View, TouchableOpacity, ScrollView, Pressable } from 'react-native';\nimport Icon from '../Icon';\nimport Ellipsis from '../Ellipsis';\nimport Modal from '../Modal';\nimport { useTheme } from '@shopify/restyle';\nimport { StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nexport const TreeSelect = (p) => {\n    const theme = useTheme();\n    const style = createStyles({\n        bgColor: theme.colors.mask,\n        themeColor: theme.colors.primary_background,\n        themeText: theme.colors.text,\n    });\n    const defaultProps = {\n        options: [],\n        fieldNames: {},\n        defaultValue: [],\n        activeColor: theme.colors.primary_background || '#3578e5',\n        placeholder: '请选择',\n        extra: undefined,\n        showClear: true,\n        contentStyle: {},\n        placeholderColor: '',\n        disabled: false,\n        height: 300,\n        modalProps: {},\n    };\n    const props = { ...defaultProps, ...p };\n    const labelName = props.fieldNames.label || 'label';\n    const valueName = props.fieldNames.value || 'value';\n    const childrenName = props.fieldNames.children || 'children';\n    const [visible, setVisible] = useState(false);\n    const [value, setValue] = usePropsValue({\n        value: props.value,\n        defaultValue: props.defaultValue,\n    });\n    const [deep, optionsMap, optionsParentMap] = useMemo(() => {\n        const deep = getTreeDeep(props.options, childrenName);\n        const optionsMap = new Map();\n        const optionsParentMap = new Map();\n        function traverse(current, children) {\n            children.forEach((item) => {\n                optionsParentMap.set(item[valueName], current);\n                optionsMap.set(item[valueName], item);\n                if (item[childrenName]) {\n                    traverse(item, item[childrenName]);\n                }\n            });\n        }\n        traverse(undefined, props.options);\n        return [deep, optionsMap, optionsParentMap];\n    }, [props.options]);\n    const initialLabelValues = useMemo(() => {\n        const labels = [];\n        props.defaultValue?.forEach((defaultValue) => {\n            const defaultOption = optionsMap.get(defaultValue);\n            if (defaultOption) {\n                labels.push(defaultOption[labelName]);\n            }\n        });\n        return labels;\n    }, [props.defaultValue, optionsMap, labelName]);\n    const [labelValues, setLabelValues] = useState(initialLabelValues);\n    const onItemSelect = (node) => {\n        // 找到父级节点\n        const parentNodes = [];\n        let current = node;\n        while (current) {\n            parentNodes.unshift(current);\n            const next = optionsParentMap.get(current[valueName]);\n            current = next;\n        }\n        const values = parentNodes.map((i) => i[valueName]);\n        const labels = parentNodes.map((i) => i[labelName]);\n        setLabelValues(labels);\n        setValue(values);\n        props.onChange?.(values, {\n            options: parentNodes,\n        });\n    };\n    // item样式\n    const activeStyles = (index, isActive, isLast) => {\n        let styles;\n        // 选中第一排\n        if (isActive && index === 0) {\n            styles = {\n                ...style.active_first_item,\n            };\n        }\n        // 未选中第一排\n        if (!isActive && index === 0) {\n            styles = {\n                ...style.not_active_first_item,\n            };\n        }\n        // 选中后排\n        if (isActive && index !== 0) {\n            styles = {\n                ...style.active_nth_item,\n                borderColor: props.activeColor,\n                marginRight: isLast ? 10 : 0,\n            };\n        }\n        // 未选中后排\n        if (!isActive && index !== 0) {\n            styles = {\n                ...style.not_active_nth_item,\n                marginRight: isLast ? 10 : 0,\n            };\n        }\n        return styles;\n    };\n    const renderItems = (columnOptions = [], index) => {\n        return columnOptions.map((item) => {\n            const isActive = item[valueName] === value[index];\n            const active_font_color = index === 0 ? theme.colors.primary_text : props.activeColor;\n            // 是否是最后一列\n            const isLast = deep - 1 === index;\n            return (<TouchableOpacity activeOpacity={0.9} key={item[valueName]} onPress={() => {\n                    if (!isActive) {\n                        onItemSelect(item);\n                    }\n                }} style={[style.item, { ...activeStyles(index, isActive, isLast) }]}>\n          <Text style={isActive ? { color: active_font_color, fontWeight: 'bold' } : { color: theme.colors.text }}>\n            {item[labelName]}\n          </Text>\n        </TouchableOpacity>);\n        });\n    };\n    const renderColumns = () => {\n        const columns = [];\n        for (let i = 0; i < deep; i++) {\n            let width = `${100 / deep}%`;\n            // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n            if (deep === 2 && i === 0) {\n                width = `33.33%`;\n            }\n            if (deep === 2 && i === 1) {\n                width = `66.67%`;\n            }\n            const column = (<ScrollView key={i} style={{ width, flex: 1, backgroundColor: i === 0 ? theme.colors.gray100 : theme.colors.mask, }}>\n          {renderItems(i === 0 ? props.options : optionsMap.get(value[i - 1])?.[childrenName], i)}\n        </ScrollView>);\n            columns.push(column);\n        }\n        return columns;\n    };\n    return (<React.Fragment>\n      <Pressable onPress={() => {\n            if (props.disabled)\n                return;\n            setVisible(true);\n        }}>\n        <View style={[props.disabled ? style.disabled : style.content, props.contentStyle]}>\n          <Ellipsis style={[style.contentTitle, { color: props.placeholderColor || theme.colors.text }]} maxLen={30}>\n            {labelValues.join() || props.placeholder}\n          </Ellipsis>\n          {React.isValidElement(props.extra) ? (props.extra) : value && props.showClear ? (<Pressable onPress={() => {\n                setValue([]);\n                setLabelValues([]);\n                props.onChange?.([], {\n                    options: [],\n                });\n            }} style={{ paddingRight: 3 }}>\n              <Icon name=\"circle-close-o\" size={18} color={theme.colors.text}/>\n            </Pressable>) : (<Icon name=\"right\" size={18} color=\"#A19EA0\"/>)}\n        </View>\n      </Pressable>\n      <Modal visible={visible} onClosed={() => setVisible(false)} {...props.modalProps}>\n        <View style={{ marginBottom: 10 }}/>\n        <View style={{ height: props.height, flexDirection: 'row' }}>{renderColumns()}</View>\n      </Modal>\n    </React.Fragment>);\n    function createStyles({ bgColor, themeText }) {\n        return StyleSheet.create({\n            item: {\n                minHeight: 50,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n            },\n            active_first_item: {\n                backgroundColor: bgColor,\n            },\n            not_active_first_item: {\n                backgroundColor: bgColor,\n            },\n            active_nth_item: {\n                backgroundColor: bgColor,\n                borderWidth: 1,\n                borderRadius: 5,\n                marginLeft: 10,\n                marginBottom: 10,\n            },\n            not_active_nth_item: {\n                backgroundColor: bgColor,\n                borderColor: bgColor,\n                borderWidth: 1,\n                borderRadius: 5,\n                marginLeft: 10,\n                marginBottom: 10,\n            },\n            content: {\n                flexDirection: 'row',\n                height: 35,\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                paddingRight: 5,\n                backgroundColor: bgColor,\n                paddingHorizontal: 16,\n            },\n            disabled: {\n                flexDirection: 'row',\n                height: 35,\n                alignItems: 'center',\n                justifyContent: 'space-between',\n                paddingRight: 5,\n                backgroundColor: bgColor,\n                paddingHorizontal: 16,\n            },\n            contentTitle: {\n                fontSize: 16,\n                color: themeText,\n            },\n        });\n    }\n};\n","import React from 'react';\nimport { Text as BaseText } from 'react-native';\nimport { useTheme } from '@shopify/restyle';\nimport { isEmpty } from 'lodash';\nconst Text = (props) => {\n    const { color = 'text', children, style, ...others } = props;\n    const theme = useTheme();\n    const getColorScheme = () => {\n        // app.ts 包裹了ThemeProvider传递了theme\n        if (!isEmpty(theme.colors)) {\n            return theme.colors;\n        }\n        return {\n            [color]: '#ccc',\n        };\n    };\n    return (<BaseText style={[{ color: getColorScheme()[color] }, style]} {...others}>\n      {children}\n    </BaseText>);\n};\nText.displayName = 'Text';\nexport default Text;\n","export const green = '#28a745'; // 成功-绿色\nexport const blue = '#008EF0'; // 主要-蓝色\nexport const cyan = '#1EABCD'; // 信息-青色\nexport const navy = '#393E48'; // 导航-藏青\nexport const yellow = '#ffc107'; // 警告-黄色\nexport const orange = '#F95C2B'; // 提醒-橙色\nexport const red = '#dc3545'; // 危险-红色\nexport const black = '#000000';\nexport const white = '#ffffff';\nexport const colorsPalette = {\n    // DARKS TODO: deprecate and use greys\n    dark10: '#20303C',\n    dark20: '#43515C',\n    dark30: '#66737C',\n    dark40: '#858F96',\n    dark50: '#A3ABB0',\n    dark60: '#C2C7CB',\n    dark70: '#E0E3E5',\n    dark80: '#F2F4F5',\n    // GREYS\n    grey10: '#20303C',\n    grey20: '#4D5963',\n    grey30: '#79838A',\n    grey40: '#A6ACB1',\n    grey50: '#D2D6D8',\n    grey60: '#E8ECF0',\n    grey70: '#F0F4F7',\n    grey80: '#F8f9FA',\n    // BLUES\n    blue10: '#0097C3',\n    blue20: '#00A8DA',\n    blue30: '#00BBF2',\n    blue40: '#40CCF6',\n    blue50: '#85DFF9',\n    blue60: '#B2EAFB',\n    blue70: '#CFF3FD',\n    blue80: '#E3F8FE',\n    // CYAN,\n    cyan10: '#00AAAF',\n    cyan20: '#32BABC',\n    cyan30: '#3CC7C5',\n    cyan40: '#64D4D2',\n    cyan50: '#8BDFDD',\n    cyan60: '#B1E9E9',\n    cyan70: '#D8F4F4',\n    cyan80: '#EBF9F9',\n    // GREENS\n    green10: '#00A36F',\n    green20: '#00B47A',\n    green30: '#00CD8B',\n    green40: '#45DBAA',\n    green50: '#87E7C8',\n    green60: '#B2F0DC',\n    green70: '#CFF6E9',\n    green80: '#E3FAF2',\n    // YELLOWS\n    yellow10: '#E19800',\n    yellow20: '#F0A700',\n    yellow30: '#FFB600',\n    yellow40: '#FFCA45',\n    yellow50: '#FFDD87',\n    yellow60: '#FFEAB5',\n    yellow70: '#FFF2D1',\n    yellow80: '#FFF7E3',\n    // ORANGE,\n    orange10: '#D9644A',\n    orange20: '#E66A4E',\n    orange30: '#F27052',\n    orange40: '#F37E63',\n    orange50: '#F7A997',\n    orange60: '#FAC6BA',\n    orange70: '#FCE2DC',\n    orange80: '#FEF0ED',\n    // REDS\n    red10: '#D72E15',\n    red20: '#EB4229',\n    red30: '#FF563D',\n    red40: '#FF8472',\n    red50: '#FFB2A6',\n    red60: '#FFD0C9',\n    red70: '#FFE3DE',\n    red80: '#FFF0ED',\n    // PURPLE,\n    purple10: '#8B1079',\n    purple20: '#A0138E',\n    purple30: '#B13DAC',\n    purple40: '#C164BD',\n    purple50: '#D08BCD',\n    purple60: '#E0B1DE',\n    purple70: '#EFD8EE',\n    purple80: '#F7EBF7',\n    // VIOLETS\n    violet10: '#3022D0',\n    violet20: '#4434EB',\n    violet30: '#5847FF',\n    violet40: '#8579FF',\n    violet50: '#B2ABFF',\n    violet60: '#D1CCFF',\n    violet70: '#E3E0FF',\n    violet80: '#F0EEFF',\n    transparent: 'transparent',\n};\n","import { useRef, useEffect } from 'react';\nimport { useMemoizedFn, useUpdate } from 'ahooks';\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\nexport function usePropsValue(options) {\n    const { value, defaultValue, onChange } = options;\n    const update = useUpdate();\n    const stateRef = useRef(value !== undefined ? value : defaultValue);\n    if (value !== undefined) {\n        stateRef.current = value;\n    }\n    const setState = useMemoizedFn((v) => {\n        if (value === undefined) {\n            stateRef.current = v;\n            update();\n        }\n        onChange?.(v);\n    });\n    return [stateRef.current, setState];\n}\nexport function useLatest(value) {\n    const ref = useRef(value);\n    ref.current = value;\n    return ref;\n}\n","// 找到树的深度\nexport function getTreeDeep(treeData, childrenName = 'children') {\n    const walker = (tree) => {\n        let deep = 0;\n        tree.forEach((item) => {\n            if (item[childrenName]) {\n                deep = Math.max(deep, walker(item[childrenName]) + 1);\n            }\n            else {\n                deep = Math.max(deep, 1);\n            }\n        });\n        return deep;\n    };\n    return walker(treeData);\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["props","path","url","test","concat","replace","_jsxs","style","paddingBlock","children","_jsx","href","target","rel","color","Divider","type","Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","mdData","_objectWithoutProperties","_excluded","Preview","CodeLayout","Code","Toolbar","$dom","useRef","ref","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","data","value","getURLParameters","disableCheckered","bordered","text","copied","title","Footer","Editor","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","_react","_interopRequireDefault","_TreeSelect","obj","__esModule","createElement","options","label","onChange","nodes","console","log","labels","values","fieldNames","headings","md","Ellipsis","maxLen","placeholder","content","length","substr","Text","defaultProps","_props$size","size","name","_props$fill","fill","stroke","xml","paths","otherProps","SvgXml","testID","height","pathData","svgPaths","Svg","viewBox","map","d","i","Path","fillRule","arguments","undefined","theme","useTheme","styles","whiteColor","blackBackground","StyleSheet","create","backgroundColor","top","bottom","left","right","zIndex","backdrop","createStyles","colors","white","black","_props$maskClosable","maskClosable","_props$opacity","visible","opacity","onDismiss","_props$animatedParall","animatedParallelShow","_props$animatedParall2","animatedParallelHide","_useState","useState","_useState2","_slicedToArray","setVisible","preVisible","usePrevious","_useState3","_useState4","visibleModal","setVisibleModal","_useState5","Animated","Value","bgOpacity","useMemo","parallel","spring","toValue","overshootClamping","useNativeDriver","_toConsumableArray","backdropContent","View","TouchableOpacity","activeOpacity","onPress","isTrue","Modal","transparent","animationType","React","toArray","MainWidth","Dimensions","MainHeight","reducer","state","action","onClosed","_props$placement","placement","containerStyle","AnimatedOpacity","current","_useReducer","useReducer","layoutHeight","layoutWidth","_useReducer2","_useReducer2$","dispatch","translateValue","_useMemo","isVertical","isHorizontal","useEffect","result","setValue","timing","duration","translateStyle","translateY","translateX","middle_warp","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","transform","mask","MaskLayer","middle","justifyContent","alignItems","p","bgColor","themeText","item","minHeight","display","active_first_item","not_active_first_item","active_nth_item","borderWidth","borderRadius","marginLeft","marginBottom","not_active_nth_item","borderColor","flexDirection","paddingRight","paddingHorizontal","disabled","contentTitle","fontSize","themeColor","primary_background","activeColor","extra","showClear","contentStyle","placeholderColor","modalProps","labelName","valueName","childrenName","_usePropsValue","usePropsValue","_usePropsValue2","deep","getTreeDeep","optionsMap","Map","optionsParentMap","traverse","forEach","set","_useMemo2","initialLabelValues","_props$defaultValue","defaultOption","push","labelValues","setLabelValues","activeStyles","isActive","isLast","marginRight","renderItems","active_font_color","primary_text","_props$onChange","parentNodes","unshift","call","onItemSelect","fontWeight","Pressable","join","_props$onChange2","columns","_optionsMap$get","column","ScrollView","flex","gray100","renderColumns","_props$color","others","BaseText","isEmpty","_defineProperty","displayName","green","blue","cyan","navy","yellow","orange","red","colorsPalette","dark10","dark20","dark30","dark40","dark50","dark60","dark70","dark80","grey10","grey20","grey30","grey40","grey50","grey60","grey70","grey80","blue10","blue20","blue30","blue40","blue50","blue60","blue70","blue80","cyan10","cyan20","cyan30","cyan40","cyan50","cyan60","cyan70","cyan80","green10","green20","green30","green40","green50","green60","green70","green80","yellow10","yellow20","yellow30","yellow40","yellow50","yellow60","yellow70","yellow80","orange10","orange20","orange30","orange40","orange50","orange60","orange70","orange80","red10","red20","red30","red40","red50","red60","red70","red80","purple10","purple20","purple30","purple40","purple50","purple60","purple70","purple80","violet10","violet20","violet30","violet40","violet50","violet60","violet70","violet80","update","useUpdate","stateRef","setState","useMemoizedFn","v","useLatest","treeData","walker","tree","Math","max","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}