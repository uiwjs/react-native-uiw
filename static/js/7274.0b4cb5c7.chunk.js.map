{"version":3,"file":"static/js/7274.0b4cb5c7.chunk.js","mappings":"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","sources":["component/Preview/index.js","pages/docs/react-native-template/mock-data/README.md","pages/docs/react-native-template/mock-data/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync","pages/docs/react-native-template/mock-data|sync|//.(png%7Cgif%7Cjpg%7Csvg)$"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && node.tagName === 'pre' && node.children[0].data?.meta) {\n            const meta = node.children[0].data?.meta;\n            if (isMeta(meta)) {\n              node.tagName = 'div';\n              if (!node.properties) {\n                node.properties = {};\n              }\n              node.properties['data-md'] = meta;\n              node.properties['data-meta'] = 'preview';\n            }\n          }\n        }}\n        components={{\n          div: ({ node, ...props }) => {\n            const { 'data-meta': meta, 'data-md': metaData } = props;\n            if (meta === 'preview') {\n              const line = node.position?.start.line;\n              const metaId = getMetaId(meta) || String(line);\n              const Child = mdData.components[`${metaId}`];\n              if (metaId && typeof Child === 'function') {\n                const code = mdData.data[metaId].value || '';\n                const param = getURLParameters(metaData);\n                return (\n                  <CodeLayout\n                    disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                    disableToolbar={getBooleanValue(param, 'disableToolbar', false)}\n                    disableCode={getBooleanValue(param, 'disableCode', false)}\n                    disablePreview={getBooleanValue(param, 'disablePreview', false)}\n                    bordered={getBooleanValue(param, 'bordered', true)}\n                    copied={getBooleanValue(param, 'copied', true)}\n                    background={param.background}\n                    toolbar={param.title || '示例'}\n                    codeProps={{ style: { padding: 0 } }}\n                    style={{ padding: 0 }}\n                    code={<pre {...props} />}\n                    text={code}\n                  >\n                    <Child />\n                  </CodeLayout>\n                );\n              }\n            }\n            return <div {...props} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"# Mock 数据\\n\\n为了方便前期前端快速开发，不需要等待后端接口，系统提供了mock功能。更多配置请参考[mocker-api](https://github.com/jaywcjlove/mocker-api)\\n\\n### 一、编写mock\\n\\n> 在 mocker 下创建新的 js 文件。 如果有多个相关页面，您可以创建一个新文件夹来放置相关文件\\n```bash\\n  mocker\\n+     index.js\\n+     user.mock.js\\n  ...\\nsrc\\n  models\\n  pages\\n...\\npackage.json\\n```\\n\\n> 在/mocker/user.mock.js目录下进行mock数据编写，比如：\\n\\n```js\\nmodule.exports = {\\n  'POST /api/login': (req, res) => {\\n    let {username, password} = req.body;\\n    if (username === 'admin' && password === 'admin!') {\\n      return res.status(201).json({\\n        message: 'Login successful!',\\n        token: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9',\\n        data: {\\n          nikename: 'Hello App',\\n        },\\n      });\\n    }\\n    res.status(401).json({\\n      message: 'username or password is error.',\\n    });\\n  },\\n};\\n```\\n\\n### 二、界面渲染\\n\\n```js\\nimport React, { useState } from 'react';\\nimport { connect } from 'react-redux';\\nimport { Button } from '@uiw/react-native';\\nimport { login } from '../../hooks/users'\\n\\nconst Demo = ({ update }) => {\\n  const [store, setStore] = useState({\\n    formData: {\\n      username: 'admin',\\n      password: 'admin!',\\n    },\\n  })\\n\\n  const { mutate, isLoading } = login({\\n    update,\\n    formData,\\n  })\\n\\n  return (\\n     <Button\\n       textStyle={{ fontSize: 16, fontWeight: '200' }}\\n       bordered={false}\\n       color=\\\"#BFBFBF\\\"\\n       loading={isLoading}\\n       disabled={isLoading}\\n       onPress={() => mutate?.({ ...formData })}>\\n       Sign In\\n     </Button>\\n  );\\n}\\n\\nexport default connect(\\n  ({}) => ({}),\\n  ({ global }) => ({\\n    update: global.update\\n  }),\\n)(Demo);\\n\\n```\\n### 三、使用react-query调用api\\n[react-query](https://tanstack.com/query/latest) 更详细的使用，请参照官方文档\\n\\n```js\\nimport { userLogin } from '../services/users';\\nimport { useQuery, useMutation } from 'react-query'\\n\\n// 登录\\nexport const login = ({ config = {}, update, formData }) => {\\n  const mutation = useMutation({\\n    mutationFn: userLogin,\\n    onSuccess: async (data) => {\\n      console.log('data',data)\\n    },\\n    ...config\\n  })\\n  return mutation\\n}\\n\\n\\n```\\n\\n### 四、services文件调用\\n\\n> 配合系统封装的request进行mock数据请求。如需区分是mock数据，还是真实后端数据，调用真实数据时,注释mocker数据配置即可\\n\\n```js\\n  import { fetch } from '../utils';\\n\\n  export async function userLogin(params) {\\n    return fetch('/api/login', { body: params });\\n  }\\n```\\n\\n注：mock功能只推荐在开发模式下开启。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n## License\\n\\nLicensed under the MIT License.\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from './README.md';\n\nconst transformImageUri = (url: string) => {\n  const reqImage = (require as any).context!('./', true, /\\.(png|gif|jpg|svg)$/);\n  const urlAddr = reqImage(url);\n  return urlAddr;\n};\n\nconst DEMO = () => (\n  <Preview\n    {...md}\n    transformImageUri={transformImageUri}\n    path=\"website/src/pages/docs/react-native-template/quickstart/README.md\"\n  />\n);\n\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 40470;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","_node$children$0$data","type","tagName","data","meta","_node$children$0$data2","isMeta","properties","components","div","_ref2","props","_excluded2","metaData","_node$position","line","position","start","metaId","getMetaId","String","Child","concat","code","value","getURLParameters","CodeLayout","disableCheckered","disableToolbar","disableCode","disablePreview","bordered","copied","background","toolbar","title","codeProps","style","padding","text","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","transformImageUri","url","require","reqImage","Preview","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}