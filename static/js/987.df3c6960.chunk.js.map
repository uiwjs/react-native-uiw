{"version":3,"file":"static/js/987.df3c6960.chunk.js","mappings":"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","sources":["component/Preview/index.js","react-native/lib/SwipeAction/README.md","pages/components/swipeaction/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  disableToolbar={getBooleanValue(param, 'disableToolbar', false)}\n                  disableCode={getBooleanValue(param, 'disableCode', false)}\n                  disablePreview={getBooleanValue(param, 'disablePreview', false)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                  copied={getBooleanValue(param, 'copied', true)}\n                  background={param.background}\n                  toolbar={param.title || '示例'}\n                  code={<code {...rest} />}\n                  text={code}\n                >\n                  <Child />\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"SwipeAction 滑动操作组件。\\n---\\n结合手势操作，从屏幕一侧唤出操作。\\n\\n![](https://user-images.githubusercontent.com/57083007/146733663-6c83fca4-72df-424d-8364-47533f57ece6.gif)\\n\\n### 基础示例\\n\\n```jsx\\nimport React from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const right = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n      onPress: () => ref?.current?.swipeable.close()\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 250,\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} right={right}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 从左侧滑出\\n\\n```jsx\\nimport React from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const left = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n      onPress: () => ref?.current?.swipeable.close()\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 250,\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} left={left}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 禁用\\n\\n```jsx\\nimport React,{ useRef } from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const ref = useRef()\\n  const right = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 250,\\n      disabled:true\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} right={right}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 主动关闭\\n\\n```jsx\\nimport React,{ useRef } from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const ref = useRef()\\n  const right = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n      onPress: () => ref?.current?.swipeable.close()\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 400,\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} right={right}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n组件继承react-native-gesture-handler[`Swipeable`](https://docs.swmansion.com/react-native-gesture-handler/docs/api/components/swipeable)\\n### Props\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `right` | 右边滑动出来的元素 | Array<`ColumnProps`> | - |\\n| `left` | 左边滑动出来的元素 | Array<`ColumnProps`> | - |\\n| `buttonWidth` | 按钮宽度 |  number | 60 |\\n| `actionViewStyle` | 弹出框样式 |  ViewStyle | - |\\n| `rectButtonStyle` | 弹出button样式 |  ViewStyle | - |\\n\\n\\n### ColumnProps\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `text` | 显示文字 | string | - |\\n| `color` | 背景色 | string | - |\\n| `onPress` | 点击元素触发 |  () => void | - |\\n| `disabled` | 是否禁用 | Boolean | - |\\n| `render` | 自定义元素 | (text: string, record: Column, index: number) => React.ReactNode | - |\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/SwipeAction/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/SwipeAction/README.md\" />;\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","props","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","concat","data","value","getURLParameters","CodeLayout","disableCheckered","disableToolbar","disableCode","disablePreview","bordered","copied","background","toolbar","title","text","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","Preview","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}