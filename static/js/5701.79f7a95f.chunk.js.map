{"version":3,"file":"static/js/5701.79f7a95f.chunk.js","mappings":"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","sources":["react-native/lib/TreeSelect/README.md","pages/components/treeSelect/index.tsx","react-native/lib/Ellipsis/index.js","react-native/lib/MaskLayer/index.js","react-native/lib/Modal/index.js","react-native/lib/TreeSelect/index.js","react-native/lib/TreeSelect/tree-select.js","react-native/lib/Typography/Text.js","react-native/lib/utils/colors.js","react-native/lib/utils/hooks.js","react-native/lib/utils/tree-select.js"],"sourcesContent":["\nexport default {\n    components: { 12: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeSelect = _interopRequireDefault(require(\"@uiw/react-native/lib/TreeSelect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  var option = [{\n    label: '北京',\n    value: '01',\n    children: [{\n      label: '东城区',\n      value: '01-1'\n    }, {\n      label: '西城区',\n      value: '01-2'\n    }, {\n      label: '崇文区',\n      value: '01-3'\n    }, {\n      label: '宣武区',\n      value: '01-4'\n    }]\n  }, {\n    label: '浙江',\n    value: '02',\n    children: [{\n      label: '杭州',\n      value: '02-1',\n      children: [{\n        label: '西湖区',\n        value: '02-1-1'\n      }, {\n        label: '上城区',\n        value: '02-1-2'\n      }, {\n        label: '江干区',\n        value: '02-1-3'\n      }, {\n        label: '下城区',\n        value: '02-1-4'\n      }]\n    }, {\n      label: '宁波',\n      value: '02-2',\n      children: [{\n        label: 'xx区',\n        value: '02-2-1'\n      }, {\n        label: 'yy区',\n        value: '02-2-2'\n      }]\n    }, {\n      label: '温州',\n      value: '02-3'\n    }, {\n      label: '嘉兴',\n      value: '02-4'\n    }, {\n      label: '湖州',\n      value: '02-5'\n    }, {\n      label: '绍兴',\n      value: '02-6'\n    }]\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_TreeSelect[\"default\"], {\n    defaultValue: ['01', '01-1'],\n    options: option,\n    onChange: function onChange(value, nodes) {\n      console.log(value, nodes);\n    }\n  });\n}\nreturn Demo; })(),115: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _TreeSelect = _interopRequireDefault(require(\"@uiw/react-native/lib/TreeSelect\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction Demo() {\n  var option = [{\n    labels: '北京',\n    values: '01',\n    children: [{\n      labels: '东城区',\n      values: '01-1'\n    }, {\n      labels: '西城区',\n      values: '01-2'\n    }, {\n      labels: '崇文区',\n      values: '01-3'\n    }, {\n      labels: '宣武区',\n      values: '01-4'\n    }]\n  }, {\n    labels: '浙江',\n    values: '02',\n    children: [{\n      labels: '杭州',\n      values: '02-1',\n      children: [{\n        labels: '西湖区',\n        values: '02-1-1'\n      }, {\n        labels: '上城区',\n        values: '02-1-2'\n      }, {\n        labels: '江干区',\n        values: '02-1-3'\n      }, {\n        labels: '下城区',\n        values: '02-1-4'\n      }]\n    }, {\n      labels: '宁波',\n      values: '02-2',\n      children: [{\n        labels: 'xx区',\n        values: '02-2-1'\n      }, {\n        labels: 'yy区',\n        values: '02-2-2'\n      }]\n    }, {\n      labels: '温州',\n      values: '02-3'\n    }, {\n      labels: '嘉兴',\n      values: '02-4'\n    }, {\n      labels: '湖州',\n      values: '02-5'\n    }, {\n      labels: '绍兴',\n      values: '02-6'\n    }]\n  }];\n  return /*#__PURE__*/_react[\"default\"].createElement(_TreeSelect[\"default\"], {\n    defaultValue: ['01', '01-1'],\n    options: option,\n    fieldNames: {\n      label: \"labels\",\n      value: 'values',\n      children: 'children'\n    },\n    onChange: function onChange(value, nodes) {\n      console.log(value, nodes);\n    }\n  });\n}\nreturn Demo; })(), },\n    data: {\n  \"12\": {\n    \"name\": 12,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _TreeSelect = _interopRequireDefault(require(\\\"@uiw/react-native/lib/TreeSelect\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  var option = [{\\n    label: '北京',\\n    value: '01',\\n    children: [{\\n      label: '东城区',\\n      value: '01-1'\\n    }, {\\n      label: '西城区',\\n      value: '01-2'\\n    }, {\\n      label: '崇文区',\\n      value: '01-3'\\n    }, {\\n      label: '宣武区',\\n      value: '01-4'\\n    }]\\n  }, {\\n    label: '浙江',\\n    value: '02',\\n    children: [{\\n      label: '杭州',\\n      value: '02-1',\\n      children: [{\\n        label: '西湖区',\\n        value: '02-1-1'\\n      }, {\\n        label: '上城区',\\n        value: '02-1-2'\\n      }, {\\n        label: '江干区',\\n        value: '02-1-3'\\n      }, {\\n        label: '下城区',\\n        value: '02-1-4'\\n      }]\\n    }, {\\n      label: '宁波',\\n      value: '02-2',\\n      children: [{\\n        label: 'xx区',\\n        value: '02-2-1'\\n      }, {\\n        label: 'yy区',\\n        value: '02-2-2'\\n      }]\\n    }, {\\n      label: '温州',\\n      value: '02-3'\\n    }, {\\n      label: '嘉兴',\\n      value: '02-4'\\n    }, {\\n      label: '湖州',\\n      value: '02-5'\\n    }, {\\n      label: '绍兴',\\n      value: '02-6'\\n    }]\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_TreeSelect[\\\"default\\\"], {\\n    defaultValue: ['01', '01-1'],\\n    options: option,\\n    onChange: function onChange(value, nodes) {\\n      console.log(value, nodes);\\n    }\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        label: '北京',\\n        value: '01',\\n        children: [\\n          {\\n            label: '东城区',\\n            value: '01-1',\\n          },\\n          {\\n            label: '西城区',\\n            value: '01-2',\\n          },\\n          {\\n            label: '崇文区',\\n            value: '01-3',\\n          },\\n          {\\n            label: '宣武区',\\n            value: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        label: '浙江',\\n        value: '02',\\n        children: [\\n          {\\n            label: '杭州',\\n            value: '02-1',\\n            children: [\\n              {\\n                label: '西湖区',\\n                value: '02-1-1',\\n              },\\n              {\\n                label: '上城区',\\n                value: '02-1-2',\\n              },\\n              {\\n                label: '江干区',\\n                value: '02-1-3',\\n              },\\n              {\\n                label: '下城区',\\n                value: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            label: '宁波',\\n            value: '02-2',\\n            children: [\\n              {\\n                label: 'xx区',\\n                value: '02-2-1',\\n              },\\n              {\\n                label: 'yy区',\\n                value: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            label: '温州',\\n            value: '02-3',\\n          },\\n          {\\n            label: '嘉兴',\\n            value: '02-4',\\n          },\\n          {\\n            label: '湖州',\\n            value: '02-5',\\n          },\\n          {\\n            label: '绍兴',\\n            value: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\"\n  },\n  \"115\": {\n    \"name\": 115,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _TreeSelect = _interopRequireDefault(require(\\\"@uiw/react-native/lib/TreeSelect\\\"));\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction Demo() {\\n  var option = [{\\n    labels: '北京',\\n    values: '01',\\n    children: [{\\n      labels: '东城区',\\n      values: '01-1'\\n    }, {\\n      labels: '西城区',\\n      values: '01-2'\\n    }, {\\n      labels: '崇文区',\\n      values: '01-3'\\n    }, {\\n      labels: '宣武区',\\n      values: '01-4'\\n    }]\\n  }, {\\n    labels: '浙江',\\n    values: '02',\\n    children: [{\\n      labels: '杭州',\\n      values: '02-1',\\n      children: [{\\n        labels: '西湖区',\\n        values: '02-1-1'\\n      }, {\\n        labels: '上城区',\\n        values: '02-1-2'\\n      }, {\\n        labels: '江干区',\\n        values: '02-1-3'\\n      }, {\\n        labels: '下城区',\\n        values: '02-1-4'\\n      }]\\n    }, {\\n      labels: '宁波',\\n      values: '02-2',\\n      children: [{\\n        labels: 'xx区',\\n        values: '02-2-1'\\n      }, {\\n        labels: 'yy区',\\n        values: '02-2-2'\\n      }]\\n    }, {\\n      labels: '温州',\\n      values: '02-3'\\n    }, {\\n      labels: '嘉兴',\\n      values: '02-4'\\n    }, {\\n      labels: '湖州',\\n      values: '02-5'\\n    }, {\\n      labels: '绍兴',\\n      values: '02-6'\\n    }]\\n  }];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_TreeSelect[\\\"default\\\"], {\\n    defaultValue: ['01', '01-1'],\\n    options: option,\\n    fieldNames: {\\n      label: \\\"labels\\\",\\n      value: 'values',\\n      children: 'children'\\n    },\\n    onChange: function onChange(value, nodes) {\\n      console.log(value, nodes);\\n    }\\n  });\\n}\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        labels: '北京',\\n        values: '01',\\n        children: [\\n          {\\n            labels: '东城区',\\n            values: '01-1',\\n          },\\n          {\\n            labels: '西城区',\\n            values: '01-2',\\n          },\\n          {\\n            labels: '崇文区',\\n            values: '01-3',\\n          },\\n          {\\n            labels: '宣武区',\\n            values: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        labels: '浙江',\\n        values: '02',\\n        children: [\\n          {\\n            labels: '杭州',\\n            values: '02-1',\\n            children: [\\n              {\\n                labels: '西湖区',\\n                values: '02-1-1',\\n              },\\n              {\\n                labels: '上城区',\\n                values: '02-1-2',\\n              },\\n              {\\n                labels: '江干区',\\n                values: '02-1-3',\\n              },\\n              {\\n                labels: '下城区',\\n                values: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '宁波',\\n            values: '02-2',\\n            children: [\\n              {\\n                labels: 'xx区',\\n                values: '02-2-1',\\n              },\\n              {\\n                labels: 'yy区',\\n                values: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '温州',\\n            values: '02-3',\\n          },\\n          {\\n            labels: '嘉兴',\\n            values: '02-4',\\n          },\\n          {\\n            labels: '湖州',\\n            values: '02-5',\\n          },\\n          {\\n            labels: '绍兴',\\n            values: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       fieldNames={{ label: \\\"labels\\\", value: 'values', children: 'children'}}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\"\n  }\n},\n    source: \"TreeSelect 级联选择器\\n---\\n\\n> 🚧 注意：测试版本谨慎使用。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n<!-- ![](https://user-images.githubusercontent.com/66067296/147335182-2abf199f-e206-4b4b-9edf-f1c29568d884.gif) -->\\n<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n### 基础示例\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        label: '北京',\\n        value: '01',\\n        children: [\\n          {\\n            label: '东城区',\\n            value: '01-1',\\n          },\\n          {\\n            label: '西城区',\\n            value: '01-2',\\n          },\\n          {\\n            label: '崇文区',\\n            value: '01-3',\\n          },\\n          {\\n            label: '宣武区',\\n            value: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        label: '浙江',\\n        value: '02',\\n        children: [\\n          {\\n            label: '杭州',\\n            value: '02-1',\\n            children: [\\n              {\\n                label: '西湖区',\\n                value: '02-1-1',\\n              },\\n              {\\n                label: '上城区',\\n                value: '02-1-2',\\n              },\\n              {\\n                label: '江干区',\\n                value: '02-1-3',\\n              },\\n              {\\n                label: '下城区',\\n                value: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            label: '宁波',\\n            value: '02-2',\\n            children: [\\n              {\\n                label: 'xx区',\\n                value: '02-2-1',\\n              },\\n              {\\n                label: 'yy区',\\n                value: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            label: '温州',\\n            value: '02-3',\\n          },\\n          {\\n            label: '嘉兴',\\n            value: '02-4',\\n          },\\n          {\\n            label: '湖州',\\n            value: '02-5',\\n          },\\n          {\\n            label: '绍兴',\\n            value: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\\n```\\n\\n\\n### 自定义字段名称\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport { TreeSelect } from '@uiw/react-native';\\n\\nfunction Demo() {\\n   const option = [\\n      {\\n        labels: '北京',\\n        values: '01',\\n        children: [\\n          {\\n            labels: '东城区',\\n            values: '01-1',\\n          },\\n          {\\n            labels: '西城区',\\n            values: '01-2',\\n          },\\n          {\\n            labels: '崇文区',\\n            values: '01-3',\\n          },\\n          {\\n            labels: '宣武区',\\n            values: '01-4',\\n          },\\n        ],\\n      },\\n      {\\n        labels: '浙江',\\n        values: '02',\\n        children: [\\n          {\\n            labels: '杭州',\\n            values: '02-1',\\n            children: [\\n              {\\n                labels: '西湖区',\\n                values: '02-1-1',\\n              },\\n              {\\n                labels: '上城区',\\n                values: '02-1-2',\\n              },\\n              {\\n                labels: '江干区',\\n                values: '02-1-3',\\n              },\\n              {\\n                labels: '下城区',\\n                values: '02-1-4',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '宁波',\\n            values: '02-2',\\n            children: [\\n              {\\n                labels: 'xx区',\\n                values: '02-2-1',\\n              },\\n              {\\n                labels: 'yy区',\\n                values: '02-2-2',\\n              },\\n            ],\\n          },\\n          {\\n            labels: '温州',\\n            values: '02-3',\\n          },\\n          {\\n            labels: '嘉兴',\\n            values: '02-4',\\n          },\\n          {\\n            labels: '湖州',\\n            values: '02-5',\\n          },\\n          {\\n            labels: '绍兴',\\n            values: '02-6',\\n          },\\n        ],\\n      }\\n    ]\\n  return (\\n    <TreeSelect\\n       defaultValue={['01','01-1']}\\n       options={option}\\n       fieldNames={{ label: \\\"labels\\\", value: 'values', children: 'children'}}\\n       onChange={(value, nodes) => {\\n          console.log(value, nodes)\\n       }}\\n    />\\n  );\\n}\\nexport default Demo\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| options | 级联数据 | `TreeSelectOption[]` | - |\\n| defaultValue | 默认选中项 | `string[]` | - |\\n| value | 选中项 | string[] | - |\\n| onChange | value 变化时触发 | `(value: string[], extend: { options: TreeSelectOption[] }) => void` | - |\\n| fieldNames | 自定义 options 中 label value children 的字段 | `{{ label: string, value: string, children: string }} | any` | - |\\n| activeColor | 选中文本颜色 | `string` | - |\\n| activeColor | 是否禁用 | `boolean` | `false` |\\n| placeholder | 占位符 | `string` | `请选择` |\\n| extra | 图标 | `JSX.Element` | - |\\n| showClear | 是否展示删除图标 | `boolean` | `true` |\\n| contentStyle | 容器样式 | `StyleProp<ViewStyle>` | - |\\n| placeholderColor | 搜索框默认文本颜色 | `ColorValue` | - |\\n| height | 弹出框高度 | `number` | `300` |\\n| modalProps | Modal组件参数 | `ModalProps` | `300` |\\n\\n\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/TreeSelect/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/TreeSelect/README.md\" />;\nexport default DEMO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '../Typography/Text';\nexport default function Ellipsis({\n  maxLen,\n  children,\n  placeholder,\n  ...props\n}) {\n  let content = children;\n  if (maxLen && content && typeof content === 'string') {\n    content = content.length > maxLen ? content.substr(0, maxLen) + placeholder : content;\n  }\n  return <Text {...props}>{content}</Text>;\n}\nEllipsis.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node, PropTypes.string]),\n  placeholder: PropTypes.string,\n  maxLen: PropTypes.number\n};\nEllipsis.defaultProps = {\n  placeholder: '...'\n};","import React, { useState, useMemo } from 'react';\nimport { Modal, Animated, TouchableOpacity, StyleSheet } from 'react-native';\nimport { usePrevious } from '../utils';\nimport { useTheme } from '@shopify/restyle';\nfunction createStyles({\n  whiteColor,\n  blackBackground\n}) {\n  return StyleSheet.create({\n    position: {\n      position: 'absolute',\n      backgroundColor: 'transparent',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: 9998\n    },\n    backdrop: {\n      backgroundColor: blackBackground\n    },\n    content: {\n      backgroundColor: whiteColor,\n      position: 'absolute'\n    }\n  });\n}\nconst MaskLayer = (props = {}) => {\n  const theme = useTheme();\n  const styles = createStyles({\n    whiteColor: theme.colors.white || '#fff',\n    blackBackground: theme.colors.black || '#000'\n  });\n  const {\n    maskClosable = true,\n    children,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    visible: _vis,\n    opacity = 0.6,\n    onDismiss,\n    animatedParallelShow = [],\n    animatedParallelHide = [],\n    ...otherProps\n  } = props;\n  const [visible, setVisible] = useState(!!props.visible);\n  const preVisible = usePrevious(props.visible);\n  const [visibleModal, setVisibleModal] = useState(false);\n  const [bgOpacity] = useState(new Animated.Value(0));\n  useMemo(() => {\n    if (preVisible !== props.visible && props.visible) {\n      setVisible(!!props.visible);\n      setVisibleModal(false);\n      Animated.parallel([Animated.spring(bgOpacity, {\n        toValue: opacity,\n        overshootClamping: true,\n        useNativeDriver: true\n      }), ...animatedParallelShow]).start();\n    } else if (preVisible !== props.visible && !props.visible) {\n      Animated.parallel([Animated.spring(bgOpacity, {\n        toValue: 0,\n        overshootClamping: true,\n        useNativeDriver: true\n      }), ...animatedParallelHide]).start(() => {\n        setVisible(!!props.visible);\n        setVisibleModal(true);\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.visible]);\n  const backdropContent = <Animated.View style={[styles.position, styles.backdrop, {\n    opacity: bgOpacity\n  }]} />;\n  let backdrop = <TouchableOpacity activeOpacity={1} style={[styles.position]} onPress={() => onDismiss && onDismiss()}>\n      {backdropContent}\n    </TouchableOpacity>;\n  let isTrue = visible || false;\n  if (!visible && visibleModal) {\n    isTrue = false;\n  }\n  return <Modal transparent={true} animationType=\"none\" {...otherProps} visible={isTrue}>\n      {maskClosable ? backdrop : backdropContent}\n      {children && React.Children.toArray(children).map(child => {\n      if (!React.isValidElement(child)) {\n        return;\n      }\n      return React.cloneElement(child, {\n        ...child.props,\n        ...{\n          style: [{\n            zIndex: 9999\n          }, child.props.style]\n        }\n      });\n    })}\n    </Modal>;\n};\nexport default MaskLayer;","import React, { useState, useMemo, useRef, useEffect, useReducer } from 'react';\nimport { Animated, StyleSheet, Dimensions } from 'react-native';\nimport MaskLayer from '../MaskLayer';\nimport { useTheme } from '@shopify/restyle';\nconst MainWidth = Dimensions.get('window').width;\nconst MainHeight = Dimensions.get('window').height;\nexport const reducer = (state, action) => {\n  return {\n    ...state,\n    ...action\n  };\n};\nconst Modal = (props = {}) => {\n  const {\n    onClosed,\n    visible,\n    children,\n    placement = 'bottom',\n    containerStyle,\n    ...otherProps\n  } = props;\n  const theme = useTheme();\n  const AnimatedOpacity = useRef(new Animated.Value(0)).current;\n  const [{\n    layoutHeight,\n    layoutWidth\n  }, dispatch] = useReducer(reducer, {\n    layoutHeight: 0,\n    layoutWidth: 0\n  });\n  const [translateValue] = useState(new Animated.Value(0));\n  const {\n    isVertical,\n    isHorizontal\n  } = useMemo(() => {\n    const isVertical = /^(top|bottom)$/.test(placement);\n    const isHorizontal = /^(left|right)$/.test(placement);\n    return {\n      isVertical,\n      isHorizontal\n    };\n  }, [placement]);\n  useEffect(() => {\n    function getTransformSize() {\n      if (placement === 'top') {\n        return -layoutHeight;\n      }\n      if (placement === 'bottom') {\n        return layoutHeight;\n      }\n      if (placement === 'left') {\n        return -layoutWidth;\n      }\n      if (placement === 'right') {\n        return layoutWidth;\n      }\n      if (placement === 'middle') {\n        return layoutWidth;\n      }\n      return 0;\n    }\n    const result = getTransformSize();\n    if (!result) return;\n    if (visible) {\n      translateValue.setValue(result);\n      Animated.parallel([Animated.timing(AnimatedOpacity, {\n        toValue: 1,\n        duration: 0,\n        useNativeDriver: false\n      }), Animated.spring(translateValue, {\n        toValue: 0,\n        overshootClamping: true,\n        useNativeDriver: true\n      })]).start();\n    }\n    if (!visible) {\n      Animated.parallel([Animated.spring(translateValue, {\n        toValue: result,\n        overshootClamping: true,\n        useNativeDriver: true\n      }), Animated.timing(AnimatedOpacity, {\n        toValue: 0,\n        duration: 0,\n        useNativeDriver: false\n      })]).start();\n    }\n  }, [visible, layoutHeight, layoutWidth, placement, translateValue, AnimatedOpacity]);\n  const translateStyle = {};\n  if (isVertical) {\n    translateStyle.translateY = translateValue;\n  }\n  if (isHorizontal) {\n    translateStyle.translateX = translateValue;\n  }\n  if (placement === 'middle') {\n    translateStyle.translateY = translateValue;\n  }\n  const child = useMemo(() => <Animated.View style={[styles.content, placement && styles[placement], placement === 'middle' && styles.middle_warp, {\n    opacity: AnimatedOpacity\n  }, containerStyle]}>\n        <Animated.View onLayout={event => {\n      const {\n        height,\n        width\n      } = event.nativeEvent.layout;\n      if (placement === 'middle') {\n        dispatch({\n          layoutHeight: height,\n          layoutWidth: width\n        });\n      } else if (!layoutHeight && isVertical) {\n        dispatch({\n          layoutHeight: height\n        });\n      } else if (!layoutWidth && isHorizontal) {\n        dispatch({\n          layoutWidth: width\n        });\n      }\n    }} style={[styles.content, placement && styles[placement], {\n      transform: [translateStyle],\n      backgroundColor: theme.colors.mask || '#fff',\n      position: 'relative',\n      zIndex: 10000\n    }]}>\n          {children}\n        </Animated.View>\n      </Animated.View>, [children, AnimatedOpacity, containerStyle, isHorizontal, isVertical, layoutHeight, layoutWidth, placement, theme.colors.mask, translateStyle]);\n  return <MaskLayer {...otherProps} visible={visible} onDismiss={onClosed}>\n      {child}\n    </MaskLayer>;\n};\nexport default Modal;\nconst styles = StyleSheet.create({\n  content: {\n    position: 'absolute',\n    zIndex: 9999\n  },\n  top: {\n    top: 0,\n    width: MainWidth,\n    left: 0,\n    right: 0\n  },\n  bottom: {\n    bottom: 0,\n    left: 0,\n    width: MainWidth,\n    right: 0\n  },\n  left: {\n    bottom: 0,\n    top: 0,\n    height: MainHeight,\n    left: 0\n  },\n  right: {\n    bottom: 0,\n    top: 0,\n    height: MainHeight,\n    right: 0\n  },\n  middle: {},\n  middle_warp: {\n    bottom: 0,\n    top: 0,\n    right: 0,\n    left: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","import { TreeSelect } from './tree-select';\nexport default TreeSelect;","import React, { useMemo, useState } from 'react';\nimport { usePropsValue } from '../utils/hooks';\nimport { getTreeDeep } from '../utils/tree-select';\nimport { View, TouchableOpacity, ScrollView, Pressable } from 'react-native';\nimport Icon from '../Icon';\nimport Ellipsis from '../Ellipsis';\nimport Modal from '../Modal';\nimport { useTheme } from '@shopify/restyle';\nimport { StyleSheet } from 'react-native';\nimport Text from '../Typography/Text';\nexport const TreeSelect = p => {\n  const theme = useTheme();\n  const style = createStyles({\n    bgColor: theme.colors.mask,\n    themeColor: theme.colors.primary_background,\n    themeText: theme.colors.text\n  });\n  const defaultProps = {\n    options: [],\n    fieldNames: {},\n    defaultValue: [],\n    activeColor: theme.colors.primary_background || '#3578e5',\n    placeholder: '请选择',\n    extra: undefined,\n    showClear: true,\n    contentStyle: {},\n    placeholderColor: '',\n    disabled: false,\n    height: 300,\n    modalProps: {}\n  };\n  const props = {\n    ...defaultProps,\n    ...p\n  };\n  const labelName = props.fieldNames.label || 'label';\n  const valueName = props.fieldNames.value || 'value';\n  const childrenName = props.fieldNames.children || 'children';\n  const [visible, setVisible] = useState(false);\n  const [value, setValue] = usePropsValue({\n    value: props.value,\n    defaultValue: props.defaultValue\n  });\n  const [deep, optionsMap, optionsParentMap] = useMemo(() => {\n    const deep = getTreeDeep(props.options, childrenName);\n    const optionsMap = new Map();\n    const optionsParentMap = new Map();\n    function traverse(current, children) {\n      children.forEach(item => {\n        optionsParentMap.set(item[valueName], current);\n        optionsMap.set(item[valueName], item);\n        if (item[childrenName]) {\n          traverse(item, item[childrenName]);\n        }\n      });\n    }\n    traverse(undefined, props.options);\n    return [deep, optionsMap, optionsParentMap];\n  }, [props.options]);\n  const initialLabelValues = useMemo(() => {\n    const labels = [];\n    props.defaultValue?.forEach(defaultValue => {\n      const defaultOption = optionsMap.get(defaultValue);\n      if (defaultOption) {\n        labels.push(defaultOption[labelName]);\n      }\n    });\n    return labels;\n  }, [props.defaultValue, optionsMap, labelName]);\n  const [labelValues, setLabelValues] = useState(initialLabelValues);\n  const onItemSelect = node => {\n    // 找到父级节点\n    const parentNodes = [];\n    let current = node;\n    while (current) {\n      parentNodes.unshift(current);\n      const next = optionsParentMap.get(current[valueName]);\n      current = next;\n    }\n    const values = parentNodes.map(i => i[valueName]);\n    const labels = parentNodes.map(i => i[labelName]);\n    setLabelValues(labels);\n    setValue(values);\n    props.onChange?.(values, {\n      options: parentNodes\n    });\n  };\n  // item样式\n  const activeStyles = (index, isActive, isLast) => {\n    let styles;\n    // 选中第一排\n    if (isActive && index === 0) {\n      styles = {\n        ...style.active_first_item\n      };\n    }\n    // 未选中第一排\n    if (!isActive && index === 0) {\n      styles = {\n        ...style.not_active_first_item\n      };\n    }\n    // 选中后排\n    if (isActive && index !== 0) {\n      styles = {\n        ...style.active_nth_item,\n        borderColor: props.activeColor,\n        marginRight: isLast ? 10 : 0\n      };\n    }\n    // 未选中后排\n    if (!isActive && index !== 0) {\n      styles = {\n        ...style.not_active_nth_item,\n        marginRight: isLast ? 10 : 0\n      };\n    }\n    return styles;\n  };\n  const renderItems = (columnOptions = [], index) => {\n    return columnOptions.map(item => {\n      const isActive = item[valueName] === value[index];\n      const active_font_color = index === 0 ? theme.colors.primary_text : props.activeColor;\n      // 是否是最后一列\n      const isLast = deep - 1 === index;\n      return <TouchableOpacity activeOpacity={0.9} key={item[valueName]} onPress={() => {\n        if (!isActive) {\n          onItemSelect(item);\n        }\n      }} style={[style.item, {\n        ...activeStyles(index, isActive, isLast)\n      }]}>\n          <Text style={isActive ? {\n          color: active_font_color,\n          fontWeight: 'bold'\n        } : {\n          color: theme.colors.text\n        }}>\n            {item[labelName]}\n          </Text>\n        </TouchableOpacity>;\n    });\n  };\n  const renderColumns = () => {\n    const columns = [];\n    for (let i = 0; i < deep; i++) {\n      let width = `${100 / deep}%`;\n\n      // 两列的第一列宽度为 33.33，两列的第二列为 66.67%\n      if (deep === 2 && i === 0) {\n        width = `33.33%`;\n      }\n      if (deep === 2 && i === 1) {\n        width = `66.67%`;\n      }\n      const column = <ScrollView key={i} style={{\n        width,\n        flex: 1,\n        backgroundColor: i === 0 ? theme.colors.gray100 : theme.colors.mask\n      }}>\n          {renderItems(i === 0 ? props.options : optionsMap.get(value[i - 1])?.[childrenName], i)}\n        </ScrollView>;\n      columns.push(column);\n    }\n    return columns;\n  };\n  return <React.Fragment>\n      <Pressable onPress={() => {\n      if (props.disabled) return;\n      setVisible(true);\n    }}>\n        <View style={[props.disabled ? style.disabled : style.content, props.contentStyle]}>\n          <Ellipsis style={[style.contentTitle, {\n          color: props.placeholderColor || theme.colors.text\n        }]} maxLen={30}>\n            {labelValues.join() || props.placeholder}\n          </Ellipsis>\n          {React.isValidElement(props.extra) ? props.extra : value && props.showClear ? <Pressable onPress={() => {\n          setValue([]);\n          setLabelValues([]);\n          props.onChange?.([], {\n            options: []\n          });\n        }} style={{\n          paddingRight: 3\n        }}>\n              <Icon name=\"circle-close-o\" size={18} color={theme.colors.text} />\n            </Pressable> : <Icon name=\"right\" size={18} color=\"#A19EA0\" />}\n        </View>\n      </Pressable>\n      <Modal visible={visible} onClosed={() => setVisible(false)} {...props.modalProps}>\n        <View style={{\n        marginBottom: 10\n      }} />\n        <View style={{\n        height: props.height,\n        flexDirection: 'row'\n      }}>{renderColumns()}</View>\n      </Modal>\n    </React.Fragment>;\n  function createStyles({\n    bgColor,\n    themeText\n  }) {\n    return StyleSheet.create({\n      item: {\n        minHeight: 50,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      active_first_item: {\n        backgroundColor: bgColor\n      },\n      not_active_first_item: {\n        backgroundColor: bgColor\n      },\n      active_nth_item: {\n        backgroundColor: bgColor,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginLeft: 10,\n        marginBottom: 10\n      },\n      not_active_nth_item: {\n        backgroundColor: bgColor,\n        borderColor: bgColor,\n        borderWidth: 1,\n        borderRadius: 5,\n        marginLeft: 10,\n        marginBottom: 10\n      },\n      content: {\n        flexDirection: 'row',\n        height: 35,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        paddingRight: 5,\n        backgroundColor: bgColor,\n        paddingHorizontal: 16\n      },\n      disabled: {\n        flexDirection: 'row',\n        height: 35,\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        paddingRight: 5,\n        backgroundColor: bgColor,\n        paddingHorizontal: 16\n      },\n      contentTitle: {\n        fontSize: 16,\n        color: themeText\n      }\n    });\n  }\n};","import React from 'react';\nimport { Text as BaseText } from 'react-native';\nimport { useTheme } from '@shopify/restyle';\nimport { isEmpty } from 'lodash';\nconst Text = props => {\n  const {\n    color = 'text',\n    children,\n    style,\n    ...others\n  } = props;\n  const theme = useTheme();\n  const getColorScheme = () => {\n    // app.ts 包裹了ThemeProvider传递了theme\n    if (!isEmpty(theme.colors)) {\n      return theme.colors;\n    }\n    return {\n      [color]: '#ccc'\n    };\n  };\n  return <BaseText style={[{\n    color: getColorScheme()[color]\n  }, style]} {...others}>\n      {children}\n    </BaseText>;\n};\nText.displayName = 'Text';\nexport default Text;","export const green = '#28a745'; // 成功-绿色\nexport const blue = '#008EF0'; // 主要-蓝色\nexport const cyan = '#1EABCD'; // 信息-青色\nexport const navy = '#393E48'; // 导航-藏青\nexport const yellow = '#ffc107'; // 警告-黄色\nexport const orange = '#F95C2B'; // 提醒-橙色\nexport const red = '#dc3545'; // 危险-红色\n\nexport const black = '#000000';\nexport const white = '#ffffff';\nexport const colorsPalette = {\n  // DARKS TODO: deprecate and use greys\n  dark10: '#20303C',\n  dark20: '#43515C',\n  dark30: '#66737C',\n  dark40: '#858F96',\n  dark50: '#A3ABB0',\n  dark60: '#C2C7CB',\n  dark70: '#E0E3E5',\n  dark80: '#F2F4F5',\n  // GREYS\n  grey10: '#20303C',\n  grey20: '#4D5963',\n  grey30: '#79838A',\n  grey40: '#A6ACB1',\n  grey50: '#D2D6D8',\n  grey60: '#E8ECF0',\n  grey70: '#F0F4F7',\n  grey80: '#F8f9FA',\n  // BLUES\n  blue10: '#0097C3',\n  blue20: '#00A8DA',\n  blue30: '#00BBF2',\n  blue40: '#40CCF6',\n  blue50: '#85DFF9',\n  blue60: '#B2EAFB',\n  blue70: '#CFF3FD',\n  blue80: '#E3F8FE',\n  // CYAN,\n  cyan10: '#00AAAF',\n  cyan20: '#32BABC',\n  cyan30: '#3CC7C5',\n  cyan40: '#64D4D2',\n  cyan50: '#8BDFDD',\n  cyan60: '#B1E9E9',\n  cyan70: '#D8F4F4',\n  cyan80: '#EBF9F9',\n  // GREENS\n  green10: '#00A36F',\n  green20: '#00B47A',\n  green30: '#00CD8B',\n  green40: '#45DBAA',\n  green50: '#87E7C8',\n  green60: '#B2F0DC',\n  green70: '#CFF6E9',\n  green80: '#E3FAF2',\n  // YELLOWS\n  yellow10: '#E19800',\n  yellow20: '#F0A700',\n  yellow30: '#FFB600',\n  yellow40: '#FFCA45',\n  yellow50: '#FFDD87',\n  yellow60: '#FFEAB5',\n  yellow70: '#FFF2D1',\n  yellow80: '#FFF7E3',\n  // ORANGE,\n  orange10: '#D9644A',\n  orange20: '#E66A4E',\n  orange30: '#F27052',\n  orange40: '#F37E63',\n  orange50: '#F7A997',\n  orange60: '#FAC6BA',\n  orange70: '#FCE2DC',\n  orange80: '#FEF0ED',\n  // REDS\n  red10: '#D72E15',\n  red20: '#EB4229',\n  red30: '#FF563D',\n  red40: '#FF8472',\n  red50: '#FFB2A6',\n  red60: '#FFD0C9',\n  red70: '#FFE3DE',\n  red80: '#FFF0ED',\n  // PURPLE,\n  purple10: '#8B1079',\n  purple20: '#A0138E',\n  purple30: '#B13DAC',\n  purple40: '#C164BD',\n  purple50: '#D08BCD',\n  purple60: '#E0B1DE',\n  purple70: '#EFD8EE',\n  purple80: '#F7EBF7',\n  // VIOLETS\n  violet10: '#3022D0',\n  violet20: '#4434EB',\n  violet30: '#5847FF',\n  violet40: '#8579FF',\n  violet50: '#B2ABFF',\n  violet60: '#D1CCFF',\n  violet70: '#E3E0FF',\n  violet80: '#F0EEFF',\n  transparent: 'transparent'\n};","import { useRef, useEffect } from 'react';\nimport { useMemoizedFn, useUpdate } from 'ahooks';\n\n/**\n * 获取上一轮的 props 或 state\n * How to get the previous props or state?\n * https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n * @example\n * ```js\n * function Counter() {\n *   const [count, setCount] = useState(0);\n *   const prevCount = usePrevious(count);\n *   return <h1>Now: {count}, before: {prevCount}</h1>;\n * }\n * ```\n */\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\nexport function usePropsValue(options) {\n  const {\n    value,\n    defaultValue,\n    onChange\n  } = options;\n  const update = useUpdate();\n  const stateRef = useRef(value !== undefined ? value : defaultValue);\n  if (value !== undefined) {\n    stateRef.current = value;\n  }\n  const setState = useMemoizedFn(v => {\n    if (value === undefined) {\n      stateRef.current = v;\n      update();\n    }\n    onChange?.(v);\n  });\n  return [stateRef.current, setState];\n}\nexport function useLatest(value) {\n  const ref = useRef(value);\n  ref.current = value;\n  return ref;\n}","// 找到树的深度\nexport function getTreeDeep(treeData, childrenName = 'children') {\n  const walker = tree => {\n    let deep = 0;\n    tree.forEach(item => {\n      if (item[childrenName]) {\n        deep = Math.max(deep, walker(item[childrenName]) + 1);\n      } else {\n        deep = Math.max(deep, 1);\n      }\n    });\n    return deep;\n  };\n  return walker(treeData);\n}"],"names":["components","_react","_interopRequireDefault","_TreeSelect","obj","__esModule","createElement","defaultValue","options","label","value","children","onChange","nodes","console","log","labels","values","fieldNames","data","source","_jsx","Preview","_objectSpread","md","path","Ellipsis","_ref","maxLen","placeholder","props","_objectWithoutProperties","_excluded","content","length","substr","Text","defaultProps","arguments","undefined","theme","useTheme","styles","whiteColor","blackBackground","StyleSheet","position","backgroundColor","top","bottom","left","right","zIndex","backdrop","createStyles","colors","white","black","_props$maskClosable","maskClosable","_props$opacity","visible","opacity","onDismiss","_props$animatedParall","animatedParallelShow","_props$animatedParall2","animatedParallelHide","otherProps","_useState","useState","_useState2","_slicedToArray","setVisible","preVisible","usePrevious","_useState3","_useState4","visibleModal","setVisibleModal","_useState5","Animated","bgOpacity","useMemo","toValue","overshootClamping","useNativeDriver","concat","_toConsumableArray","start","backdropContent","style","TouchableOpacity","activeOpacity","onPress","isTrue","_jsxs","Modal","transparent","animationType","React","map","child","MainWidth","Dimensions","width","MainHeight","height","reducer","state","action","onClosed","_props$placement","placement","containerStyle","AnimatedOpacity","useRef","current","_useReducer","useReducer","layoutHeight","layoutWidth","_useReducer2","_useReducer2$","dispatch","translateValue","_useMemo","isVertical","test","isHorizontal","useEffect","result","setValue","duration","translateStyle","translateY","translateX","middle_warp","onLayout","event","_event$nativeEvent$la","nativeEvent","layout","transform","mask","MaskLayer","middle","justifyContent","alignItems","p","bgColor","themeText","item","minHeight","display","active_first_item","not_active_first_item","active_nth_item","borderWidth","borderRadius","marginLeft","marginBottom","not_active_nth_item","borderColor","flexDirection","paddingRight","paddingHorizontal","disabled","contentTitle","fontSize","color","themeColor","primary_background","text","activeColor","extra","showClear","contentStyle","placeholderColor","modalProps","labelName","valueName","childrenName","_usePropsValue","usePropsValue","_usePropsValue2","deep","getTreeDeep","optionsMap","Map","optionsParentMap","traverse","forEach","set","_useMemo2","initialLabelValues","_props$defaultValue","defaultOption","get","push","labelValues","setLabelValues","activeStyles","index","isActive","isLast","marginRight","renderItems","active_font_color","primary_text","node","_props$onChange","parentNodes","unshift","i","call","onItemSelect","fontWeight","Pressable","View","join","_props$onChange2","Icon","name","size","columns","_optionsMap$get","column","ScrollView","flex","gray100","renderColumns","_props$color","others","BaseText","isEmpty","_defineProperty","displayName","green","blue","cyan","navy","yellow","orange","red","colorsPalette","dark10","dark20","dark30","dark40","dark50","dark60","dark70","dark80","grey10","grey20","grey30","grey40","grey50","grey60","grey70","grey80","blue10","blue20","blue30","blue40","blue50","blue60","blue70","blue80","cyan10","cyan20","cyan30","cyan40","cyan50","cyan60","cyan70","cyan80","green10","green20","green30","green40","green50","green60","green70","green80","yellow10","yellow20","yellow30","yellow40","yellow50","yellow60","yellow70","yellow80","orange10","orange20","orange30","orange40","orange50","orange60","orange70","orange80","red10","red20","red30","red40","red50","red60","red70","red80","purple10","purple20","purple30","purple40","purple50","purple60","purple70","purple80","violet10","violet20","violet30","violet40","violet50","violet60","violet70","violet80","ref","update","useUpdate","stateRef","setState","useMemoizedFn","v","useLatest","treeData","walker","tree","Math","max"],"sourceRoot":""}