{"version":3,"sources":["pages/docs/development/document/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/138.d6abd6aa.chunk.js","sourcesContent":["export default \"参与文档/网站编辑开发\\n===\\n\\n这里介绍，当前组件库开发和文档编写，方便您快速介入到文档/网站编辑开发中。\\n\\n> 🚧  注意：文档网站发布是监听 master 分支的更新`自动`发布到 [`gh-pages`](https://github.com/uiwjs/react-native-uiw/tree/gh-pages) 分支。  \\n> 在 `package.json` 中的版本号请不要随意更改，组件发布是监听 [`package.json 中的版本号`](https://github.com/uiwjs/react-native-uiw/blob/4e4f55681a71b4813a5f5fe26f4b1a859bc85a7f/.github/workflows/ci.yml#L64-L66)变更`自动`发布到 npm 上。  \\n> 这些自动化得益于 [Github Actions](https://github.com/actions) 的强力驱动。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n## 目录结构\\n\\n```bash\\n├── README.md -> packages/core/README.md\\n├── ....\\n├── example   # ----> 示例\\n│   ├── base      # 示例，用于单独测试某个组件\\n│   └── examples  # 所有组件的示例\\n├── packages  # ----> 包\\n│   ├── core  # 📦 @uiw/react-native 基础组件\\n│   │   ├── package.json\\n│   │   └── src\\n│   │       ├── Avatar # 组件源码以及组件文档\\n│   │       └── ....\\n│   └── docs  # 📦 @uiw/react-native-doc 可忽略，编译后的组件文档静态文件提交到 npm 提供文档版本预览\\n└── website   # ----> 文档网站源码\\n    ├── ....\\n    └── src\\n        ├── pages # 📑 文档示例编写在这里\\n        │   ├── components\\n        │   └── ....\\n        └── routes\\n            ├── Controller.tsx\\n            ├── history.ts\\n            ├── menus.ts   # 配置菜单\\n            └── router.tsx # 配置菜单对应的页面\\n```\\n\\n## 文档编辑预览\\n\\n我们通过 [npm](https://www.npmjs.com/@uiw/react-native-doc) 来管理 UIW React Native 组件文档站点的版本，使用 [unpkg.com](https://unpkg.com/) 提供的静态资源预览和同步 npm 包的特点，来实现[查看历史版本](https://unpkg.com/browse/@uiw/react-native-doc/)组件文档的一功能。的文档。所以我们在发布 [`@uiw/react-native`](https://www.npmjs.com/package/@uiw/react-native) 包的同时会发布 [`@uiw/react-native-doc`](https://www.npmjs.com/package/@uiw/react-native-doc) 包。\\n\\n通过 unpkg 预览文档网站：https://unpkg.com/@uiw/react-native-doc/doc/index.html\\n\\n这是 v3.0.0+ 版本预览方法\\n\\n```shell\\nhttps://unpkg.com/@uiw/react-native-doc@<包版本>/web/index.html\\n```\\n\\n[`v2.0.0+ 文档网站`](https://unpkg.com/@uiw/react-native-doc@2.1.0/doc/build/index.html)\\n\\n> 🚧  注意：为了保持包版本同步，我们通过 [`lerna`](http://npmjs.com/lerna)<!--rehype:target=\\\"__blank\\\"--> 工具同时更改所有包的版本，确保组件包和文档包的版本是一致的。  \\n> 在项目根目录运行 `npm run version` 命令，即可更改所有包的版本。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n文档还可以使用 [`Githack`](http://raw.githack.com) 来访问历史的文档。\\n\\n```bash\\n# 最新文档\\nhttps://raw.githack.com/uiwjs/react-native-uiw/gh-pages/index.html\\n# v2.11.1 文档\\nhttps://raw.githack.com/uiwjs/react-native-uiw/c08bdf4/index.html\\n```\\n\\nGithack：[`v2.0.0+ 文档网站`](https://raw.githack.com/uiwjs/react-native-uiw/c08bdf4/index.html)\\n\\n### `启动文档网站 & 预览文档`<!--rehype:style=color: white; background: #1c7bd0;-->\\n\\n组件文档存放在组件 `packages/core`<!--rehype:style=color: #039423; background: #e3efe7;--> 包目录中，其它文档放在文档源码目录 `website/src/pages`<!--rehype:style=color: #039423; background: #e3efe7;--> 中，根据路由地址建立。\\n\\n> 如果需要将文档网站运行起来，需要先安装依赖和编译包。使用 [`yarn workspaces`](https://classic.yarnpkg.com/en/docs/workspaces)，组件文档是从 `node_modules` 中加载，需要编译(或监听)输出到 `node_modules` 中。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n<!--rehype:-->\\n```bash\\nyarn install     # 安装当前依赖，和子包中的依赖\\nyarn run build   # 编译包\\n```\\n\\n实时监听包和文档网站本地预览\\n\\n```bash\\n# Step 1️⃣  编译输出 JS/d.ts 文件\\nyarn run lib:watch\\n# Step 2️⃣  本地运行预览文档网站\\nyarn run start\\n```\\n\\n浏览器中打开文档网站： `http://localhost:3000`<!--rehype:style=color: #3d79a2; background: #e5ecf3;-->\\n\\n### `添加 & 编辑一个文档页面`<!--rehype:style=color: white; background: #4a4a4a;-->\\n\\n添加一个新的文档，需要新增路由、菜单、添加 `README.md` 文件。\\n\\n```bash\\nwebsite\\n├── src\\n│   ├── pages # 文档示例编写在这里\\n│   │   ├── components\\n│   │   └── getting-started\\n│   │       ├── README.md # 📑 添加 README.md 文档\\n│   │       └── index.tsx # ✅ 添加加载 README.md JS 文件\\n│   └── routes\\n│       ├── menus.ts   # ✅ 配置菜单\\n│       └── router.tsx # ✅ 配置菜单对应的页面\\n```\\n\\n修改组件文档\\n\\n```bash\\npackages\\n├── core # 📦 @uiw/react-native\\n│   └── src\\n│       ├── Avatar\\n│       │   ├── README.md # 📑 组件文档\\n│       │   └── index.tsx # ✅ 组件入口文件\\n│       ├── ....\\n│       └── Button\\n```\\n\\n#### `第 1 步`<!--rehype:style=background: #a5d4ff;-->：菜单配置\\n\\n在 [`website/src/routes/menus.ts`](https://github.com/uiwjs/react-native-uiw/blob/4e4f55681a71b4813a5f5fe26f4b1a859bc85a7f/website/src/routes/menus.ts#L44) 中配置菜单\\n\\n```ts\\nexport interface MenuData extends React.RefAttributes<HTMLAnchorElement>, React.AnchorHTMLAttributes<HTMLAnchorElement> {\\n  name: string;\\n  path?: string;\\n  divider?: boolean;\\n}\\nexport const docsMenus: MenuData[] = [\\n  { path: '/docs/getting-started', name: '快速上手' },\\n  { divider: true, name: \\\"环境安装\\\" },\\n  { path: '/docs/environment-setup/ios', name: 'iOS 环境安装' },\\n  ...\\n  { divider: true, name: \\\"其它\\\" },\\n  { path: '/docs/development', name: '参与组件/文档开发' },\\n  { href: 'https://github.com/uiwjs/react-native-uiw/releases', target: '_blank', name: '更新日志' },\\n]\\nexport const componentMenus: MenuData[] = [ .... ]\\n```\\n\\n#### `第 2 步`<!--rehype:style=background: #a5d4ff;-->：新增路由\\n\\n在 [`website/src/routes/router.tsx`](https://github.com/uiwjs/react-native-uiw/blob/4e4f55681a71b4813a5f5fe26f4b1a859bc85a7f/website/src/routes/router.tsx#L39-L41) 中加载 Markdown 以及相关文件\\n\\n```ts\\nexport const getRouterData = {\\n  '/': {\\n    component: dynamicWrapper([], () => import('../layouts/BasicLayout')),\\n  },\\n  '/docs/getting-started': {\\n    component: dynamicWrapper([], () => import('../pages/docs/getting-started')),\\n  },\\n  ....\\n}\\n```\\n\\n#### `第 3 步`<!--rehype:style=background: #a5d4ff;-->：新增 Markdown 文件\\n\\n添加 `website/src/pages/docs/getting-started/README.md` 和 `website/src/pages/docs/getting-started/index.tsx`\\n\\n```tsx\\nimport Markdown, { importAll } from '../../../component/Markdown';\\n\\nexport default class Page extends Markdown {\\n  // 配置 markdown 在 GitHub 中的目录位置，用于定位编辑 Markdown\\n  path = \\\"/website/src/pages/docs/getting-started/README.md\\\";\\n  getMarkdown = async () => {\\n    // 这里加载指定的 Markdown 文件\\n    const md = await import('./README.md');\\n    // 也可加载组件包中的文档\\n    const mdCom = await import('@uiw/react-native/lib/Badge/README.md');\\n    // 支持 markdown 中，相对于当前 index.tsx 相对路径引入图片资源\\n    importAll((require as any).context('./', true, /\\\\.(png|gif|jpg|svg)$/), this.imageFiles);\\n    return md.default || md;\\n  }\\n}\\n```\\n\\n### `修改一个 Markdown 文件内容`\\n\\n可直接点击文档网站底部的 `在 GitHub 上编辑此页`<!--rehype:style=color: #1e1cf0; background: #e3e3ff;--> 按钮。\\n\\n⇣⇣⇣⇣⇣⇣看见没有，点击下面按钮⇣⇣⇣⇣⇣⇣\\n<!--rehype:style=background-color: #a0ffb3; padding: 12px 16px; display: inline-block;-->\\n\";"],"sourceRoot":""}