{"version":3,"file":"static/js/987.a30f6feb.chunk.js","mappings":"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","sources":["component/Preview/index.js","react-native/lib/SwipeAction/README.md","pages/components/swipeaction/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && node.tagName === 'pre' && node.children[0].data?.meta) {\n            const meta = node.children[0].data?.meta;\n            if (isMeta(meta)) {\n              node.tagName = 'div';\n              if (!node.properties) {\n                node.properties = {};\n              }\n              node.properties['data-md'] = meta;\n              node.properties['data-meta'] = 'preview';\n            }\n          }\n        }}\n        components={{\n          div: ({ node, ...props }) => {\n            const { 'data-meta': meta, 'data-md': metaData } = props;\n            if (meta === 'preview') {\n              const line = node.position?.start.line;\n              const metaId = getMetaId(meta) || String(line);\n              const Child = mdData.components[`${metaId}`];\n              if (metaId && typeof Child === 'function') {\n                const code = mdData.data[metaId].value || '';\n                const param = getURLParameters(metaData);\n                return (\n                  <CodeLayout\n                    disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                    disableToolbar={getBooleanValue(param, 'disableToolbar', false)}\n                    disableCode={getBooleanValue(param, 'disableCode', false)}\n                    disablePreview={getBooleanValue(param, 'disablePreview', false)}\n                    bordered={getBooleanValue(param, 'bordered', true)}\n                    copied={getBooleanValue(param, 'copied', true)}\n                    background={param.background}\n                    toolbar={param.title || '示例'}\n                    codeProps={{ style: { padding: 0 } }}\n                    style={{ padding: 0 }}\n                    code={<pre {...props} />}\n                    text={code}\n                  >\n                    <Child />\n                  </CodeLayout>\n                );\n              }\n            }\n            return <div {...props} />;\n          },\n        }}\n      />\n      <Footer path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"SwipeAction 滑动操作组件。\\n---\\n结合手势操作，从屏幕一侧唤出操作。\\n\\n<img src=\\\"https://user-images.githubusercontent.com/57083007/146733663-6c83fca4-72df-424d-8364-47533f57ece6.gif\\\" style=\\\"width:300px;height:620px\\\"/>\\n\\n### 基础示例\\n\\n```jsx\\nimport React from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const right = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n      onPress: () => ref?.current?.swipeable.close()\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 250,\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} right={right}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 从左侧滑出\\n\\n```jsx\\nimport React from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const left = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n      onPress: () => ref?.current?.swipeable.close()\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 250,\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} left={left}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 禁用\\n\\n```jsx\\nimport React,{ useRef } from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const ref = useRef()\\n  const right = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 250,\\n      disabled:true\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} right={right}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n### 主动关闭\\n\\n```jsx\\nimport React,{ useRef } from 'react';\\nimport {SwipeAction} from '@uiw/react-native';\\nimport { View,Text } from 'react-native'\\n\\nfunction Demo() {\\n  const ref = useRef()\\n  const right = [\\n    {\\n      text: '查看',\\n      color: 'orange',\\n      x: 250,\\n      onPress: () => ref?.current?.swipeable.close()\\n    },\\n    {\\n      text: '删除',\\n      color: 'red',\\n      x: 400,\\n    },\\n  ];\\n  return (\\n    <SwipeAction ref={ref} buttonWidth={60} right={right}>\\n      <View><Text>滑动</Text></View>\\n    </SwipeAction>\\n  );\\n}\\nexport default Demo;\\n```\\n\\n组件继承react-native-gesture-handler[`Swipeable`](https://docs.swmansion.com/react-native-gesture-handler/docs/api/components/swipeable)\\n### Props\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `right` | 右边滑动出来的元素 | Array<`ColumnProps`> | - |\\n| `left` | 左边滑动出来的元素 | Array<`ColumnProps`> | - |\\n| `buttonWidth` | 按钮宽度 |  number | 60 |\\n| `actionViewStyle` | 弹出框样式 |  ViewStyle | - |\\n| `rectButtonStyle` | 弹出button样式 |  ViewStyle | - |\\n\\n\\n### ColumnProps\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `text` | 显示文字 | string | - |\\n| `color` | 背景色 | string | - |\\n| `onPress` | 点击元素触发 |  () => void | - |\\n| `disabled` | 是否禁用 | Boolean | - |\\n| `render` | 自定义元素 | (text: string, record: Column, index: number) => React.ReactNode | - |\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/SwipeAction/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/SwipeAction/README.md\" />;\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","path","mdData","_objectWithoutProperties","_excluded","$dom","useRef","_jsxs","ref","children","_jsx","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","_node$children$0$data","type","tagName","data","meta","_node$children$0$data2","isMeta","properties","components","div","_ref2","props","_excluded2","metaData","_node$position","line","position","start","metaId","getMetaId","String","Child","concat","code","value","getURLParameters","CodeLayout","disableCheckered","disableToolbar","disableCode","disablePreview","bordered","copied","background","toolbar","title","codeProps","style","padding","text","Footer","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","Preview","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}