{"version":3,"sources":["../../packages/core/lib/Switch/README.md"],"names":[],"mappings":"uGAAA,OAAe","file":"static/js/113.fb0cca6d.chunk.js","sourcesContent":["export default \"Switch 开关\\n---\\n\\n表示两种相互对立的状态间的切换，多用于触发「开/关」，这是 `React Naitve` 自带的组件重新封装，目的是为了保持 iOS/Android 一致的效果。\\n\\n> 自带组件 Switch 已过时，将很快删除。\\n<!--rehype:style=border-left: 8px solid #ffe564;background-color: #ffe56440;padding: 12px 16px;-->\\n\\n### 基础示例\\n\\n```jsx\\nimport { Switch } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <Switch />\\n  );\\n}\\n```\\n\\n### 尺寸大小\\n\\n这是一个受控组件，需要一个 `onValueChange` 回调来更新值属性，以使该组件反映用户操作。\\n\\n```jsx\\nimport { Spacing, Flex, Switch } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <Flex direction=\\\"row\\\">\\n      <Switch size=\\\"small\\\" />\\n      <Spacing type=\\\"horizontal\\\" />\\n      <Switch />\\n      <Spacing type=\\\"horizontal\\\" />\\n      <Switch size=\\\"large\\\" />\\n    </Flex>\\n  );\\n}\\n```\\n\\n### 受控组件\\n\\n这是一个受控组件，需要一个 `onValueChange` 回调来更新值属性，以使该组件反映用户操作。\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Switch } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  const [checked, setChecked] = useState(false);\\n  return (\\n    <Switch  checked={checked} onValueChange={() => setChecked(!checked)} />\\n  );\\n}\\n```\\n\\n### props\\n\\n| 参数 | 说明 | 类型 | 默认值|\\n|------|------|-----|------|\\n| `checked` | 是否被选中 | Boolean | `false` |\\n| `color` | 设置 | Boolean | `false` |\\n| `size` | 尺寸大小 | `small`, `default`, `large` | `default` |\\n| `disabled` | 如果为`true`，则用户将无法切换开关。 | Boolean | `false` |\\n| `trackStyle` | 设置背景样式。 | ViewStyle | - |\\n| `thumbStyle` | 前景开关手柄的颜色。 | ViewStyle | - |\\n| `onValueChange` | 当用户尝试更改开关的值时调用。 接收新值作为参数。 | (value: Boolean) => void | `false` |\";"],"sourceRoot":""}