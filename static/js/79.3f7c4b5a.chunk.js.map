{"version":3,"sources":["../../packages/core/lib/CardCollapse/README.md"],"names":[],"mappings":"sGAAA,OAAe","file":"static/js/79.3f7c4b5a.chunk.js","sourcesContent":["export default \"CardCollapse 可折叠卡片列表\\n---\\n\\n可折叠卡片列表\\n\\n<img src='https://user-images.githubusercontent.com/66067296/137702190-e48c11e3-77d9-40c3-8d59-09ac6ddc9efb.gif' alt='CardCollapse' style='zoom:100%;' />\\n\\n### 基础示例\\n\\n<!--DemoStart--> \\n```jsx\\nimport React from 'react';\\nimport { ScrollView, View,Image } from 'react-native';\\nimport { CardCollapse } from '@uiw/react-native';\\nimport Layout from '../../Layout';\\nimport map from 'lodash/map'\\n\\nconst contents = [\\n  'https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2019%2F04%2F22%2Fca22d8623fe7454ea9cdb33f3137d14e.jpeg&thumbnail=650x2147483647&quality=80&type=jpg',\\n  'https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2019%2F04%2F22%2Fca22d8623fe7454ea9cdb33f3137d14e.jpeg&thumbnail=650x2147483647&quality=80&type=jpg',\\n  'https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2019%2F04%2F22%2Fca22d8623fe7454ea9cdb33f3137d14e.jpeg&thumbnail=650x2147483647&quality=80&type=jpg',\\n  'https://nimg.ws.126.net/?url=http%3A%2F%2Fdingyue.ws.126.net%2F2019%2F04%2F22%2Fca22d8623fe7454ea9cdb33f3137d14e.jpeg&thumbnail=650x2147483647&quality=80&type=jpg'\\n];\\n\\nconst CardCollapseDemo = (props: any) => {\\n  const { Header } = Layout;\\n  const { route } = props;\\n  const description = route.params.description;\\n  const title = route.params.title;\\n\\n  const renderItem = (_: string, index: number) => {\\n    return (\\n      <View key={index} style={{ padding: 18 }}>\\n        <Image source={{uri: contents[index]}} style={{ height: 150 }} />\\n      </View>\\n    );\\n  }\\n  return (\\n    <ScrollView style={{ flex: 1 }}>\\n      <Header title={title} description={description} />\\n      <Header description={'基本使用'} />\\n      <CardCollapse\\n       isCollapsed\\n       disablePresses={true}\\n      >\\n        {map(contents, (item, index) => {\\n          return renderItem(item, index);\\n        })}\\n      </CardCollapse>\\n    </ScrollView>\\n  );\\n};\\nexport default CardCollapseDemo;\\n\\n```\\n<!--End-->\\n\\n### Props\\n\\n```ts\\ntype CardCollapseProps = ViewProps & {\\n  /**\\n    * 是否折叠\\n    */\\n  isCollapsed: boolean;\\n  /**\\n   * 渲染的内容\\n   */\\n  children: JSX.Element | JSX.Element[]\\n  /**\\n   * 外层样式\\n   */\\n  containerStyle?: StyleProp<ViewStyle>;\\n  /**\\n   * 内容样式\\n   */\\n  contentContainerStyle?: StyleProp<ViewStyle>;\\n  /**\\n   * 卡片圆角\\n   */\\n  itemBorderRadius?: number;\\n  /**\\n   * 点击卡片回调\\n   */\\n  onItemPress?: (index: number) => void;\\n  /**\\n   * 卡片折叠回调（值是未来折叠状态）\\n   */\\n  onCollapseWillChange?: (changed: boolean) => void;\\n  /**\\n   * 卡片折叠回调（值是目前状态）\\n   */\\n  onCollapseChanged?: (changed: boolean) => void;\\n  /**\\n   * 卡片是否可以点击\\n   */\\n  disablePresses?: boolean;\\n};\\n```\\n\\n\";"],"sourceRoot":""}