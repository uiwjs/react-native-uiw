{"version":3,"file":"static/js/687.208a76e6.chunk.js","mappings":"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","sources":["component/Preview/Footer.js","component/Preview/index.js","react-native/lib/theme/README.md","pages/components/theme/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import { Divider } from 'uiw';\n\nexport default function (props) {\n  const { path } = props;\n  const url = /^http/.test(path || '')\n    ? path\n    : `https://github.com/uiwjs/react-native-uiw/edit/master/${path?.replace(/^\\//, '')}`;\n  return (\n    <div style={{ paddingBlock: 20 }}>\n      {path && url && (\n        <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" style={{ color: '#333' }}>\n          在Github上编辑本页！\n        </a>\n      )}\n      <Divider type=\"vertical\" />\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/uiwjs/react-native-uiw/issues\"\n        style={{ color: '#333' }}\n      >\n        提交bug\n      </a>\n    </div>\n  );\n}\n","import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\nimport Editor from './Footer';\nimport Footer from '../Footer';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  /* max-width: 1024px; */\n  width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    return newValue === 'true';\n  }\n  return defaultValue;\n};\n\nconst Preview = ({ path, ...mdData }) => {\n  const Preview = CodeLayout.Preview;\n  const Code = CodeLayout.Code;\n  const Toolbar = CodeLayout.Toolbar;\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        {...mdData}\n        disableCopy={true}\n        // transformImageUri={transformImageUri}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                >\n                  <Preview>\n                    <Child />\n                  </Preview>\n                  <Toolbar text={code} copied={getBooleanValue(param, 'copied', true)}>\n                    {param.title || '示例'}\n                  </Toolbar>\n                  <Code>\n                    <code {...rest} />\n                  </Code>\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <Footer />\n      <Editor path={path} />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle width={50} onClick={() => scrollToTop()} format={() => <Icon type=\"arrow-up\" />} percent={percent} />\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"\\n# Theme 主题\\n\\n`@shopify/restyle`库给我们提供了完备的主题定制功能。\\n\\n## Spacing 间距\\n\\n| 名称  | 说明  | 值   |\\n| ----- | ----- | ---- |\\n| `x0`  | 1 倍  | `0`  |\\n| `x1`  | 1 倍  | `4`  |\\n| `x2`  | 2 倍  | `8`  |\\n| `x3`  | 3 倍  | `12` |\\n| `x4`  | 4 倍  | `16` |\\n| `x5`  | 5 倍  | `20` |\\n| `x6`  | 6 倍  | `24` |\\n| `x7`  | 7 倍  | `28` |\\n| `x8`  | 8 倍  | `32` |\\n| `x9`  | 9 倍  | `36` |\\n| `x10` | 10 倍 | `40` |\\n\\n## 圆角\\n\\n| 名称  | 说明  | 值   |\\n| ----- | ----- | ---- |\\n| `x0`  | 1 倍  | `0`  |\\n| `x1`  | 1 倍  | `4`  |\\n| `x2`  | 2 倍  | `8`  |\\n| `x3`  | 3 倍  | `12` |\\n| `x4`  | 4 倍  | `16` |\\n| `x5`  | 5 倍  | `20` |\\n| `x6`  | 6 倍  | `24` |\\n| `x7`  | 7 倍  | `28` |\\n| `x8`  | 8 倍  | `32` |\\n| `x9`  | 9 倍  | `36` |\\n| `x10` | 10 倍 | `40` |\\n\\n## 媒体查询断点\\n\\n| 名称          | 说明   | 值     |\\n| ------------- | ------ | ------ |\\n| `phone`       | 手机   | `0`    |\\n| `tablet`      | 平板   | `768`  |\\n| `largeTablet` | 大平板 | `1024` |\\n\\n## 通用颜色\\n\\n| 名称          | 说明       | 值            |\\n| ------------- | ---------- | ------------- |\\n| `transparent` | 透明       | `transparent` |\\n| `white`       | 白色       | `#FFFFFF`     |\\n| `black`       | 黑色       | `#000000`     |\\n| `func50`      | 功能色 0   | `#FBF5F5`     |\\n| `func100`     | 功能色 1   | `#FFF7E3`     |\\n| `func200`     | 功能色 2   | `#FFD21D`     |\\n| `func300`     | 功能色 3   | `#52C41A`     |\\n| `func400`     | 功能色 4   | `#1890FF`     |\\n| `func500`     | 功能色 5   | `#F86E21`     |\\n| `func600`     | 功能色 6   | `#F4333C`     |\\n| `func700`     | 保留功能色 | `transparent` |\\n| `func800`     | 保留功能色 | `transparent` |\\n| `func900`     | 保留功能色 | `transparent` |\\n\\n**我们设置了`func700`/ `func800`/ `func900`作为保留功能色，方便开发者进行扩展**\\n\\n## 亮色模式颜色(继承通用颜色)\\n\\n| 名称          | 说明       | 值                      |\\n| ------------- | ---------- | ----------------------- |\\n| `primary50`   | 主色       | `#E5F1FF`               |\\n| `primary100`  | 主色       | `#3AA3FF`               |\\n| `primary200`  | 主色       | `#005DFF`               |\\n| `primary300`  | 主色       | `rgba(0, 93, 255, 0.7)` |\\n| `primary400`  | 主色       | `rgba(0, 93, 255, 0.4)` |\\n| `primary500`  | 保留主色   | `transparent`           |\\n| `primary600`  | 保留主色   | `transparent`           |\\n| `primary700`  | 保留主色   | `transparent`           |\\n| `primary800`  | 保留主色   | `transparent`           |\\n| `primary900`  | 保留主色   | `transparent`           |\\n| `gray50`      | 中性色     | `#F5F5F5`               |\\n| `gray100`     | 中性色     | `#E5E5E5`               |\\n| `gray200`     | 中性色     | `#CCCCCC`               |\\n| `gray300`     | 中性色     | `#999999`               |\\n| `gray400`     | 中性色     | `#666666`               |\\n| `gray500`     | 中性色     | `#333333`               |\\n| `gray600`     | 中性色     | `rgba(0, 0, 0, 0.4)`    |\\n| `gray700`     | 中性色     | `rgba(0, 0, 0, 0.04)`   |\\n| `gray800`     | 保留中性色 | `transparent`           |\\n| `gray900`     | 保留中性色 | `transparent`           |\\n| `background`  | 背景色     | 同`gray50`              |\\n| `mask`        | 遮罩       | 同`gray600`             |\\n| `border`      | 边框       | 同`gray200`             |\\n| `icon`        | 图标       | 同`gray300`             |\\n| `disabled`    | 禁用       | 同`gray200`             |\\n| `text`        | 文本       | 同`gray500`             |\\n| `text_active` | 当前文本   | 同`white`               |\\n\\n**我们设置了`primary500`/ `primary600`/ `primary700`/ `primary800`/ `primary900`作为保留主色， `gray800` / `gray900`作为保留中性色，方便开发者进行扩展**\\n\\n## 暗色模式颜色(继承通用颜色)\\n\\n| 名称          | 说明        | 值                          |\\n| ------------- | ----------| --------------------------- |\\n| `primary50`   | 主色       | `rgba(0, 93, 255, 0.3)`     |\\n| `primary100`  | 主色       | `#3AA3FF`                   |\\n| `primary200`  | 主色       | `#005DFF`                   |\\n| `primary300`  | 主色       | `rgba(0, 93, 255, 0.7)`     |\\n| `primary400`  | 主色       | `rgba(0, 93, 255, 0.4)`     |\\n| `primary500`  | 保留主色   | `transparent`               |\\n| `primary600`  | 保留主色   | `transparent`               |\\n| `primary700`  | 保留主色   | `transparent`               |\\n| `primary800`  | 保留主色   | `transparent`               |\\n| `primary900`  | 保留主色   | `transparent`               |\\n| `gray50`      | 中性色     | `#0D0D0D`                   |\\n| `gray100`     | 中性色     | `rgba(255, 255, 255, 0.15)` |\\n| `gray200`     | 中性色     | `rgba(255, 255, 255, 0.25)` |\\n| `gray300`     | 中性色     | `rgba(255, 255, 255, 0.4)`  |\\n| `gray400`     | 中性色     | `rgba(255, 255, 255, 0.6)`  |\\n| `gray500`     | 中性色     | `rgba(255, 255, 255, 0.8)`  |\\n| `gray600`     | 中性色     | `rgba(0, 0, 0, 0.4)`        |\\n| `gray700`     | 中性色     | `rgba(0, 0, 0, 0.04)`       |\\n| `gray800`     | 中性色     | `#1E1E28`                   |\\n| `gray900`     | 保留中性色  | `transparent`               |\\n| `background`  | 背景色     | 同`gray50`                  |\\n| `mask`        | 遮罩       | 同`gray800`                 |\\n| `border`      | 边框       | 同`gray400`                 |\\n| `icon`        | 图标       | 同`gray300`                 |\\n| `disabled`    | 禁用       | 同`gray200`                 |\\n| `text`        | 文本       | 同`gray500`                 |\\n| `text_active` | 当前文本    | 同`white`                   |\\n\\n## TextVariant\\n\\n| 名称 | 字体大小(fontSize) | 字重(fontWeight)   | 行高(lineHeight) | 字体(fontFamily) |\\n| ---- | ------------------ | ---------------- | ---------------- | ---------------- |\\n| `h0` | 28                 | `bold`           | 39               | PingFang SC      |\\n| `h1` | 18                 | `500`            | 25               | PingFang SC      |\\n| `h2` | 16                 | `500`            | 22               | PingFang SC      |\\n| `h3` | 14                 | `500`            | 19               | PingFang SC      |\\n| `h4` |                    |                  |                  |                  |\\n| `h5` |                    |                  |                  |                  |\\n| `h6` |                    |                  |                  |                  |\\n| `h7` |                    |                  |                  |                  |\\n| `h8` |                    |                  |                  |                  |\\n| `h9` |                    |                  |                  |                  |\\n| `p0` | 16                 |                  | 22               | PingFang SC      |\\n| `p1` | 14                 |                  | 19               | PingFang SC      |\\n| `p2` | 12                 |                  | 16               | PingFang SC      |\\n| `p3` | 10                 |                  | 14               | PingFang SC      |\\n| `p4` |                    |                  |                  |                  |\\n| `p5` |                    |                  |                  |                  |\\n| `p6` |                    |                  |                  |                  |\\n| `p7` |                    |                  |                  |                  |\\n| `p8` |                    |                  |                  |                  |\\n| `p9` |                    |                  |                  |                  |\\n| `d0` | 24                 |                  | 28               | Roboto           |\\n| `d1` | 18                 |                  | 21               | Roboto           |\\n| `d2` | 14                 |                  | 19               | Roboto           |\\n| `d3` | 12                 |                  | 14               | Roboto           |\\n| `d4` |                    |                  |                  |                  |\\n| `d5` |                    |                  |                  |                  |\\n| `d6` |                    |                  |                  |                  |\\n| `d7` |                    |                  |                  |                  |\\n| `d8` |                    |                  |                  |                  |\\n| `d9` |                    |                  |                  |                  |\\n\\n**我们设置了`h4`/`h5`/`h6`/`h7`/`h8`/`h9`/`p4`/`p5`/`p6`/`p7`/`p8`/`p9`/`d4`/`d5`/`d6`/`d7`/`d8`/`d9`作为保留的字体样式，方便开发者进行扩展**\\n\\n## 如何复写应用主题\\n\\n想要复写应用主题很简单，只需要如下操作就可以实现：\\n\\n### 1. 在应用中定义你自己的主题颜色文件：\\n\\n```ts | pure\\nimport { theme, Theme } from '@uiw/react-native';\\n\\nexport const lightTheme: Theme = {\\n  ...theme.lightTheme,\\n  colors: {\\n    ...theme.lightTheme.colors,\\n    // 复写需要覆盖的颜色\\n  },\\n};\\n\\nexport const darkTheme: Theme = {\\n  ...theme.darkTheme,\\n  colors: {\\n    ...theme.darkTheme.colors,\\n    // 复写需要覆盖的颜色\\n  },\\n};\\n```\\n\\n### 2. 把自定义主题注入到`app.tsx`里的`ThemeProvider`里:\\n\\n```jsx | pure\\n// 其他import\\nimport { ThemeProvider } from '@uiw/react-native';\\nimport { lightTheme, darkTheme } from './theme';\\n\\nexport default () => {\\n  // 其他代码\\n\\n  return <ThemeProvider theme={lightTheme}>{/** 其他Provider */}</ThemeProvider>;\\n};\\n```\\n\\n### 3. 实现亮色模式和暗色模式切换\\n\\n```jsx | pure\\n// 其他import\\nimport { ThemeProvider } from '@uiw/react-native';\\nimport { lightTheme, darkTheme } from './theme';\\n\\nexport default () => {\\n  const [dark, setDark] = useState(false);\\n  // 其他代码\\n\\n  return (\\n    <ThemeProvider theme={dark ? darkTheme : lightTheme}>\\n      {/** 把setDark方法通过context或者其他全局变量的方式传递到应用里在需要的地方调用即可。 */}\\n      {/** 其他Provider */}\\n    </ThemeProvider>\\n  );\\n};\\n```\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/theme/README.md';\n\nconst DEMO = () => <Preview {...md} path=\"/packages/core/src/theme/README.md\" />;\nexport default DEMO;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["props","path","url","test","concat","replace","_jsxs","style","paddingBlock","children","_jsx","href","target","rel","color","Divider","type","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Markdown","MarkdownPreview","_templateObject2","getBooleanValue","param","field","defaultValue","Reflect","has","get","_ref","mdData","_objectWithoutProperties","_excluded","Preview","CodeLayout","Code","Toolbar","$dom","useRef","ref","_objectSpread","disableCopy","source","rehypeRewrite","node","index","parent","tagName","child","properties","ariaHidden","components","code","_ref2","_node$position","inline","_excluded2","meta","rest","_excluded3","isMeta","line","position","start","metaId","getMetaId","String","Child","data","value","getURLParameters","disableCheckered","bordered","text","copied","title","Footer","Editor","BackTop","speed","_ref3","percent","scrollToTop","Circle","width","onClick","format","Icon","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}