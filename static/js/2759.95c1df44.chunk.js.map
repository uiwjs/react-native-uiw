{"version":3,"file":"static/js/2759.95c1df44.chunk.js","mappings":"gHAAA","sources":["../../packages/core/lib/SearchBar/README.md"],"sourcesContent":["export default \"SearchBar 模糊搜素组件\\n\\n![](https://user-images.githubusercontent.com/66067296/140004480-cadbd892-afb3-483f-95a3-3bfe43a4bdfc.gif)<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n---\\n\\n### 基础示例\\n\\n```jsx\\nimport { SearchBar } from '@uiw/react-native';\\n\\nfunction Demo() {\\n  return (\\n    <SearchBar \\n      labelInValue \\n      options={[\\n        {label:'上海',value:1},\\n        {label:'南京',value:2}\\n      ]} \\n      onFocu={()=>{}}  \\n      onChange={val=>console.log('val',val)} \\n    />\\n  );\\n}\\n```\\n\\n### props\\n\\n```ts\\ninterface OptionsState {\\n  label: string;\\n  value: string | number;\\n}\\n\\ninterface SearchBarProps {\\n  /** 搜索框文字变化 */\\n  onChangeText?: (value: string) => void;\\n  /** 数据化配置选项内容，相比 jsx 定义会获得更好的渲染性能 */\\n  options?: Array<OptionsState>;\\n  /** 事件变化回调 */\\n  onChange?: (value: string | null) => void;\\n  /** 获得焦点时回调 */\\n  onFocus?: (e: any | string) => void;\\n  /** 是否把每个选项的 label 包装到 value 中，会把 Select 的 value 类型从 string 变为 { key: string, label: ReactNode } 的格式   */\\n  labelInValue?: Boolean;\\n  /** 是否禁用 */\\n  disabled?: Boolean;\\n  /** 值 */\\n  value?: String;\\n  /** 加载中状态 */\\n  loading?: Boolean;\\n  /** 搜索框默认文本 */\\n  placeholder?: String;\\n  /** 图标 */\\n  extra?: JSX.Element;\\n  /** 是否展示清楚图标 */\\n  showClear?: boolean;\\n}\\n```\";"],"names":[],"sourceRoot":""}