{"version":3,"file":"static/js/9769.b34bd010.chunk.js","mappings":"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","sources":["react-native/lib/Table/README.md","pages/components/table/index.tsx","react-native/lib/Button/index.js","react-native/lib/Table/BodyRow.js","react-native/lib/Table/index.js","react-native/lib/Typography/Div.js","react-native/lib/Typography/Text.js"],"sourcesContent":["\nexport default {\n    components: { 6: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '配件名称',\n      dataIndex: 'partName',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件品牌',\n      dataIndex: 'partBrand',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件型号',\n      dataIndex: 'partModel',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 200\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 100\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\"\n  });\n};\nreturn Demo; })(),66: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '配件名称',\n      dataIndex: 'partName',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件品牌',\n      dataIndex: 'partBrand',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '配件型号',\n      dataIndex: 'partModel',\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 300\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 110\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'Chanel',\n      partBrand: '香奈儿',\n      partModel: 'xl',\n      remark: 'ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\",\n    horizontal: false\n  });\n};\nreturn Demo; })(),127: (function() { \"use strict\";\n\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Table = _interopRequireDefault(require(\"@uiw/react-native/lib/Table\"));\nvar _Button = _interopRequireDefault(require(\"@uiw/react-native/lib/Button\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_Table[\"default\"], {\n    columns: [{\n      title: '名称',\n      dataIndex: 'partName',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '品牌',\n      dataIndex: 'partBrand',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '型号',\n      dataIndex: 'partModel',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '备注',\n      dataIndex: 'remark',\n      ellipsis: true,\n      style: {\n        width: 100\n      }\n    }, {\n      title: '操作',\n      dataIndex: 'id',\n      style: {\n        width: 100\n      },\n      render: function render() {\n        return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: '#3b8ee9'\n          }\n        }, \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(_Button[\"default\"], {\n          size: \"small\",\n          bordered: false,\n          textStyle: {\n            color: 'red'\n          }\n        }, \"\\u8BE6\\u60C5\"));\n      }\n    }],\n    data: [{\n      id: '1',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库 - UIW',\n      remark: 'UIW，ff爱zz,三生三世用相随'\n    }, {\n      id: '2',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW，ff爱zz,三生三世用相随'\n    }, {\n      id: '3',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW, ff爱zz,三生三世用相随'\n    }, {\n      id: '4',\n      partName: 'React Native UIW 组件库',\n      partBrand: '一个基于 React Native 的 UI 组件库',\n      partModel: 'React Native UI 组件库- UIW',\n      remark: 'UIW, ff爱zz,三生三世用相随'\n    }],\n    rowKey: \"id\"\n  });\n};\nreturn Demo; })(), },\n    data: {\n  \"6\": {\n    \"name\": 6,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '配件名称',\\n      dataIndex: 'partName',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件品牌',\\n      dataIndex: 'partBrand',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件型号',\\n      dataIndex: 'partModel',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 200\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 100\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\"\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 200 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n              );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  },\n  \"66\": {\n    \"name\": 66,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '配件名称',\\n      dataIndex: 'partName',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件品牌',\\n      dataIndex: 'partBrand',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '配件型号',\\n      dataIndex: 'partModel',\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 300\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 110\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'Chanel',\\n      partBrand: '香奈儿',\\n      partModel: 'xl',\\n      remark: 'ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\",\\n    horizontal: false\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 300 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 110 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n                );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n        horizontal={false}\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  },\n  \"127\": {\n    \"name\": 127,\n    \"meta\": {\n      \"background\": \"#bebebe29\"\n    },\n    \"code\": \"\\\"use strict\\\";\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\nvar _Table = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Table\\\"));\\nvar _Button = _interopRequireDefault(require(\\\"@uiw/react-native/lib/Button\\\"));\\nvar _reactNative = require(\\\"react-native\\\");\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_Table[\\\"default\\\"], {\\n    columns: [{\\n      title: '名称',\\n      dataIndex: 'partName',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '品牌',\\n      dataIndex: 'partBrand',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '型号',\\n      dataIndex: 'partModel',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '备注',\\n      dataIndex: 'remark',\\n      ellipsis: true,\\n      style: {\\n        width: 100\\n      }\\n    }, {\\n      title: '操作',\\n      dataIndex: 'id',\\n      style: {\\n        width: 100\\n      },\\n      render: function render() {\\n        return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: '#3b8ee9'\\n          }\\n        }, \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(_Button[\\\"default\\\"], {\\n          size: \\\"small\\\",\\n          bordered: false,\\n          textStyle: {\\n            color: 'red'\\n          }\\n        }, \\\"\\\\u8BE6\\\\u60C5\\\"));\\n      }\\n    }],\\n    data: [{\\n      id: '1',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库 - UIW',\\n      remark: 'UIW，ff爱zz,三生三世用相随'\\n    }, {\\n      id: '2',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW，ff爱zz,三生三世用相随'\\n    }, {\\n      id: '3',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW, ff爱zz,三生三世用相随'\\n    }, {\\n      id: '4',\\n      partName: 'React Native UIW 组件库',\\n      partBrand: '一个基于 React Native 的 UI 组件库',\\n      partModel: 'React Native UI 组件库- UIW',\\n      remark: 'UIW, ff爱zz,三生三世用相随'\\n    }],\\n    rowKey: \\\"id\\\"\\n  });\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '名称',\\n            dataIndex: 'partName',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '品牌',\\n            dataIndex: 'partBrand',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '型号',\\n            dataIndex: 'partModel',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'red'}}>详情</Button>\\n                </>\\n               );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库 - UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\"\n  }\n},\n    source: \"Table 表格\\n---\\n一个非常好用的Table表格 😄\\n### 基础示例\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 200 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n              );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n`horizontal` 水平排成一行\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '配件名称',\\n            dataIndex: 'partName',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件品牌',\\n            dataIndex: 'partBrand',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '配件型号',\\n            dataIndex: 'partModel',\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 300 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 110 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>详情</Button>\\n                </>\\n                );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'Chanel', partBrand: '香奈儿', partModel: 'xl', remark: 'ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n        horizontal={false}\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n### 超出自动省略\\n\\n```jsx mdx:preview&background=#bebebe29\\nimport React from 'react';\\nimport  {Table, Button } from '@uiw/react-native';\\nimport {View} from 'react-native';\\n\\nconst Demo = () => {\\n  return (\\n     <Table\\n        columns={[\\n          {\\n            title: '名称',\\n            dataIndex: 'partName',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '品牌',\\n            dataIndex: 'partBrand',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '型号',\\n            dataIndex: 'partModel',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '备注',\\n            dataIndex: 'remark',\\n            ellipsis: true,\\n            style: { width: 100 },\\n          },\\n          {\\n            title: '操作',\\n            dataIndex: 'id',\\n            style: { width: 100 },\\n            render: () => {\\n              return (\\n                <>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'#3b8ee9'}}>编辑</Button>\\n                    <Button size=\\\"small\\\" bordered={false} textStyle={{color:'red'}}>详情</Button>\\n                </>\\n               );\\n            },\\n          },\\n        ]}\\n        data={[\\n          { id: '1',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库 - UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '2',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW，ff爱zz,三生三世用相随' },\\n          { id: '3',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n          { id: '4',  partName: 'React Native UIW 组件库', partBrand: '一个基于 React Native 的 UI 组件库', partModel: 'React Native UI 组件库- UIW', remark: 'UIW, ff爱zz,三生三世用相随' },\\n        ]}\\n        rowKey=\\\"id\\\"\\n      />\\n  );\\n}\\nexport default Demo\\n\\n```\\n\\n### props\\n\\n| 参数                 | 说明         | 类型    | 默认值  |\\n| -------------------- | ------------ | ------- | ------- |\\n| `columns`           |\\t表格列的配置描述，具体项见下表       | ColumnsType[] | - |\\n| `data`            | 数据数组  | object[] | - |\\n| `rowKey`           | 表格行 key 的取值，可以是字符串或一个函数     | string | function(record): string    | key       |\\n| `horizontal`       | 是否水平排成一行  | bool | true |\\n| `style`       | Table样式 | object | - |\\n\\n### Column\\n\\n| 参数                 | 说明         | 类型    | 默认值  |\\n| -------------------- | ------------ | ------- | ------- |\\n| `dataIndex`           |\\t列数据在数据项中对应的路径，支持通过数组查询嵌套路径      | string | string[] | - |\\n| `ellipsis`            | 超过宽度将自动省略 | - | - |\\n| `title`           | 列头显示文字    | string | -   |\\n| `render`           | 生成复杂数据的渲染函数,参数为当前行数据    | function(record) {} | -   |\\n| `style`           | Table行内样式    | object | -   |\\n\",\n    headings:[],\n    headingsList:[],\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/Table/README.md';\n\nexport const Component = () => <Preview {...md} path=\"/packages/core/src/Table/README.md\" />;\n","import React from 'react';\nimport { StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { color } from '../utils';\nimport Div from '../Typography/Div';\nimport { useTheme } from '@shopify/restyle';\nexport default function ButtonView(props) {\n    const { children, style, textStyle: childStyle, rounded, bordered, color: buttonColor, type, size, disabled, loading, ...restProps } = props;\n    const theme = useTheme();\n    let backgroundColor, textColor, borderColor, borderWidth, borderRadius;\n    switch (type) {\n        case 'warning':\n            backgroundColor = theme.colors.func200 || '#FFD21D';\n            break;\n        case 'primary':\n            backgroundColor = theme.colors.func400 || '#1890FF';\n            break;\n        case 'success':\n            backgroundColor = theme.colors.func300 || '#52C41A';\n            break;\n        case 'danger':\n            backgroundColor = theme.colors.func600 || '#F4333C';\n            break;\n        case 'light':\n            backgroundColor = theme.colors.white || '#FFFFFF';\n            break;\n        case 'dark':\n            backgroundColor = theme.colors.black || '#000000';\n            break;\n        default:\n            break;\n    }\n    if (backgroundColor) {\n        backgroundColor = color(backgroundColor).rgb().string();\n    }\n    // if (!type) {\n    //   borderColor = color(theme.colors.black).alpha(0.32).rgb().string();\n    //   borderWidth = 1;\n    // }\n    if (disabled) {\n        textColor = color(theme.colors.disabled || '#CCCCCC')\n            .alpha(0.1)\n            .rgb()\n            .string();\n        backgroundColor = color(theme.colors.disabled || '#CCCCCC')\n            .rgb()\n            .string();\n    }\n    if (buttonColor) {\n        backgroundColor = color(buttonColor).rgb().string();\n    }\n    if (rounded && (typeof rounded === 'number' || typeof rounded === 'boolean')) {\n        borderRadius = rounded;\n    }\n    if (bordered) {\n        borderColor = color(theme.colors.gray200 || backgroundColor)\n            .alpha(1)\n            .rgb()\n            .string();\n        borderWidth = 1;\n    }\n    // if (!bordered || buttonColor) {\n    //   borderWidth = 0;\n    // }\n    const buttonStyle = {\n        backgroundColor: backgroundColor || '#3578e5',\n        borderColor,\n        borderWidth,\n        borderRadius,\n    };\n    if ((type || backgroundColor || buttonColor || buttonStyle.backgroundColor) && type !== 'light') {\n        textColor = color(theme.colors.white || '#FFFFFF')\n            .rgb()\n            .string();\n    }\n    else {\n        textColor = color(theme.colors.black || '#000000')\n            .rgb()\n            .string();\n    }\n    const textStyle = { color: textColor };\n    let sizeStyle = {};\n    if (size && styles[size]) {\n        sizeStyle = styles[size];\n    }\n    let boxStyle = {};\n    const styleKey = `${size}Box`;\n    if (size && styles[styleKey]) {\n        boxStyle = styles[styleKey];\n    }\n    if (!children) {\n        return null;\n    }\n    return (<TouchableOpacity testID=\"RNE__Button__wrap\" style={[styles.button, styles.content, buttonStyle, boxStyle, style]} disabled={disabled} {...restProps}>\n      {loading && <ActivityIndicator size={16} color={textColor} style={styles.icon}/>}\n      {React.Children.toArray(children).map((child, idx) => {\n            return (<Div testID=\"RNE__Button__div\" key={idx} style={[sizeStyle, styles.label, textStyle, childStyle]}>\n            {child}\n          </Div>);\n        })}\n    </TouchableOpacity>);\n}\nButtonView.defaultProps = {\n    activeOpacity: 0.5,\n    rounded: 5,\n    bordered: false,\n    size: 'default',\n};\nconst styles = StyleSheet.create({\n    button: {\n        borderStyle: 'solid',\n        display: 'flex',\n    },\n    content: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    icon: {\n        width: 16,\n        marginRight: 4,\n    },\n    label: {\n    // textAlign: 'center',\n    },\n    smallBox: {\n        paddingHorizontal: 3,\n    },\n    defaultBox: {\n        paddingHorizontal: 8,\n    },\n    largeBox: {\n        paddingHorizontal: 10,\n    },\n    small: {\n        marginVertical: 4,\n        fontSize: 14,\n    },\n    default: {\n        marginVertical: 8,\n        fontSize: 16,\n    },\n    large: {\n        marginVertical: 10,\n        fontSize: 18,\n    },\n});\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { colors } from '../utils';\nexport default function BodyRow({ columns, record, style }) {\n    return (<View style={[styles.row, style]}>\n      {columns.map((itm, idx) => {\n            // row渲染的内容\n            let val = '';\n            if (itm.dataIndex.indexOf('.') > -1) {\n                const firstKey = itm.dataIndex.split('.')[0];\n                const secondKey = itm.dataIndex.split('.')[1];\n                val = record[firstKey][secondKey];\n            }\n            else {\n                val = record[itm.dataIndex];\n            }\n            // 是否省略多余文字\n            let textEllipsize = itm.ellipsis && itm.ellipsis\n                ? {\n                    numberOfLines: 1,\n                    ellipsizeMode: 'tail',\n                }\n                : null;\n            return (<View key={itm.dataIndex} style={[(columns.length - 1 === idx) ? styles.firstLeftCell : styles.cell, itm.style ? itm.style : styles.titleFlex]}>\n            {itm.render ? (itm.render(record)) : (<Text selectable={true} {...textEllipsize} style={styles.content}>\n                {val}\n              </Text>)}\n          </View>);\n        })}\n    </View>);\n}\nconst styles = StyleSheet.create({\n    row: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignContent: 'center',\n        borderBottomWidth: 1,\n        borderRightWidth: 1,\n        borderLeftWidth: 1,\n        borderColor: colors.colorsPalette.dark70,\n    },\n    cell: {\n        borderRightWidth: 1,\n        borderColor: colors.colorsPalette.dark70,\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    firstLeftCell: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRightWidth: 1,\n        borderColor: '#FFF',\n    },\n    content: {\n        color: '#888888',\n    },\n    titleFlex: {\n        flex: 1,\n    }\n});\n","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport BodyRow from './BodyRow';\nimport { colors } from '../utils';\nimport { useTheme } from '@shopify/restyle';\n// table组件\nconst Table = ({ data, columns, rowKey, horizontal = true, style }) => {\n    const theme = useTheme();\n    const styles = createStyles({\n        bgColor: theme.colors.background || '#F5F5F5',\n        textColor: theme.colors.primary_text || '#ccc',\n    });\n    const getRowKey = (record) => {\n        const key = typeof rowKey === 'function' ? rowKey(record) : record && record[rowKey];\n        return key;\n    };\n    return (<ScrollView testID=\"RNE__Table__wrap\" style={[styles.conW, style]} horizontal={horizontal}>\n      <ScrollView horizontal={!horizontal}>\n        <View testID=\"RNE__Table__header\" style={styles.conTitle}>\n          {columns.map((itm, idx) => (<View key={itm.dataIndex + idx} style={[\n                styles.contRight,\n                { borderRightWidth: idx === columns.length - 1 ? 0 : 1 },\n                itm.style ? itm.style : styles.titleFlex,\n            ]}>\n              <Text style={styles.content}>{itm.title}</Text>\n            </View>))}\n        </View>\n        <View testID=\"RNE__Table__body\">\n          {data.map((item, idx) => {\n            const key = getRowKey(item);\n            return <BodyRow key={key} columns={columns} record={item}/>;\n        })}\n        </View>\n        {data.length === 0 && <Text style={styles.noDataText}>暂无数据...</Text>}\n      </ScrollView>\n    </ScrollView>);\n};\nfunction createStyles({ bgColor, textColor }) {\n    return StyleSheet.create({\n        title: {\n            backgroundColor: colors.white,\n            height: 30,\n        },\n        conTitle: {\n            flexDirection: 'row',\n            borderWidth: 1,\n            borderColor: colors.colorsPalette.dark70,\n        },\n        content: {\n            color: textColor,\n        },\n        contRight: {\n            borderRightWidth: 1,\n            borderRightColor: colors.colorsPalette.dark70,\n            borderBottomColor: colors.colorsPalette.dark70,\n            color: '#888888',\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingTop: 5,\n            paddingBottom: 5,\n        },\n        conW: {\n            backgroundColor: bgColor,\n        },\n        noDataText: {\n            color: '#888888',\n            textAlign: 'center',\n            paddingTop: 4,\n            paddingBottom: 4,\n        },\n        titleFlex: {\n            flex: 1,\n        },\n    });\n}\nexport default Table;\n","import React, { Fragment } from 'react';\nimport Text from './Text';\nexport default function Div({ children, ...otherProps }) {\n    if (!children) {\n        return null;\n    }\n    const someStr = React.Children.toArray(children).every((item) => {\n        // eslint-disable-next-line no-mixed-operators\n        return typeof item === 'string' || (item && item.type && item.type.displayName === 'Text');\n    });\n    if (someStr) {\n        return <Text color=\"text\" {...otherProps} children={children}/>;\n    }\n    return (<Fragment>\n      {React.Children.toArray(children)\n            .map((child, idx) => {\n            if (typeof child === 'string') {\n                return <Text {...otherProps} children={child} key={idx}/>;\n            }\n            if (!React.isValidElement(child)) {\n                return undefined;\n            }\n            return React.cloneElement(child, { key: idx, ...otherProps });\n        })\n            .filter(Boolean)}\n    </Fragment>);\n}\n","import React from 'react';\nimport { Text as BaseText } from 'react-native';\nimport { useTheme } from '@shopify/restyle';\nimport { isEmpty } from 'lodash';\nconst Text = (props) => {\n    const { color = 'text', children, style, ...others } = props;\n    const theme = useTheme();\n    const getColorScheme = () => {\n        // app.ts 包裹了ThemeProvider传递了theme\n        if (!isEmpty(theme.colors)) {\n            return theme.colors;\n        }\n        return {\n            [color]: '#ccc',\n        };\n    };\n    return (<BaseText style={[{ color: getColorScheme()[color] }, style]} {...others}>\n      {children}\n    </BaseText>);\n};\nText.displayName = 'Text';\nexport default Text;\n"],"names":["components","_react","_interopRequireDefault","_Table","_Button","obj","__esModule","createElement","columns","title","dataIndex","style","width","ellipsis","render","Fragment","size","bordered","textStyle","color","data","id","partName","partBrand","partModel","remark","rowKey","horizontal","source","headings","headingsList","Component","_jsx","Preview","_objectSpread","md","path","ButtonView","props","backgroundColor","textColor","borderColor","borderWidth","borderRadius","children","childStyle","rounded","buttonColor","type","disabled","loading","restProps","_objectWithoutProperties","_excluded","theme","useTheme","colors","func200","func400","func300","func600","white","black","rgb","string","alpha","gray200","buttonStyle","sizeStyle","styles","boxStyle","styleKey","concat","_jsxs","TouchableOpacity","testID","button","content","ActivityIndicator","icon","React","toArray","map","child","idx","Div","label","defaultProps","activeOpacity","StyleSheet","create","borderStyle","display","flexDirection","alignItems","justifyContent","marginRight","smallBox","paddingHorizontal","defaultBox","largeBox","small","marginVertical","fontSize","default","large","BodyRow","_ref","record","View","row","itm","val","indexOf","firstKey","split","secondKey","textEllipsize","numberOfLines","ellipsizeMode","length","firstLeftCell","cell","titleFlex","Text","selectable","alignContent","borderBottomWidth","borderRightWidth","borderLeftWidth","dark70","flex","_ref$horizontal","_ref2","bgColor","height","conTitle","contRight","borderRightColor","borderBottomColor","paddingTop","paddingBottom","conW","noDataText","textAlign","createStyles","background","primary_text","ScrollView","item","key","otherProps","every","displayName","_createElement","filter","Boolean","_props$color","others","BaseText","isEmpty","_defineProperty"],"sourceRoot":""}