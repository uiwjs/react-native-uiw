{"version":3,"file":"static/js/8013.d3eca646.chunk.js","mappings":"kQAOMA,EAAUC,EAAAA,GAAAA,IAAU,8KAWpBC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAuB,gFAKlCG,EAAkB,SAACC,EAAOC,EAAOC,GACrC,GAAIC,QAAQC,IAAIJ,EAAOC,GAAQ,CAC7B,IAAMI,EAAWF,QAAQG,IAAIN,EAAOC,GACpC,GAAiB,SAAbI,EACF,OAAO,EAET,GAAiB,UAAbA,EACF,OAAO,CAEX,CACA,OAAOH,CACT,EA+DA,IA7DgB,SAACK,GACf,IAAMC,GAAOC,EAAAA,EAAAA,QAAO,MACpB,OACE,UAACd,EAAO,CAACe,IAAKF,EAAK,WACjB,SAACX,EAAQ,CACPc,aAAa,EACbC,OAAQL,EAAOK,OACfC,cAAe,SAACC,EAAMC,EAAOC,GAC3B,GAAkB,YAAdF,EAAKG,MAAsBD,GAA0B,SAAhBA,EAAOC,MAAmB,iBAAiBC,KAAKJ,EAAKK,SAAU,CACtG,IAAMC,EAAQN,EAAKO,UAAYP,EAAKO,SAAS,GACzCD,GAASA,EAAME,YAA8C,SAAhCF,EAAME,WAAWC,aAChDH,EAAMC,SAAW,GAErB,CACF,EACAG,WAAY,CACVC,KAAM,YAAiC,IAAD,EAA7BC,EAAM,EAANA,OAAQZ,EAAI,EAAJA,KAASa,GAAK,YACRC,EAAkBD,EAA/B,aAAsBE,GAAI,OAAKF,EAAK,GAC5C,GAAID,KAAWI,EAAAA,EAAAA,IAAOF,GACpB,OAAO,2BAAUD,IAEnB,IAAMI,EAAoB,QAAhB,EAAGjB,EAAKkB,gBAAQ,aAAb,EAAeC,MAAMF,KAC5BG,GAASC,EAAAA,EAAAA,IAAUP,IAASQ,OAAOL,GACnCM,EAAQ9B,EAAOiB,WAAW,GAAD,OAAIU,IACnC,GAAIA,GAA2B,oBAAVG,EAAsB,CACzC,IAAMZ,EAAOlB,EAAO+B,KAAKJ,GAAQK,OAAS,GACpCvC,GAAQwC,EAAAA,EAAAA,IAAiBZ,GAC/B,OACE,SAAC,IAAU,CACTa,iBAAkB1C,EAAgBC,EAAO,oBAAoB,GAC7D0C,eAAgB3C,EAAgBC,EAAO,kBAAkB,GACzD2C,YAAa5C,EAAgBC,EAAO,eAAe,GACnD4C,eAAgB7C,EAAgBC,EAAO,kBAAkB,GACzD6C,SAAU9C,EAAgBC,EAAO,YAAY,GAC7C8C,OAAQ/C,EAAgBC,EAAO,UAAU,GACzC+C,WAAY/C,EAAM+C,WAClBC,QAAShD,EAAMiD,OAAS,eACxBxB,MAAM,2BAAUI,IAChBqB,KAAMzB,EAAK,UAEX,SAACY,EAAK,KAGZ,CACA,OAAO,2BAAUR,GACnB,MAGJ,SAAC,KAAO,CAACsB,MAAO,IAAI,SACjB,gBAAGC,EAAO,EAAPA,QAASC,EAAW,EAAXA,YAAW,OACtB,SAAC,KAAM,CACLC,MAAO,GACPC,QAAS,kBAAMF,GAAa,EAC5BG,OAAQ,kBAAM,SAAC,KAAI,CAACvC,KAAK,YAAa,EACtCmC,QAASA,GACD,MAKpB,C,2GC/FA,GACI5B,WAAY,CAAG,EACfc,KAAM,CAAC,EACP1B,OAAQ,q2M,WCAZ,EADW,WAAH,OAAS,SAAC6C,EAAA,GAAO,UAAKC,GAAO,C,oBCHrC,SAASC,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEpC,KAAO,mBACHoC,CACP,CACAF,EAAoBI,KAAO,WAAa,MAAO,EAAI,EACnDJ,EAAoBK,QAAUL,EAC9BA,EAAoBM,GAAK,MACzBC,EAAOC,QAAUR,C","sources":["component/Preview/index.js","react-native/lib/Icon/README.md","pages/components/icon/index.tsx","../node_modules/markdown-react-code-preview-loader/node_modules/@babel/standalone|sync"],"sourcesContent":["import MarkdownPreview from '@uiw/react-markdown-preview';\nimport styled from 'styled-components';\nimport { BackTop, Circle, Icon } from 'uiw';\nimport { getMetaId, isMeta, getURLParameters } from 'markdown-react-code-preview-loader';\nimport CodeLayout from 'react-code-preview-layout';\nimport { useRef } from 'react';\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  .w-rcpl-preview {\n    white-space: normal;\n  }\n  display: flex;\n  justify-content: center;\n`;\n\nconst Markdown = styled(MarkdownPreview)`\n  padding: 50px 50px 120px 50px;\n  max-width: 1024px;\n`;\n\nconst getBooleanValue = (param, field, defaultValue) => {\n  if (Reflect.has(param, field)) {\n    const newValue = Reflect.get(param, field);\n    if (newValue === 'true') {\n      return true;\n    }\n    if (newValue === 'false') {\n      return false;\n    }\n  }\n  return defaultValue;\n};\n\nconst Preview = (mdData) => {\n  const $dom = useRef(null);\n  return (\n    <Wrapper ref={$dom}>\n      <Markdown\n        disableCopy={true}\n        source={mdData.source}\n        rehypeRewrite={(node, index, parent) => {\n          if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n            const child = node.children && node.children[0];\n            if (child && child.properties && child.properties.ariaHidden === 'true') {\n              child.children = [];\n            }\n          }\n        }}\n        components={{\n          code: ({ inline, node, ...props }) => {\n            const { 'data-meta': meta, ...rest } = props;\n            if (inline || !isMeta(meta)) {\n              return <code {...props} />;\n            }\n            const line = node.position?.start.line;\n            const metaId = getMetaId(meta) || String(line);\n            const Child = mdData.components[`${metaId}`];\n            if (metaId && typeof Child === 'function') {\n              const code = mdData.data[metaId].value || '';\n              const param = getURLParameters(meta);\n              return (\n                <CodeLayout\n                  disableCheckered={getBooleanValue(param, 'disableCheckered', true)}\n                  disableToolbar={getBooleanValue(param, 'disableToolbar', false)}\n                  disableCode={getBooleanValue(param, 'disableCode', false)}\n                  disablePreview={getBooleanValue(param, 'disablePreview', false)}\n                  bordered={getBooleanValue(param, 'bordered', true)}\n                  copied={getBooleanValue(param, 'copied', true)}\n                  background={param.background}\n                  toolbar={param.title || '示例'}\n                  code={<code {...rest} />}\n                  text={code}\n                >\n                  <Child />\n                </CodeLayout>\n              );\n            }\n            return <code {...rest} />;\n          },\n        }}\n      />\n      <BackTop speed={500}>\n        {({ percent, scrollToTop }) => (\n          <Circle\n            width={50}\n            onClick={() => scrollToTop()}\n            format={() => <Icon type=\"arrow-up\" />}\n            percent={percent}\n          ></Circle>\n        )}\n      </BackTop>\n    </Wrapper>\n  );\n};\nexport default Preview;\n","\nexport default {\n    components: {  },\n    data: {},\n    source: \"Icon 图标\\n---\\n\\n图标组件通过 [`react-native-svg`](https://github.com/react-native-community/react-native-svg) 支持 svg 图标，基于这一特性封装图标组件库，它不是基于字体文件封装的组件，相比字体图标组件易于扩展体积较小。预览[所有的图标](https://uiwjs.github.io/icons)。\\n\\n![](https://user-images.githubusercontent.com/66067296/137710056-d7fe4b94-7b98-4e18-a235-5a4e70beaa05.png)<!--rehype:style=zoom: 33%;float: right; margin-left: 15px;-->\\n\\n### 基础示例\\n\\n```js\\nimport { Icon } from '@uiw/react-native';\\n\\nclass Demo extends Component {\\n  render() {\\n    return (\\n      <View>\\n        <Icon name='apple' size={46} color='#50CB42' />\\n        <Icon name='apple' size={46} fill='red' />\\n      </View>\\n    )\\n  }\\n}\\n```\\n\\n### 自定义按钮\\n\\n```js\\nimport { Icon } from '@uiw/react-native';\\n\\nclass Demo extends Component {\\n  render() {\\n    return (\\n      <Icon\\n        fill=\\\"red\\\"\\n        paths={[\\n          'M19 8h-1.26c-.19-.73-.48-1.42-.85-2.06l.94-.94a.996.996 0 0 0 0-1.41l-1.41-1.41a.996.996 0 0 0-1.41 0l-.94.94c-.65-.38-1.34-.67-2.07-.86V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.26c-.76.2-1.47.5-2.13.89L5 2.28a.972.972 0 0 0-1.36 0L2.28 3.64c-.37.38-.37.98 0 1.36l.87.87c-.39.66-.69 1.37-.89 2.13H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h1.26c.19.73.48 1.42.85 2.06l-.94.94a.996.996 0 0 0 0 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l.94-.94c.64.38 1.33.66 2.06.85V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1.26c.76-.2 1.47-.5 2.13-.89l.88.87c.37.37.98.37 1.36 0l1.36-1.36c.37-.38.37-.98 0-1.36l-.87-.87c.4-.65.7-1.37.89-2.13H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 7c-2.76 0-5-2.24-5-5s2.24-5 5-5v10z'\\n        ]}\\n        size={18}\\n        style={styles.icon}\\n      />\\n    )\\n  }\\n}\\n```\\n\\n### SVG 图标支持\\n\\n```js\\nimport { Icon } from '@uiw/react-native';\\n\\nconst xml = `\\n  <svg width=\\\"20\\\" height=\\\"20\\\" viewBox=\\\"0 0 20 20\\\">\\n    <path\\n      fill-rule=\\\"evenodd\\\"\\n      fill=\\\"#000\\\"\\n      d=\\\"M19 8h-1.26c-.19-.73-.48-1.42-.85-2.06l.94-.94a.996.996 0 0 0 0-1.41l-1.41-1.41a.996.996 0 0 0-1.41 0l-.94.94c-.65-.38-1.34-.67-2.07-.86V1c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1v1.26c-.76.2-1.47.5-2.13.89L5 2.28a.972.972 0 0 0-1.36 0L2.28 3.64c-.37.38-.37.98 0 1.36l.87.87c-.39.66-.69 1.37-.89 2.13H1c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h1.26c.19.73.48 1.42.85 2.06l-.94.94a.996.996 0 0 0 0 1.41l1.41 1.41c.39.39 1.02.39 1.41 0l.94-.94c.64.38 1.33.66 2.06.85V19c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-1.26c.76-.2 1.47-.5 2.13-.89l.88.87c.37.37.98.37 1.36 0l1.36-1.36c.37-.38.37-.98 0-1.36l-.87-.87c.4-.65.7-1.37.89-2.13H19c.55 0 1-.45 1-1V9c0-.55-.45-1-1-1zm-9 7c-2.76 0-5-2.24-5-5s2.24-5 5-5v10z\\\"\\n    />\\n  </svg>\\n`;\\n\\nclass Demo extends Component {\\n  render() {\\n    return <Icon xml={xml} />;\\n  }\\n}\\n```\\n\\n### 包中集成的所有图标\\n\\n⚠️ 此示例，只是在文档中预览 Icon 图标，并展示图标名称，也可以通过图标 web 官网，网站预览[所有的图标](https://uiwjs.github.io/icons)。\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true&noCode=true-->\\n```jsx\\nimport { useEffect } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport svgPaths from '@uiw/icons/fonts/w-icon.json';\\n\\nfunction Demo() {\\n  useEffect(()=>{\\n    const dv = document.createElement('div')\\n    dv.id='dv'\\n    dv.setAttribute('style',`\\n      width: 100px;\\n      padding: 4px 10px;\\n      border: 1px solid #fff;\\n      text-align: center;\\n      border-radius: 5px;\\n      background: #fff;\\n      box-shadow: 0 3px 6px -4px #0000001f, 0 6px 16px #00000014, 0 9px 28px 8px #0000000d;\\n      pointer-events: none;\\n      font-size: 12px;\\n      position: fixed;\\n      top: 70px;\\n      left: 0;\\n      right: 0;\\n      margin: 0 auto;\\n      z-index: 9;\\n      display: none;\\n      color: green;\\n    `)\\n    dv.innerText = '复制成功!'\\n    document.body.appendChild(dv)\\n  },[])\\n  const onClick = (keyname) => {\\n    if (window.clipboardData) {\\n      window.clipboardData.setData('text', `<Icon name=\\\"${keyname}\\\" />`);\\n      message()\\n    } else {\\n      (function (s) {\\n        document.oncopy = function (e) {\\n          e.clipboardData.setData('text', s);\\n          e.preventDefault();\\n          document.oncopy = null;\\n        };\\n      })(`<Icon name=\\\"${keyname}\\\" size={46} />`);\\n      document.execCommand('Copy');\\n      message()\\n    }\\n  }\\n  const message = () => {\\n    document.getElementById('dv').style.display = 'block';\\n    const timer = setTimeout(()=>{\\n      document.getElementById('dv').style.display = 'none';\\n      clearTimeout(timer)\\n    },3000)\\n  }\\n  return (\\n    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\\n      {Object.keys(svgPaths).map((keyname, idx) => {\\n        return (\\n          <div \\n            key={idx} \\n            onClick={()=>onClick(keyname)}\\n            style={{ \\n              display: 'flex',\\n              cursor: 'pointer', \\n              flexDirection: 'column', \\n              width: 180, \\n              paddingBottom: 14,\\n            }}\\n          >\\n            <svg viewBox=\\\"0 0 24 24\\\" width=\\\"21\\\">\\n              {svgPaths[keyname].map((path, pathIdx) => (\\n                <path d={path} key={pathIdx} fillRule=\\\"evenodd\\\"/>\\n              ))}\\n            </svg>\\n            <span style={{ color: '#757575' }}>{keyname}</span>\\n          </div>\\n        );\\n      })}\\n    </div>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|------|------|-----|------|\\n| `name` | 图标名称 | String | - |\\n| `fill` | 填充颜色 | String | `#000000` |\\n| `stroke` | 轮廓颜色 | String | - |\\n| `xml` | 传递 SVG xml 字符串，自定义图标 | String | - |\\n| `size` | 大小 | Number | 26 |\\n| `width` | 宽度(默认为`size`的值) | Number | 26 |\\n| `height` | 高度(默认为`size`的值) | Number | 26 |\\n\"\n  }","import Preview from 'src/component/Preview';\nimport md from '@uiw/react-native/lib/Icon/README.md';\n\nconst MD = () => <Preview {...md} />;\nexport default MD;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 50882;\nmodule.exports = webpackEmptyContext;"],"names":["Wrapper","styled","Markdown","MarkdownPreview","getBooleanValue","param","field","defaultValue","Reflect","has","newValue","get","mdData","$dom","useRef","ref","disableCopy","source","rehypeRewrite","node","index","parent","type","test","tagName","child","children","properties","ariaHidden","components","code","inline","props","meta","rest","isMeta","line","position","start","metaId","getMetaId","String","Child","data","value","getURLParameters","disableCheckered","disableToolbar","disableCode","disablePreview","bordered","copied","background","toolbar","title","text","speed","percent","scrollToTop","width","onClick","format","Preview","md","webpackEmptyContext","req","e","Error","keys","resolve","id","module","exports"],"sourceRoot":""}