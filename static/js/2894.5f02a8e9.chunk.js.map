{"version":3,"file":"static/js/2894.5f02a8e9.chunk.js","mappings":"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","sources":["../node_modules/react-native-web/dist/exports/TouchableOpacity/index.js","../node_modules/react-native-web/dist/exports/View/index.js","../node_modules/react-native-web/dist/modules/usePressEvents/PressResponder.js","../node_modules/react-native-web/dist/modules/usePressEvents/index.js","../node_modules/react-native-web/node_modules/@babel/runtime/helpers/esm/extends.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"activeOpacity\", \"delayPressIn\", \"delayPressOut\", \"delayLongPress\", \"disabled\", \"focusable\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"rejectResponderTermination\", \"style\"];\nimport * as React from 'react';\nimport { useCallback, useMemo, useState, useRef } from 'react';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePressEvents from '../../modules/usePressEvents';\nimport StyleSheet from '../StyleSheet';\nimport View from '../View';\n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n */\nfunction TouchableOpacity(props, forwardedRef) {\n  var activeOpacity = props.activeOpacity,\n      delayPressIn = props.delayPressIn,\n      delayPressOut = props.delayPressOut,\n      delayLongPress = props.delayLongPress,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      onLongPress = props.onLongPress,\n      onPress = props.onPress,\n      onPressIn = props.onPressIn,\n      onPressOut = props.onPressOut,\n      rejectResponderTermination = props.rejectResponderTermination,\n      style = props.style,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var hostRef = useRef(null);\n  var setRef = useMergeRefs(forwardedRef, hostRef);\n\n  var _useState = useState('0s'),\n      duration = _useState[0],\n      setDuration = _useState[1];\n\n  var _useState2 = useState(null),\n      opacityOverride = _useState2[0],\n      setOpacityOverride = _useState2[1];\n\n  var setOpacityTo = useCallback((value, duration) => {\n    setOpacityOverride(value);\n    setDuration(duration ? duration / 1000 + \"s\" : '0s');\n  }, [setOpacityOverride, setDuration]);\n  var setOpacityActive = useCallback(duration => {\n    setOpacityTo(activeOpacity !== null && activeOpacity !== void 0 ? activeOpacity : 0.2, duration);\n  }, [activeOpacity, setOpacityTo]);\n  var setOpacityInactive = useCallback(duration => {\n    setOpacityTo(null, duration);\n  }, [setOpacityTo]);\n  var pressConfig = useMemo(() => ({\n    cancelable: !rejectResponderTermination,\n    disabled,\n    delayLongPress,\n    delayPressStart: delayPressIn,\n    delayPressEnd: delayPressOut,\n    onLongPress,\n    onPress,\n\n    onPressStart(event) {\n      var isGrant = event.dispatchConfig != null ? event.dispatchConfig.registrationName === 'onResponderGrant' : event.type === 'keydown';\n      setOpacityActive(isGrant ? 0 : 150);\n\n      if (onPressIn != null) {\n        onPressIn(event);\n      }\n    },\n\n    onPressEnd(event) {\n      setOpacityInactive(250);\n\n      if (onPressOut != null) {\n        onPressOut(event);\n      }\n    }\n\n  }), [delayLongPress, delayPressIn, delayPressOut, disabled, onLongPress, onPress, onPressIn, onPressOut, rejectResponderTermination, setOpacityActive, setOpacityInactive]);\n  var pressEventHandlers = usePressEvents(hostRef, pressConfig);\n  return /*#__PURE__*/React.createElement(View, _extends({}, rest, pressEventHandlers, {\n    accessibilityDisabled: disabled,\n    focusable: !disabled && focusable !== false,\n    pointerEvents: disabled ? 'none' : undefined,\n    ref: setRef,\n    style: [styles.root, !disabled && styles.actionable, style, opacityOverride != null && {\n      opacity: opacityOverride\n    }, {\n      transitionDuration: duration\n    }]\n  }));\n}\n\nvar styles = StyleSheet.create({\n  root: {\n    transitionProperty: 'opacity',\n    transitionDuration: '0.15s',\n    userSelect: 'none'\n  },\n  actionable: {\n    cursor: 'pointer',\n    touchAction: 'manipulation'\n  }\n});\nvar MemoedTouchableOpacity = /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(TouchableOpacity));\nMemoedTouchableOpacity.displayName = 'TouchableOpacity';\nexport default MemoedTouchableOpacity;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nvar _excluded = [\"hrefAttrs\", \"onLayout\", \"onMoveShouldSetResponder\", \"onMoveShouldSetResponderCapture\", \"onResponderEnd\", \"onResponderGrant\", \"onResponderMove\", \"onResponderReject\", \"onResponderRelease\", \"onResponderStart\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onScrollShouldSetResponder\", \"onScrollShouldSetResponderCapture\", \"onSelectionChangeShouldSetResponder\", \"onSelectionChangeShouldSetResponderCapture\", \"onStartShouldSetResponder\", \"onStartShouldSetResponderCapture\"];\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextAncestorContext from '../Text/TextAncestorContext';\nimport { useLocaleContext, getLocaleDirection } from '../../modules/useLocale';\nvar forwardPropsList = Object.assign({}, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.defaultProps, forwardedProps.accessibilityProps, forwardedProps.clickProps, forwardedProps.focusProps, forwardedProps.keyboardProps, forwardedProps.mouseProps, forwardedProps.touchProps, forwardedProps.styleProps, {\n  href: true,\n  lang: true,\n  onScroll: true,\n  onWheel: true,\n  pointerEvents: true\n});\n\nvar pickProps = props => pick(props, forwardPropsList);\n\nvar View = /*#__PURE__*/React.forwardRef((props, forwardedRef) => {\n  var hrefAttrs = props.hrefAttrs,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.Children.toArray(props.children).forEach(item => {\n      if (typeof item === 'string') {\n        console.error(\"Unexpected text node: \" + item + \". A text node cannot be a child of a <View>.\");\n      }\n    });\n  }\n\n  var hasTextAncestor = React.useContext(TextAncestorContext);\n  var hostRef = React.useRef(null);\n\n  var _useLocaleContext = useLocaleContext(),\n      contextDirection = _useLocaleContext.direction;\n\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture,\n    onResponderEnd,\n    onResponderGrant,\n    onResponderMove,\n    onResponderReject,\n    onResponderRelease,\n    onResponderStart,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder,\n    onStartShouldSetResponderCapture\n  });\n  var component = 'div';\n  var langDirection = props.lang != null ? getLocaleDirection(props.lang) : null;\n  var componentDirection = props.dir || langDirection;\n  var writingDirection = componentDirection || contextDirection;\n  var supportedProps = pickProps(rest);\n  supportedProps.dir = componentDirection;\n  supportedProps.style = [styles.view$raw, hasTextAncestor && styles.inline, props.style];\n\n  if (props.href != null) {\n    component = 'a';\n\n    if (hrefAttrs != null) {\n      var download = hrefAttrs.download,\n          rel = hrefAttrs.rel,\n          target = hrefAttrs.target;\n\n      if (download != null) {\n        supportedProps.download = download;\n      }\n\n      if (rel != null) {\n        supportedProps.rel = rel;\n      }\n\n      if (typeof target === 'string') {\n        supportedProps.target = target.charAt(0) !== '_' ? '_' + target : target;\n      }\n    }\n  }\n\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps, {\n    writingDirection\n  });\n});\nView.displayName = 'View';\nvar styles = StyleSheet.create({\n  view$raw: {\n    alignItems: 'stretch',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    boxSizing: 'border-box',\n    display: 'flex',\n    flexBasis: 'auto',\n    flexDirection: 'column',\n    flexShrink: 0,\n    listStyle: 'none',\n    margin: 0,\n    minHeight: 0,\n    minWidth: 0,\n    padding: 0,\n    position: 'relative',\n    textDecoration: 'none',\n    zIndex: 0\n  },\n  inline: {\n    display: 'inline-flex'\n  }\n});\nexport default View;","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nvar DELAY = 'DELAY';\nvar ERROR = 'ERROR';\nvar LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\nvar NOT_RESPONDER = 'NOT_RESPONDER';\nvar RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\nvar RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\nvar RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\nvar RESPONDER_GRANT = 'RESPONDER_GRANT';\nvar RESPONDER_RELEASE = 'RESPONDER_RELEASE';\nvar RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\nvar Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: ERROR,\n    RESPONDER_TERMINATED: ERROR,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_INACTIVE_PRESS_START: {\n    DELAY: RESPONDER_ACTIVE_PRESS_START,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: ERROR\n  },\n  RESPONDER_ACTIVE_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_START: {\n    DELAY: ERROR,\n    RESPONDER_GRANT: ERROR,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n  },\n  ERROR: {\n    DELAY: NOT_RESPONDER,\n    RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n    RESPONDER_RELEASE: NOT_RESPONDER,\n    RESPONDER_TERMINATED: NOT_RESPONDER,\n    LONG_PRESS_DETECTED: NOT_RESPONDER\n  }\n});\n\nvar isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n\nvar isButtonRole = element => element.getAttribute('role') === 'button';\n\nvar isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n\nvar isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n\nvar isValidKeyPress = event => {\n  var key = event.key,\n      target = event.target;\n  var role = target.getAttribute('role');\n  var isSpacebar = key === ' ' || key === 'Spacebar';\n  return key === 'Enter' || isSpacebar && role === 'button';\n};\n\nvar DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n\nvar DEFAULT_PRESS_DELAY_MS = 50;\n/**\n * =========================== PressResponder Tutorial ===========================\n *\n * The `PressResponder` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press sould trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * In order to use `PressResponder`, do the following:\n *\n *     const pressResponder = new PressResponder(config);\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressResponder.getEventHandlers()} />\n *    );\n *\n * 3. Reset `PressResponder` when your component unmounts.\n *\n *    componentWillUnmount() {\n *      this.state.pressResponder.reset();\n *    }\n *\n * ==================== Implementation Details ====================\n *\n * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n *  │  │  ┌────────────┐  │  │\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n *  │  └──────────────────┘  │\n *  │       Out Region   o   │\n *  └────────────────────│───┘\n *                       └────── When the press is released outside the `HitRect`,\n *                               the responder is NOT eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onLongPress`. Only when the browser produces a\n * `click` event is `onPress` invoked.\n */\n\nexport default class PressResponder {\n  constructor(config) {\n    this._eventHandlers = null;\n    this._isPointerTouch = false;\n    this._longPressDelayTimeout = null;\n    this._longPressDispatched = false;\n    this._pressDelayTimeout = null;\n    this._pressOutDelayTimeout = null;\n    this._touchState = NOT_RESPONDER;\n    this.configure(config);\n  }\n\n  configure(config) {\n    this._config = config;\n  }\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n\n\n  reset() {\n    this._cancelLongPressDelayTimeout();\n\n    this._cancelPressDelayTimeout();\n\n    this._cancelPressOutDelayTimeout();\n  }\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n\n\n  getEventHandlers() {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n\n    return this._eventHandlers;\n  }\n\n  _createEventHandlers() {\n    var start = (event, shouldDelay) => {\n      event.persist();\n\n      this._cancelPressOutDelayTimeout();\n\n      this._longPressDispatched = false;\n      this._selectionTerminated = false;\n      this._touchState = NOT_RESPONDER;\n      this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n\n      this._receiveSignal(RESPONDER_GRANT, event);\n\n      var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n\n      if (shouldDelay !== false && delayPressStart > 0) {\n        this._pressDelayTimeout = setTimeout(() => {\n          this._receiveSignal(DELAY, event);\n        }, delayPressStart);\n      } else {\n        this._receiveSignal(DELAY, event);\n      }\n\n      var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n      this._longPressDelayTimeout = setTimeout(() => {\n        this._handleLongPress(event);\n      }, delayLongPress + delayPressStart);\n    };\n\n    var end = event => {\n      this._receiveSignal(RESPONDER_RELEASE, event);\n    };\n\n    var keyupHandler = event => {\n      var onPress = this._config.onPress;\n      var target = event.target;\n\n      if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n        end(event);\n        document.removeEventListener('keyup', keyupHandler);\n        var role = target.getAttribute('role');\n        var elementType = target.tagName.toLowerCase();\n        var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n\n        if (onPress != null && !isNativeInteractiveElement) {\n          onPress(event);\n        }\n      }\n    };\n\n    return {\n      onStartShouldSetResponder: event => {\n        var disabled = this._config.disabled;\n\n        if (disabled && isButtonRole(event.currentTarget)) {\n          event.stopPropagation();\n        }\n\n        if (disabled == null) {\n          return true;\n        }\n\n        return !disabled;\n      },\n      onKeyDown: event => {\n        var disabled = this._config.disabled;\n        var key = event.key,\n            target = event.target;\n\n        if (!disabled && isValidKeyPress(event)) {\n          if (this._touchState === NOT_RESPONDER) {\n            start(event, false); // Listen to 'keyup' on document to account for situations where\n            // focus is moved to another element during 'keydown'.\n\n            document.addEventListener('keyup', keyupHandler);\n          }\n\n          var role = target.getAttribute('role');\n          var isSpacebarKey = key === ' ' || key === 'Spacebar';\n\n          var _isButtonRole = role === 'button' || role === 'menuitem';\n\n          if (isSpacebarKey && _isButtonRole) {\n            // Prevent spacebar scrolling the window\n            event.preventDefault();\n          }\n\n          event.stopPropagation();\n        }\n      },\n      onResponderGrant: event => start(event),\n      onResponderMove: event => {\n        if (this._config.onPressMove != null) {\n          this._config.onPressMove(event);\n        }\n\n        var touch = getTouchFromResponderEvent(event);\n\n        if (this._touchActivatePosition != null) {\n          var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n\n          if (Math.hypot(deltaX, deltaY) > 10) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n      },\n      onResponderRelease: event => end(event),\n      onResponderTerminate: event => {\n        if (event.nativeEvent.type === 'selectionchange') {\n          this._selectionTerminated = true;\n        }\n\n        this._receiveSignal(RESPONDER_TERMINATED, event);\n      },\n      onResponderTerminationRequest: event => {\n        var _this$_config = this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress; // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n        // behavior will be prevented for non-mouse pointers.\n\n        if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n          return false;\n        }\n\n        if (cancelable == null) {\n          return true;\n        }\n\n        return cancelable;\n      },\n      // NOTE: this diverges from react-native in 3 significant ways:\n      // * The `onPress` callback is not connected to the responder system (the native\n      //  `click` event must be used but is dispatched in many scenarios where no pointers\n      //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n      //   `onPress{Start,End}` being called first.\n      // * The `onPress` callback is only be called on the first ancestor of the native\n      //   `click` target that is using the PressResponder.\n      // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n      onClick: event => {\n        var _this$_config2 = this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n\n        if (!disabled) {\n          // If long press dispatched, cancel default click behavior.\n          // If the responder terminated because text was selected during the gesture,\n          // cancel the default click behavior.\n          event.stopPropagation();\n\n          if (this._longPressDispatched || this._selectionTerminated) {\n            event.preventDefault();\n          } else if (onPress != null && event.altKey === false) {\n            onPress(event);\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      },\n      // If `onLongPress` is provided and a touch pointer is being used, prevent the\n      // default context menu from opening.\n      onContextMenu: event => {\n        var _this$_config3 = this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n\n        if (!disabled) {\n          if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n            event.preventDefault();\n            event.stopPropagation();\n          }\n        } else {\n          if (isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n        }\n      }\n    };\n  }\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n\n\n  _receiveSignal(signal, event) {\n    var prevState = this._touchState;\n    var nextState = null;\n\n    if (Transitions[prevState] != null) {\n      nextState = Transitions[prevState][signal];\n    }\n\n    if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n      return;\n    }\n\n    if (nextState == null || nextState === ERROR) {\n      console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n    } else if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n\n      this._touchState = nextState;\n    }\n  }\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n\n\n  _performTransitionSideEffects(prevState, nextState, signal, event) {\n    if (isTerminalSignal(signal)) {\n      // Pressable suppression of contextmenu on windows.\n      // On Windows, the contextmenu is displayed after pointerup.\n      // https://github.com/necolas/react-native-web/issues/2296\n      setTimeout(() => {\n        this._isPointerTouch = false;\n      }, 0);\n      this._touchActivatePosition = null;\n\n      this._cancelLongPressDelayTimeout();\n    }\n\n    if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n      var onLongPress = this._config.onLongPress; // Long press is not supported for keyboards because 'click' can be dispatched\n      // immediately (and multiple times) after 'keydown'.\n\n      if (onLongPress != null && event.nativeEvent.key == null) {\n        onLongPress(event);\n        this._longPressDispatched = true;\n      }\n    }\n\n    var isPrevActive = isActiveSignal(prevState);\n    var isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n      var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n\n      if (onPress != null) {\n        var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n\n        if (!isPressCanceledByLongPress) {\n          // If we never activated (due to delays), activate and deactivate now.\n          if (!isNextActive && !isPrevActive) {\n            this._activate(event);\n\n            this._deactivate(event);\n          }\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event) {\n    var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n    var touch = getTouchFromResponderEvent(event);\n    this._touchActivatePosition = {\n      pageX: touch.pageX,\n      pageY: touch.pageY\n    };\n\n    if (onPressStart != null) {\n      onPressStart(event);\n    }\n\n    if (onPressChange != null) {\n      onPressChange(true);\n    }\n  }\n\n  _deactivate(event) {\n    var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n\n    function end() {\n      if (onPressEnd != null) {\n        onPressEnd(event);\n      }\n\n      if (onPressChange != null) {\n        onPressChange(false);\n      }\n    }\n\n    var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n\n    if (delayPressEnd > 0) {\n      this._pressOutDelayTimeout = setTimeout(() => {\n        end();\n      }, delayPressEnd);\n    } else {\n      end();\n    }\n  }\n\n  _handleLongPress(event) {\n    if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n      this._receiveSignal(LONG_PRESS_DETECTED, event);\n    }\n  }\n\n  _cancelLongPressDelayTimeout() {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout() {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout() {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n\n}\n\nfunction normalizeDelay(delay, min, fallback) {\n  if (min === void 0) {\n    min = 0;\n  }\n\n  if (fallback === void 0) {\n    fallback = 0;\n  }\n\n  return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n}\n\nfunction getTouchFromResponderEvent(event) {\n  var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n\n  return event.nativeEvent;\n}","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport PressResponder from './PressResponder';\nimport { useDebugValue, useEffect, useRef } from 'react';\nexport default function usePressEvents(hostRef, config) {\n  var pressResponderRef = useRef(null);\n\n  if (pressResponderRef.current == null) {\n    pressResponderRef.current = new PressResponder(config);\n  }\n\n  var pressResponder = pressResponderRef.current; // Re-configure to use the current node and configuration.\n\n  useEffect(() => {\n    pressResponder.configure(config);\n  }, [config, pressResponder]); // Reset the `pressResponder` when cleanup needs to occur. This is\n  // a separate effect because we do not want to rest the responder when `config` changes.\n\n  useEffect(() => {\n    return () => {\n      pressResponder.reset();\n    };\n  }, [pressResponder]);\n  useDebugValue(config);\n  return pressResponder.getEventHandlers();\n}","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}"],"names":["_excluded","TouchableOpacity","props","forwardedRef","activeOpacity","delayPressIn","delayPressOut","delayLongPress","disabled","focusable","onLongPress","onPress","onPressIn","onPressOut","rejectResponderTermination","style","rest","_objectWithoutPropertiesLoose","hostRef","useRef","setRef","useMergeRefs","_useState","useState","duration","setDuration","_useState2","opacityOverride","setOpacityOverride","setOpacityTo","useCallback","value","setOpacityActive","setOpacityInactive","pressConfig","useMemo","cancelable","delayPressStart","delayPressEnd","onPressStart","event","isGrant","dispatchConfig","registrationName","type","onPressEnd","pressEventHandlers","usePressEvents","React","View","_extends","accessibilityDisabled","pointerEvents","undefined","ref","styles","root","actionable","opacity","transitionDuration","StyleSheet","transitionProperty","userSelect","cursor","touchAction","MemoedTouchableOpacity","displayName","forwardPropsList","Object","assign","forwardedProps","href","lang","onScroll","onWheel","hrefAttrs","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","hasTextAncestor","TextAncestorContext","contextDirection","useLocaleContext","direction","useElementLayout","useResponderEvents","component","langDirection","getLocaleDirection","componentDirection","dir","writingDirection","supportedProps","pick","pickProps","view$raw","inline","download","rel","target","charAt","platformMethodsRef","usePlatformMethods","createElement","alignItems","backgroundColor","border","boxSizing","display","flexBasis","flexDirection","flexShrink","listStyle","margin","minHeight","minWidth","padding","position","textDecoration","zIndex","DELAY","ERROR","LONG_PRESS_DETECTED","NOT_RESPONDER","RESPONDER_ACTIVE_LONG_PRESS_START","RESPONDER_ACTIVE_PRESS_START","RESPONDER_INACTIVE_PRESS_START","RESPONDER_RELEASE","RESPONDER_TERMINATED","Transitions","freeze","RESPONDER_GRANT","isActiveSignal","signal","isButtonRole","element","getAttribute","isPressStartSignal","isValidKeyPress","key","role","PressResponder","config","_classCallCheck","this","_eventHandlers","_isPointerTouch","_longPressDelayTimeout","_longPressDispatched","_pressDelayTimeout","_pressOutDelayTimeout","_touchState","configure","_createClass","_config","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","_createEventHandlers","_this","start","shouldDelay","persist","_selectionTerminated","nativeEvent","_receiveSignal","normalizeDelay","setTimeout","_handleLongPress","end","keyupHandler","document","removeEventListener","elementType","tagName","toLowerCase","currentTarget","stopPropagation","onKeyDown","addEventListener","preventDefault","onPressMove","touch","getTouchFromResponderEvent","_touchActivatePosition","deltaX","pageX","deltaY","pageY","Math","hypot","_this$_config","onClick","_this$_config2","altKey","onContextMenu","_this$_config3","defaultPrevented","prevState","nextState","console","error","_performTransitionSideEffects","_this2","isTerminalSignal","isPrevActive","isNextActive","_activate","_deactivate","_this$_config4","_onLongPress","_this$_config5","onPressChange","_this$_config6","clearTimeout","delay","min","fallback","max","_event$nativeEvent","changedTouches","touches","length","pressResponderRef","current","pressResponder","useEffect","reset","useDebugValue","getEventHandlers","bind","i","arguments","source","prototype","hasOwnProperty","call","apply"],"sourceRoot":""}